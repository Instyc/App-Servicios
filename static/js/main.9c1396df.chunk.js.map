{"version":3,"sources":["componentes/Chat/Miniatura.png","componentes/Estilos.js","Estados/AplicacionEstado.js","componentes/Sesion/InicioSesion.js","componentes/Notificaciones/NotificacionesNav.js","componentes/Nav.js","componentes/Footer.js","componentes/Categoria/Filtro.js","componentes/AlertaSi_No.js","componentes/Estrellas.js","componentes/AlertaMensaje.js","componentes/ContactarProveedor.js","componentes/Categoria/FilaPublicacion.js","componentes/Categoria/Categoria.js","componentes/Inicio/Inicio.js","componentes/Publicacion/ProveedorInfo.js","componentes/Publicacion/ReportarPublicacion.js","componentes/Publicacion/PublicacionInfo.js","componentes/Publicacion/Opiniones.js","componentes/Publicacion/Publicacion.js","componentes/SubirImagen.js","componentes/SeleccionarServicio.js","componentes/Proveedor/ModificarPerfilProveedor.js","componentes/Proveedor/MiPerfil.js","componentes/Publicacion/CrearPublicacion.js","componentes/GestionAdministrador/VerificarIdentidad.js","componentes/GestionAdministrador/GestionarReportes.js","componentes/GestionAdministrador/PestanaReportes.js","componentes/Sesion/Registrar.js","componentes/Publicacion/MisPublicaciones.js","componentes/Footer/PreguntasFrecuentes.js","componentes/Footer/SobreNosotros.js","componentes/Proveedor/VerificarMiIdentidad.js","componentes/Notificaciones/RealizarOpinion.js","componentes/Notificaciones/Notificaciones.js","componentes/Chat/ComponentesChat/PhotoMessage/PhotoMessage.js","componentes/Chat/ComponentesChat/FileMessage/FileMessage.js","componentes/Chat/ComponentesChat/SystemMessage/SystemMessage.js","componentes/Chat/ComponentesChat/LocationMessage/LocationMessage.js","componentes/Chat/ComponentesChat/SpotifyMessage/SpotifyMessage.js","componentes/Chat/ComponentesChat/ReplyMessage/ReplyMessage.js","componentes/Chat/ComponentesChat/Avatar/Avatar.js","componentes/Chat/ComponentesChat/MeetingMessage/MeetingMessage.js","componentes/Chat/ComponentesChat/MessageBox/MessageBox.js","componentes/Chat/ComponentesChat/ChatItem/ChatItem.js","componentes/Chat/ComponentesChat/ChatList/ChatList.js","componentes/Chat/ComponentesChat/MessageList/MessageList.js","componentes/Chat/ComponentesChat/Input/Input.js","componentes/Chat/ComponentesChat/Button/Button.js","componentes/Chat/ComponentesChat/Navbar/Navbar.js","componentes/Chat/ComponentesChat/Dropdown/Dropdown.js","componentes/Chat/ComponentesChat/SideBar/SideBar.js","componentes/Chat/ComponentesChat/Popup/Popup.js","componentes/Chat/ComponentesChat/MeetingItem/MeetingItem.js","componentes/Chat/ComponentesChat/MeetingList/MeetingList.js","componentes/Chat/Chat.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Estilos","makeStyles","theme","mostrarFlex","display","justifyContent","alignItems","flexWrap","padding","fondo","minHeight","proveedorSticky","position","top","marginBottom","marginTop","margenArriba","padding2","filaPublicacion","background","imagenPublicacion","borderRadius","objectFit","border","width","height","margin","gridRegistro","maxWidth","inputAncho","papelFondo","boxShadow","shadows","spacing","backgroundColor","pantallaMedia","minWidth","botonFijo","left","transform","zIndex","button","textTransform","margenAuto","reporte","botonesNav","textDecoration","color","palette","secondary","main","EstiloMovil","EstiloPC","EstiloLink","contrastText","EstiloVacio","Categoria","paddingTop","BotonSolicitar","BotonSolicitarMovil","estadoInicial","servidor","ruta","jwt","publico","guardar","imagen_predeterminada","datosSesion","apellido","blocked","confirmed","created_at","descripcion","dni","email","estado","fecha_creacion","id","mostrar_telefono","nombre","permiso","provider","role","name","description","type","telefono","tipo","ubicacion","updated_at","username","identidad_verificada","imagenes_dni","reducer","state","action","valor","value","ObtenerEstadoAplicacion","createContext","ProveerEstadoAplicacion","children","useReducer","dispatch","Provider","IniciarSesion","mensaje","classes","useContext","useState","open","setOpen","cargando","setcargando","alerta","setalerta","pwd_olvidada","setpwd_olvidada","contrasena","datos","setdatos","handleClose","cambiarInput","e","target","campo","Link","href","style","onClick","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Grid","container","direction","justify","item","xs","Typography","variant","component","align","form","TextField","onChange","label","required","Divider","Hidden","xlDown","hidden","LinearProgress","console","log","axios","post","headers","then","response","data","catch","error","identifier","password","user","localStorage","setItem","JSON","stringify","err","parse","request","message","messages","size","to","NotificacionesNav","plegarNoti","notificaciones","length","map","noti","i","key","MenuItem","solicitud","titulo","datos_notificacion","emisor","PrimarySearchAppBar","history","useHistory","despPerf","setdespPerf","despMenu","setdespMenu","despNoti","setdespNoti","traerNotificaciones","settraerNotificaciones","tipoUsuario","setTipoUsuario","setnotificaciones","mensajesnoleidos","setmensajesnoleidos","useEffect","sesion","getItem","sesionObjeto","auth","get","chats_","filter","chat","receptor","cantidad","chat_","noleido_emisor","noleido_receptor","mensajesNoleidos","reverse","plegarPerfil","plegarMenu","flexGrow","AppBar","Toolbar","fontFamily","fontSize","src","alignContent","IconButton","event","currentTarget","Badge","badgeContent","Notifications","Menu","anchorEl","keepMounted","Boolean","Chat","edge","aria-label","aria-haspopup","AccountCircle","ListItemIcon","PriorityHigh","push","ExitToApp","hambur","Footer","contactanos","setcontactanos","bottom","sm","Facebook","Instagram","Filtro","tipoPublicacion","settipoPublicacion","servicios","agregarSeleccionado","buscarServicios","inputBusqueda","setinputBusqueda","settipo","Card","CardContent","FormControlLabel","control","Checkbox","checked","servicio","md","lg","SeleccionarServicio","onKeyDown","fullWidth","hecho_noHecho","setHecho_noHecho","seleccion","setSeleccion","Chip","clickable","icon","Done","Clear","Alerta","funcionAceptar","boole","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Puntuacion","clickeable","cambiarValor","Rating","readOnly","precision","props","elevation","AlertaMensaje","setabrir","abrir","reason","Snackbar","autoHideDuration","severity","BotonContratar","fijo","esDePerfil","setmensaje","categoria","setcategoria","arregloCategorias","setarregloCategorias","cat","arrCat","hasOwnProperty","IDS","botonNoF","startIcon","Mail","alt","imagen_perfil","onSubmit","preventDefault","cat_selecc","cat_","idP","idS","peticion","contenido","enviado_por","alert","FormControl","InputLabel","Select","labelId","multiline","disabled","FilaPublicacion","contactar","buscarSolicitudes","resenas","precioPresupuesto","setPrecioPresupuesto","noMostrar","setnoMostrar","preguntarPausa","setpreguntarPausa","preguntarEliminar","setpreguntarEliminar","promedio","setpromedio","precio_estimado","imagenes","estrellas","Usuario_id","Servicio_id","pausado","datosPagina","setdatosPagina","x","undefined","total","resena","proveedor","recomendacion","Alert","bloqueado","hoy","Date","now","modificado","parseInt","publicacionVencida","url","Tooltip","title","Pausa","put","prevState","delete","overflow","textOverflow","textJustify","WebkitLineClamp","useParams","serviciosSeleccionados","setServiciosSeleccionados","setservicios","solicitudes","setsolicitudes","resenas_servicio","setresenas_servicio","filtro","ids_","servicio_","servicios_resena","serv_","Paper","encontrado","some","elemento","arreglo","Inicio","categorias","setcategorias","imagen","formats","thumbnail","ProveedorInfo","datosPerfil","copiado","setcopiado","DatosPerfil","setDatosPerfil","perfil","ids_categorias","ids_consultas","buscarCategorias","List","subheader","ListSubheader","Categorias","Phone","aux","document","createElement","setAttribute","body","appendChild","select","execCommand","removeChild","copiarAlPortapapeles","ListItem","ListItemText","primary","ExpandLess","ExpandMore","Collapse","unmountOnExit","disablePadding","ReportarPublicacion","abrirAlerta","motivos","setmotivos","motivosSeleccionados","setmotivosSeleccionados","setdescripcion","ComprobarReporte","fecha","reporte_conjunto","_descripcion","descripcion_","motivo","getDate","getMonth","getFullYear","motivo_","Solicitud_id","accion","FormGroup","Motivo","esta","seleccionarMotivo","PublicacionInfo","setimagenes","precio","estrella","DatosPagina","setDatosPagina","img","original","Breadcrumbs","separator","items","Opiniones","opiniones","setopiniones","promedioEstrellas","setpromedioEstrellas","servicio_id","opi","register","number","index","totalSec","opinion","Resena","square","format","Publicacion","setdatosPerfil","Categoria_id","obtenerUsuario","Container","SingleFileAutoSubmit","funcionSetImagen","ids","archivos","setarchivos","archivosSubidos","setarchivosSubidos","dat","file","imagenUrl","fetch","res","arrayBuffer","buf","File","arch","hacerArchivo","Fragment","getUploadParams","meta","onChangeStatus","status","maxFiles","initialFiles","multiple","maxSizeBytes","canCancel","accept","inputWithFilesContent","inputContent","styles","dropzone","dropzoneActive","borderColor","seleccionado","ModificarPerfilProveedor","controlGuardar","setcontrolGuardar","setserviciosSeleccionados","imagenesBorradas","setimagenesBorradas","imagenesSubidas","setimagenesSubidas","pasarImagenes","pasar","imagenes_proveedor","itemserv","servicioSesion","cambiarCheckbox","_id_","archivosNuevos","archivosBorrados","indx","Number","formData","FormData","append","usr","subirImagenes","datos_ayuda","setTimeout","SubirImagen","subidas","f","alinearInputs","j","k","MiPerfil","CrearPublicacion","modificar","setTitulo","modificarInput","report","modificarBloqueadoReporte","estaServicio","servicios_id","maxLength","categoriaSeleccionada","servicioSeleccionado","serv","botones","VerificarIdentidad","usuariosVerificar","setusuariosVerificar","actualizarUsuario","usuario_id","usuario","Solicitud","DesplegarInformacion","enviarDatos","aceptado","leido","espera_verificacion","images","thumbnailWidth","thumbnailHeight","GestionarReportes","estadoReporte","reportes","modificarReporte","Reporte","split","setaccion","actualizarReporte","notificacion","Administrador_id","cambiarVariableBloqueado","bool","_id","FormLabel","RadioGroup","row","Radio","datosNoti","esRespuesta","ParteNuevos","ParteEspera_Historial","notif","TabPanel","other","Box","p","a11yProps","useStyles","root","paper","backdrop","drawer","PestanaReportes","setValue","setreportes","Tabs","newValue","scrollButtons","indicatorColor","textColor","Tab","CircularProgress","Registrar","registrar","mensajeAlerta","setmensajeAlerta","tituloPagina","settituloPagina","ImagenPerfil","setImagenPerfil","contrasena_rep","soyProveedor","setSoyProveedor","subirImagen","search","enviarPut","OkProveedor","MisPublicaciones","setTituloPagina","PreguntasFrecuentes","React","pregunta","respuesta","informacion","fila","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","SobreNosotros","VerificarMiIdentidad","DNI","setDNI","ImagenDNI","setImagenDNI","imgs","i_dni","guardarDatos","String","RealizarOpinion","eliminarNotificacion","valorEstrella","setValorEstrella","settitulo","seleccInic","servicios_","votos_positivos","votos_negativos","yaEsta","srv_","seleccionarServicio","iconos","id_","definirLeido","red","Circle","require","PhotoMessage","progressOptions","strokeWidth","trailColor","trailWidth","step","circle","path","Math","round","setText","this","uri","onOpen","onLoad","onError","onPhotoError","download","click","onDownload","loading","progress","options","initialAnimate","containerClassName","text","Component","defaultProps","FileMessage","Function","bind","classNames","SystemMessage","LocationMessage","center","replace","latitude","longitude","markerColor","zoom","apiKey","buildURL","mapURL","staticURL","SpotifyMessage","formBody","view","property","encodedKey","encodeURIComponent","encodedValue","join","toUrl","frameBorder","allowtransparency","ReplyMessage","photoURL","titleColor","loadedAvatars","Avatar","requestImage","_isMounted","indexOf","self","loaded","setState","onload","onerror","str","hash","charCodeAt","colour","toString","substr","isLazyImage","lazyLoadingImage","isLoaded","letterItem","stringToColour","letter","sideElement","MeetingMessage","toogle","date","dateString","subject","collapseTitle","dataSource","participants","onMeetingTitleClick","onMeetingVideoLinkClick","PARTICIPANT_LIMIT","participantsLimit","dateText","isNaN","toggleClick","slice","avatar","avatars","record","time","savedBy","avatarFlexible","onAvatarError","MessageBox","nextProps","focus","refs","scrollIntoView","block","behavior","onMessageFocused","positionCls","thatAbsoluteTime","test","ref","renderAddCmp","notch","onContextMenu","forwarded","onForwardClick","replyButton","onReplyClick","onTitleClick","reply","onReplyMessageClick","meeting","onMeetingMessageClick","copiableDate","data-text","xmlns","viewBox","d","y","result","dx","dy","stdDeviation","in2","mode","ChatItem","statusColorType","statusColor","statusText","subtitle","unread","ChatList","cmpRef","MessageList","scrollBottom","downButton","loadRef","onScroll","mlistRef","toBottomHeight","scrollTop","scrollHeight","lockable","offsetHeight","getBottom","checkScroll","onDownButtonClick","toBottom","downButtonBadge","Input","maxlength","onMaxLengthExceed","input","substring","autoHeight","maxHeight","FAKE_EVENT","autofocus","leftButtons","inputRef","placeholder","defaultValue","inputStyle","onCopy","onCut","onPaste","onBlur","onFocus","onSelect","onReset","onKeyPress","onKeyUp","rightButtons","Button","buttonRef","float","Navbar","right","Dropdown","show","buttonProps","animationType","animationPosition","onMouseDown","Object","SideBar","Popup","renderHeader","header","headerButtons","renderContent","renderFooter","footerButtons","MeetingItem","AVATAR_LIMIT","avatarLimit","subjectLimit","onShareClick","closable","onCloseClick","onMeetingClick","MeetingList","chats","setchats","mensajes","setmensajes","chatSeleccionado","setchatSeleccionado","confirmacion","setconfirmacion","deshabilitado","setdeshabilitado","setcontenido","atras","setatras","agregarMensaje","img_emisor","img_receptor","obj_noleido","vari","msjs","img_categoria","img_solicitud","sort","a","b","getTime","obj_leido","actualizarMensajes","StarRate","shiftKey","charCode","createMuiTheme","TemaServia","App","setaux","ThemeProvider","CssBaseline","exact","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","Inicial","ReactDOM","render","getElementById","URL","process","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9c1396df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Miniatura.f4e4e06b.png\";","import { makeStyles } from '@material-ui/core/styles';\r\n//Componente que contiene todos los estilos que se utilizan en la página\r\nconst Estilos = makeStyles((theme) => ({\r\n    mostrarFlex: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        padding: 10,\r\n    },\r\n    fondo:{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        padding: 10, \r\n        minHeight:\"calc(100vh - 130px)\",\r\n    },\r\n    proveedorSticky:{\r\n        display: 'scroll',\r\n        position: 'sticky',\r\n        top: 10,\r\n        flexWrap: 'wrap',\r\n        marginBottom: 10,\r\n        marginTop:10\r\n    },\r\n    margenArriba:{\r\n        marginTop: 10,\r\n    },\r\n    padding:{\r\n        padding: 20\r\n    },\r\n    padding2:{\r\n        padding: 10\r\n    },\r\n    filaPublicacion:{\r\n        padding: 10,\r\n        marginTop: 10,\r\n        background: \"rgba(214, 215, 204, 100)\"\r\n    },\r\n    imagenPublicacion:{\r\n        borderRadius: \"6px\",\r\n        objectFit: \"cover\",\r\n        border: \"1px solid #000\",\r\n        width: 170,\r\n        height: 170,\r\n        margin: \"auto\",\r\n        marginBottom: 15,\r\n        marginTop: 15\r\n    },\r\n    gridRegistro:{\r\n        maxWidth:550, \r\n        padding: 20,\r\n        marginBottom: 10,\r\n    },\r\n    inputAncho:{\r\n        width: \"100%\",\r\n    },\r\n    papelFondo:{\r\n        border: '1px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        backgroundColor: \"#d7d6d9\"//theme.palette.secondary.dark\r\n    },\r\n    pantallaMedia:{\r\n        maxWidth: 800, \r\n        minWidth: 360,\r\n    },\r\n    botonFijo: {\r\n        display: \"scroll\",\r\n        position: \"fixed\",\r\n        left: \"50%\",\r\n        top: \"calc(100% - 80px)\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        zIndex: 100\r\n    },\r\n    button:{\r\n        textTransform: \"none\"\r\n    },\r\n    margenAuto:{\r\n        margin: \"auto\"\r\n    },\r\n    reporte:{\r\n        padding: 10,\r\n        marginTop: 10,\r\n    },\r\n    botonesNav:{\r\n        textDecoration:\"none\",\r\n        color: theme.palette.secondary.main,\r\n        display: 'inline',\r\n        '@media (max-width:1075px)': {\r\n          display: 'none',\r\n        },\r\n    },\r\n    EstiloMovil:{\r\n        display: 'none',\r\n        '@media (max-width:1075px)': {\r\n            display: 'inline',\r\n        },\r\n    },\r\n    EstiloPC:{\r\n    display: 'inline',\r\n    '@media (max-width:1075px)': {\r\n        display: 'none',\r\n    },\r\n    },\r\n    EstiloLink:{\r\n        textDecoration:\"none\",\r\n        color: theme.palette.secondary.contrastText\r\n    },\r\n    EstiloVacio:{\r\n        \r\n    },\r\n    Categoria: {\r\n        width:100,\r\n        height:100,\r\n        padding:0,\r\n        margin:\"auto\",\r\n        paddingTop:20\r\n    },\r\n    BotonSolicitar:{\r\n        display: 'inline',\r\n        '@media (max-width:1075px)': {\r\n            display: 'none',\r\n        },\r\n        position: \"absolute\",\r\n        left: \"90%\",\r\n        top: \"35px\",\r\n        transform: \"translate(-70%, -50%)\",\r\n        zIndex: 1000,\r\n        width: \"195px\",\r\n    },\r\n    BotonSolicitarMovil:{\r\n        display: 'none',\r\n        '@media (max-width:1075px)': {\r\n            display: 'inline',\r\n        },\r\n        position: \"absolute\",\r\n        left: \"90%\",\r\n        top: \"35px\",\r\n        transform: \"translate(-70%, -50%)\",\r\n        zIndex: 1000,\r\n    },\r\n    \r\n}));\r\n\r\nexport default Estilos;","import React, { useReducer, useEffect, createContext} from \"react\";\r\n//window.location.origin\r\n//import Icono from '/Icono3.png'\r\n\r\n//Este componente nos sirve para obtener los datos del usuario de la sesión actual en otros componentes.\r\n//servidor: es la ruta del servidor en donde se encuentra alojado el back-end del sistema\r\n//ruta: es una porción de la ruta que utilizamos para poder visualizar el front-end de manera correcta\r\n//jwt: JSON Web Token\r\n//publico: utilizado en los componentes en donde se permite acceder sin estar logueado, para ello se lo setea en true\r\n//imagen_predeterminada: es la ruta de la imagen que se muestra cuando el usuario no cargó una imagen, ya sea de perfil o de una publicación\r\n//datosSesion: son todos los datos del usuario\r\nconst estadoInicial = {\r\n    servidor: \"https://prueba-3.herokuapp.com\",\r\n    ruta: \"/App-Servicios\",\r\n    jwt:\"\",\r\n    publico: false,\r\n    guardar: false,\r\n    imagen_predeterminada: \"/App-Servicios/Icono4.png\",\r\n    datosSesion:{\r\n        apellido: \"\",\r\n        blocked: \"\",\r\n        confirmed: false,\r\n        created_at: \"\",\r\n        descripcion: \"\",\r\n        dni: \"\",\r\n        email: \"\",\r\n        estado: false,\r\n        fecha_creacion: \"\",\r\n        id: null,\r\n        mostrar_telefono: false,\r\n        nombre: \"\",\r\n        permiso: 0,\r\n        provider: \"local\",\r\n        role: {\r\n            id: 1, name: \"Authenticated\", \r\n            description: \"Default role given to authenticated user.\", \r\n            type: \"authenticated\"\r\n        },\r\n        telefono: \"\",\r\n        tipo: 0,\r\n        ubicacion: \"\",\r\n        updated_at: \"\",\r\n        username: \"\",\r\n        identidad_verificada: false,\r\n        imagenes_dni: []\r\n    }\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    let valor = action.value;\r\n\r\n    switch (action.type) {\r\n        case \"setDatos\":\r\n            return {...state, datosSesion: valor};\r\n        case \"setJwt\":\r\n            return {...state, jwt: valor};\r\n        case \"setGuardar\":\r\n            return {...state, guardar: valor};\r\n        case \"setPublico\":\r\n            return {...state, publico: valor};\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nconst ObtenerEstadoAplicacion = createContext(estadoInicial);\r\n\r\nfunction ProveerEstadoAplicacion({ children }) {\r\n    const [state, dispatch] = useReducer(reducer, estadoInicial);\r\n\r\n    return (\r\n        <ObtenerEstadoAplicacion.Provider value={{ state, dispatch }}>\r\n            {children}\r\n        </ObtenerEstadoAplicacion.Provider>\r\n    );\r\n}\r\n\r\nexport { ObtenerEstadoAplicacion, ProveerEstadoAplicacion };\r\n","import React, {useContext, useState} from 'react';\r\n//Material UI \r\nimport {Grid, Link as LinkMUI,  LinearProgress, Modal, Backdrop, Fade, Typography, TextField, Hidden, Button, Divider, } from '@material-ui/core';\r\n\r\n//Librerias\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nimport Estilos from '../Estilos.js'\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Componente utilizado para cuando se quiere iniciar sesión\r\nexport default function IniciarSesion({mensaje}) {\r\n  const classes = Estilos();\r\n  const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n  const [open, setOpen] = useState(false);\r\n  const [cargando, setcargando] = useState(false);\r\n  const [alerta, setalerta] = useState(\"\");\r\n  const [pwd_olvidada, setpwd_olvidada] = useState(false);\r\n\r\n  //Los datos inician vacíos\r\n  const [datos, setdatos] = useState({\r\n    email:\"\",\r\n    contrasena:\"\"\r\n  });\r\n\r\n  //Funcionamiento de la ventana modal\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  //Ejecutado cada vez que se ingresa algún valor en los campos\r\n  const cambiarInput = (e) =>{   \r\n    let valor = e.target.value;\r\n    let campo = e.target.name;\r\n    setdatos({\r\n        ...datos,\r\n        [campo]: valor\r\n    })        \r\n  }\r\n  \r\n  //Función ejecutada al presionar el botón de iniciar sesión\r\n  const iniciarSesion = () =>{\r\n    setcargando(true)\r\n\r\n    if(!pwd_olvidada){\r\n      axios\r\n      .post(state.servidor+\"/auth/local/\", {\r\n        identifier: datos.email,\r\n        password: datos.contrasena\r\n      })\r\n      .then(response => {\r\n          // Se inició sesión correctamente, entonces se setean los datos del usuario en la sesión actual\r\n          dispatch({type:\"setDatos\", value: response.data.user})\r\n          dispatch({type:\"setJwt\", value: response.data.jwt})\r\n          dispatch({type:\"setPublico\", value: false})\r\n          localStorage.setItem('datosLocal', JSON.stringify({\r\n            jwt: response.data.jwt,\r\n            datosSesion: response.data.user\r\n          }));\r\n          setcargando(false)\r\n          setOpen(false)\r\n      })\r\n      .catch(error => {\r\n        // Ocurrió un error\r\n        let err = JSON.parse(error.response.request.response).message[0].messages[0].id;\r\n        console.log(\"Error: \",err)\r\n        if(err===\"Auth.form.error.invalid\")\r\n          setalerta('Correo o contraseña incorrectos');\r\n        setcargando(false)\r\n      });\r\n    }else{\r\n      //Si se olvidó la contraseña...\r\n      console.log(datos)\r\n      axios\r\n      .post(state.servidor+'/auth/forgot-password', {\r\n        email: datos.email,\r\n      },{\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log('Your user received an email', response.data);\r\n      })\r\n      .catch(error => {\r\n        // Handle error.\r\n        console.log('An error occurred:', error.response);\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <LinkMUI href=\"#\" style={{color:\"black\",padding: \"10px\"}} onClick={handleOpen}>\r\n        {mensaje}\r\n      </LinkMUI>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.mostrarFlex}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.papelFondo}>\r\n            <div className=\"Fondo\"  style={{maxWidth:350}}>\r\n                <Grid  container direction=\"row\" justify=\"center\"  spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" component=\"h1\" align=\"center\" className={classes.form}>\r\n                      {pwd_olvidada?\"Recuperar contraseña\":\"Iniciar Sesión\"}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      onChange={cambiarInput}\r\n                      name=\"email\"\r\n                      value={datos.email}\r\n                      className={classes.inputAncho}\r\n                      id=\"filled-basic\"\r\n                      label=\"Correo electrónico\"\r\n                      variant=\"filled\"\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Divider/>\r\n                  \r\n                  <Grid item xs={12}>\r\n                    {\r\n                      !pwd_olvidada && <TextField\r\n                        onChange={cambiarInput}\r\n                        name=\"contrasena\"\r\n                        value={datos.contrasena}\r\n                        required\r\n                        type=\"password\"\r\n                        label=\"Contraseña\"\r\n                        variant=\"filled\"\r\n                        style={{marginTop:\"15px\"}}\r\n                        className={classes.inputAncho}\r\n                      />\r\n                    }\r\n                  </Grid>\r\n\r\n\r\n                  <Hidden xlDown={mensaje===\"\"}>\r\n                    <Typography color=\"error\">\r\n                        {alerta}\r\n                    </Typography>\r\n                  </Hidden>\r\n\r\n                  <Grid item xs={12} align=\"center\">\r\n                    {\r\n                      !pwd_olvidada && <LinkMUI color=\"black\" className={classes.margenArriba} href=\"#\" onClick={()=>{setpwd_olvidada(true)}}>\r\n                        Olvidé mi contraseña\r\n                      </LinkMUI>\r\n                    }\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} align=\"center\">\r\n                    {\r\n                      pwd_olvidada && <LinkMUI color=\"error\" className={classes.margenArriba} href=\"#\" onClick={()=>{setpwd_olvidada(false)}}>\r\n                        Cancelar\r\n                      </LinkMUI>\r\n                    }\r\n                  </Grid>\r\n\r\n                  <div className={classes.inputAncho} hidden={!cargando}>\r\n                    <LinearProgress />\r\n                  </div>\r\n\r\n                  <Grid item xs={12} align=\"center\">\r\n                    <Button\r\n                      onClick={iniciarSesion}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\">\r\n                        {\r\n                          !pwd_olvidada?\"Iniciar Sesión\":\"Recuperar\"\r\n                        }\r\n                    </Button>\r\n                  </Grid>\r\n\r\n                  <Divider/>\r\n                  \r\n                  <Grid item xs={12}>\r\n                    {\r\n                      !pwd_olvidada && <Typography onClick={handleClose} variant=\"body1\" align=\"center\">\r\n                        {`¿Eres nuevo en el sitio? `}\r\n                        <Link to={state.ruta+\"/registrar\"}>Crear cuenta</Link>\r\n                      </Typography>\r\n                    }\r\n                  </Grid>\r\n                </Grid>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\n//Material-UI\r\nimport {Grid, LinearProgress, ListItem, ListItemIcon, Divider, Typography, MenuItem} from '@material-ui/core';\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\r\nimport Alerta from '@material-ui/lab/Alert';\r\nimport { EmojiSymbolsRounded } from '@material-ui/icons';\r\n\r\n//Estilos\r\nimport Estilos from '../Estilos.js'\r\n//Variables de estado global del sistema\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Este componente permite mostrar información breve de las últimas reseñas que el usuario tiene, este componente\r\n//es accedido por medio del ícono de campana en la barra de navegación\r\nexport default function NotificacionesNav({plegarNoti, notificaciones}) {\r\n    const classes = Estilos();\r\n    const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n\r\n    return (\r\n        <div style={{padding:\"0px 15px 0px 15px\"}}>\r\n            <Typography align=\"center\" component=\"h5\" variant=\"h5\">Notificaciones</Typography>\r\n            {/*Si el usuario no tiene notificaciones, se le informa.*/}\r\n            {notificaciones.length===0 && <Typography>No tienes nuevas notificaciones</Typography>}\r\n            {\r\n                notificaciones.map((noti, i)=>(\r\n                    <div key={i}>\r\n                        <MenuItem onClick={plegarNoti} >\r\n                            <Grid container spacing={1} justify=\"center\">\r\n                                <Grid item xs={12}>\r\n                                    <Link to={state.ruta+\"/notificaciones\"} className={classes.EstiloLink}>\r\n                                        <Typography>  \r\n                                            {/*Según el tipo de notificación, se muestra uno u otro mensaje de descripción*/}                          \r\n                                            {noti.tipo===0 && (noti.solicitud!==null?\r\n                                            'Tienes nueva información con respecto a un reporte hecho a tu publicación \"'+noti.solicitud.titulo+'\"':\r\n                                            \"Tienes nueva información sobre un reporte hecho a tu perfil\")}\r\n                                            {noti.tipo===1 && (noti.datos_notificacion===\"\"?\r\n                                            '¡Tu solicitud de verificación de identidad ha sido aceptada!':\r\n                                            'Tu solicitud de verificación de identidad ha sido rechazada.')}\r\n                                            {noti.tipo===2 && (`¡Tienes una nueva solicitud de reseña de ${noti.emisor.nombre} ${noti.emisor.apellido}!`)}\r\n                                        </Typography>\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </MenuItem>\r\n                        <Divider/>\r\n                    </div>\r\n                ))\r\n            }\r\n            <MenuItem onClick={plegarNoti}>\r\n                    <Link to={state.ruta+\"/notificaciones\"} className={classes.EstiloLink}>\r\n                        <Typography color=\"secondary\">                            \r\n                            Ver todas las notificaciones\r\n                        </Typography>\r\n                    </Link>\r\n            </MenuItem>\r\n        </div>\r\n    );\r\n}","import React, {useState, useContext, useEffect} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport axios from 'axios'\r\n//Material-UI\r\nimport {Avatar, ListItemIcon, Grid, AppBar, Toolbar, IconButton, Typography, Badge, MenuItem, Menu, Button} from '@material-ui/core/';\r\nimport {Person as Perfil, ExitToApp as ExitToAppIcon, Create as ModificarPerfil, Chat, AccountCircle, Menu as MenuIcon, Notifications as NotificationsIcon, PriorityHigh as PriorityHighIcon} from '@material-ui/icons'\r\n\r\n//Importamos componentes (Logica)\r\nimport InicioSesion from \"./Sesion/InicioSesion.js\";\r\nimport Estilos from './Estilos.js';\r\nimport NotificacionesNav from './Notificaciones/NotificacionesNav.js';\r\n\r\nimport { ObtenerEstadoAplicacion } from '../Estados/AplicacionEstado'\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n  const classes = Estilos();\r\n  let history = useHistory();\r\n  const [despPerf, setdespPerf] = useState(null);\r\n  const [despMenu, setdespMenu] = useState(null);\r\n  const [despNoti, setdespNoti] = useState(null);\r\n  const [traerNotificaciones, settraerNotificaciones] = useState(false);\r\n  //Seteamos el tipo de usuario según el tipo de usuario de la sesión actual\r\n  const [tipoUsuario, setTipoUsuario] = useState(state.datosSesion.tipo);\r\n  const [notificaciones, setnotificaciones] = useState([])\r\n  const [mensajesnoleidos, setmensajesnoleidos] = useState(0)\r\n  \r\n  //Código de guardado del estado de la sesión\r\n  useEffect(()=>{\r\n    let sesion = localStorage.getItem('datosLocal') || null;\r\n    let sesionObjeto = JSON.parse(sesion)\r\n    if(sesionObjeto!==null){\r\n      dispatch({type:\"setDatos\", value: sesionObjeto.datosSesion})\r\n      dispatch({type:\"setJwt\", value: sesionObjeto.jwt})\r\n      let auth = 'Bearer '+sesionObjeto.jwt;\r\n      axios\r\n      .get(state.servidor+\"/users/\"+sesionObjeto.datosSesion.id,{\r\n        headers: {\r\n            'Authorization': auth\r\n        },\r\n      })\r\n      .then(response => {\r\n          // Se registró el usuario correctamente\r\n          dispatch({type:\"setDatos\", value: response.data})\r\n          dispatch({type:\"setJwt\", value: sesionObjeto.jwt})\r\n          \r\n          localStorage.setItem('datosLocal', JSON.stringify({\r\n            jwt: sesionObjeto.jwt,\r\n            datosSesion: response.data\r\n          }));\r\n          mensajesNoleidos(sesionObjeto.jwt, response.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error: \",error.response)\r\n      });\r\n\r\n      //Traemos las notificaciones sin leer del usuario\r\n      axios.get(state.servidor+\"/api/notificaciones?receptor=\"+sesionObjeto.datosSesion.id+\"&leido=false\",{\r\n        headers: {'Authorization': auth},\r\n      })\r\n      .then(response => {\r\n        setnotificaciones(response.data.reverse())\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response)\r\n      })\r\n    }else{\r\n      //Si no se está logueado, seteamos el valor de público como true\r\n      dispatch({type:\"setPublico\", value: true});\r\n    }\r\n  },[])\r\n  \r\n  //Función que nos sirve para establecer la cantidad de mensajes sin leer del usuario\r\n  function mensajesNoleidos(jwt, user){\r\n    let auth = 'Bearer '+jwt;\r\n    axios.get(state.servidor+\"/api/chats/\",{\r\n        headers: {'Authorization': auth},\r\n      })\r\n    .then(response => {\r\n      //Obtenemos todos los chats del sistema y filtramos segun el id de receptor o emisor\r\n      let chats_ = response.data.filter(chat => (chat.receptor.id === user.id || chat.emisor.id === user.id))\r\n      let cantidad = 0\r\n      //Aumentamos la cantidad de mensajes sin leer\r\n      chats_.map(chat_=>{\r\n        if(chat_.emisor.id===user.id){\r\n          cantidad+= chat_.noleido_emisor\r\n        }\r\n        if(chat_.receptor.id===user.id){\r\n          cantidad+= chat_.noleido_receptor\r\n        }\r\n      })\r\n      setmensajesnoleidos(cantidad)\r\n    })\r\n    .catch(error => {\r\n      console.log(\"Un error ha ocurrido al buscar las notificaciones.\")\r\n      console.log(error.response)\r\n    })\r\n  }\r\n  \r\n  //Seteamos el tipo de usuario\r\n  useEffect(()=>{\r\n    setTipoUsuario(state.datosSesion.tipo)\r\n  },[state.datosSesion.tipo])\r\n\r\n  //Función que setea los datos de la sesión como si fuese un usuario sin loguear, ejecutado al cerrar la sesión\r\n  const cerrarSesion = () => {\r\n    setdespPerf(null);\r\n    dispatch({type:\"setDatos\", value: {\r\n      apellido: \"\",\r\n      blocked: \"\",\r\n      confirmed: false,\r\n      created_at: \"\",\r\n      descripcion: \"\",\r\n      dni: \"\",\r\n      email: \"\",\r\n      estado: false,\r\n      id: null,\r\n      mostrar_telefono: false,\r\n      nombre: \"\",\r\n      permiso: 0,\r\n      provider: \"local\",\r\n      role: {\r\n        id: 1, name: \"Authenticated\", \r\n        description: \"Default role given to authenticated user.\", \r\n        type: \"authenticated\"\r\n      },\r\n      telefono: \"\",\r\n      tipo: 0,\r\n      ubicacion: \"\",\r\n      updated_at: \"\",\r\n      username: \"\",\r\n      identidad_verificada: false\r\n    }});\r\n    \r\n    dispatch({type:\"setJwt\", value: \"\"});\r\n    dispatch({type:\"setPublico\", value: true});\r\n    localStorage.setItem('datosLocal', JSON.stringify(null));\r\n    history.push(state.ruta+\"/\")\r\n  };\r\n\r\n  //Métodos utilizados cuando se despliegan y pliegan los menúes de la barrad de navegación\r\n  const desplegarPerfil = (event) => {\r\n    setdespPerf(event.currentTarget);\r\n  };\r\n  const plegarPerfil = () => {\r\n    setdespPerf(null);\r\n  };\r\n  const desplegarMenu = (event) => {\r\n    setdespMenu(event.currentTarget);\r\n  };\r\n  const plegarMenu = () => {\r\n    setdespMenu(null);\r\n  };\r\n  const desplegarNoti = (event) => {\r\n    settraerNotificaciones(true)\r\n    setdespNoti(event.currentTarget);\r\n  };\r\n  const plegarNoti = () => {\r\n    setdespNoti(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{ flexGrow: 1 }}>\r\n      <AppBar position=\"relative\" style={{padding: \"0% 7% 0% 7%\"}}>\r\n        <Toolbar>          \r\n          \r\n          {/*Icono y título*/}\r\n          <Typography style={{flexGrow:1, width:\"200px\"}} component=\"h2\" variant=\"h5\">\r\n            <Link to={state.ruta+\"/\"} style={\r\n              {\r\n                flexGrow: 1,\r\n                textDecoration:\"none\",\r\n                color:\"#393939\",\r\n                fontFamily: \"Homework\",\r\n                fontSize: 50,\r\n                width:\"200px\"\r\n            }}>\r\n              <div style={{display:\"flex\", width:\"200px\", alignItems:\"center\"}}>\r\n                <Avatar style={{width:\"50px\", height:\"50px\"}} src={state.ruta+\"/Icono1.png\"} variant=\"square\" fontSize=\"inherit\"/>\r\n                Servia\r\n              </div>\r\n            </Link>\r\n          </Typography>\r\n          \r\n          <div>\r\n            <Grid container justify=\"center\" alignContent=\"center\">\r\n              <Grid item>\r\n                <Link to={state.ruta+\"/\"} className={classes.botonesNav}>\r\n                  <Button style={{padding:\"20px\"}}>Explorar servicios</Button>\r\n                </Link>\r\n\r\n                <Link to={state.ruta+\"/solicitar-servicio\"} hidden={tipoUsuario!==1} className={tipoUsuario===1?classes.botonesNav:classes.EstiloVacio}>\r\n                  <Button style={{padding:\"20px\"}}>Solicitar servicio</Button>\r\n                </Link>\r\n\r\n                <Link to={state.ruta+\"/mis-servicios-solicitados\"} hidden={tipoUsuario!==1} className={tipoUsuario===1?classes.botonesNav:classes.EstiloVacio}>\r\n                  <Button style={{padding:\"20px\"}}>Mis servicios solicitados</Button>\r\n                </Link>\r\n\r\n                <Link to={state.ruta+\"/mis-publicaciones\"} hidden={tipoUsuario!==2} className={tipoUsuario===2?classes.botonesNav:classes.EstiloVacio}>\r\n                  <Button style={{padding:\"20px\"}}>Mis publicaciones</Button>\r\n                </Link>\r\n                \r\n                <Link to={state.ruta+\"/crear-publicacion\"} hidden={tipoUsuario!==2} className={tipoUsuario===2?classes.botonesNav:classes.EstiloVacio}>\r\n                  <Button style={{padding:\"20px\"}}>Crear publicación</Button>\r\n                </Link>\r\n              </Grid>\r\n\r\n                <Grid item hidden={tipoUsuario>0}>\r\n                  <Button style={{margin:10, padding:\"8px 0px 8px 0px\"}} variant=\"contained\" color=\"secondary\">\r\n                    <InicioSesion mensaje=\"Iniciar sesión\"/>\r\n                  </Button>\r\n                  \r\n                  <Link to={state.ruta+\"/registrar\"} className={classes.EstiloPC} style={{textDecoration:\"none\",color: \"black\"}}>\r\n                    <Button variant=\"contained\" color=\"secondary\" style={{padding:8}}>\r\n                      Registrar cuenta\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n            </Grid>\r\n          </div>\r\n         \r\n \r\n          <div hidden={tipoUsuario===0}>\r\n              {/*Desplegar notificaciones*/}\r\n              <IconButton color=\"inherit\" onClick={desplegarNoti}>\r\n                <Badge badgeContent={notificaciones.length} color=\"secondary\">\r\n                  <NotificationsIcon /> \r\n                </Badge>\r\n              </IconButton>\r\n              <Menu id=\"simple-menu\" anchorEl={despNoti} keepMounted open={Boolean(despNoti)} onClose={plegarNoti}>\r\n                {\r\n                  traerNotificaciones && <NotificacionesNav notificaciones={notificaciones} plegarNoti={plegarNoti}/>\r\n                }\r\n              </Menu>\r\n\r\n              {/*Componente chats*/}\r\n                <Link to={state.ruta+\"/mis-chats\"} style={{color:\"black\"}}>\r\n                  <IconButton color=\"inherit\">\r\n                      <Badge badgeContent={mensajesnoleidos} color=\"secondary\">\r\n                        <Chat />\r\n                      </Badge>\r\n                  </IconButton>\r\n                </Link>\r\n             \r\n\r\n              {/*Desplegar perfil*/}\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"true\"\r\n                color=\"inherit\"\r\n                onClick={desplegarPerfil}\r\n              >\r\n              <AccountCircle />\r\n              </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={despPerf}\r\n              keepMounted\r\n              open={Boolean(despPerf)}\r\n              onClose={plegarPerfil}\r\n            >              \r\n              <MenuItem onClick={plegarPerfil}>\r\n                <Link to={state.ruta+\"/modificar-usuario\"} className={classes.EstiloLink}>\r\n                  <ListItemIcon>\r\n                    <Avatar style={{color:\"gray\", width:\"20px\", height:\"20px\"}} src={state.ruta+\"/usuario_editar.png\"} variant=\"square\" fontSize=\"small\"/>\r\n                  </ListItemIcon>\r\n                  <Typography variant=\"inherit\">Modificar mi perfil</Typography>\r\n                </Link>\r\n              </MenuItem>\r\n              \r\n              <div hidden={tipoUsuario!==2}>\r\n                <MenuItem onClick={plegarPerfil}>\r\n                  <ListItemIcon>\r\n                    <ModificarPerfil fontSize=\"small\" />\r\n                  </ListItemIcon>\r\n                  <Link to={state.ruta+\"/modificar-proveedor\"} className={classes.EstiloLink}><Typography variant=\"inherit\">Modificar mi perfil de proveedor</Typography></Link>\r\n                </MenuItem>\r\n              </div>\r\n\r\n              <div hidden={tipoUsuario!==2}>\r\n                <MenuItem onClick={plegarPerfil}>\r\n                  <ListItemIcon>\r\n                    <Perfil fontSize=\"small\" />\r\n                  </ListItemIcon>\r\n                  <Link to={state.ruta+\"/perfil-proveedor/\"+state.datosSesion.id} className={classes.EstiloLink}><Typography variant=\"inherit\">Ver mi perfil de proveedor</Typography></Link>\r\n                </MenuItem>\r\n              </div>\r\n\r\n              <div hidden={tipoUsuario!==2 || state.datosSesion.identidad_verificada === true}>\r\n                <MenuItem onClick={plegarPerfil}>\r\n                  <ListItemIcon>\r\n                    <PriorityHighIcon fontSize=\"small\" /> \r\n                  </ListItemIcon>\r\n                  <Link to={state.ruta+\"/verificar-mi-identidad/\"} className={classes.EstiloLink}><Typography variant=\"inherit\">Verificar mi identidad</Typography></Link>\r\n                </MenuItem>\r\n              </div>\r\n\r\n              <MenuItem onClick={cerrarSesion}>\r\n                <ListItemIcon>\r\n                  <ExitToAppIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <Typography variant=\"inherit\">Cerrar sesión</Typography>\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n          \r\n          {/*Menú desplegable */}\r\n          <div className={tipoUsuario===0?classes.EstiloMovil:classes.EstiloVacio}>\r\n            <IconButton className={classes.hambur} onClick={desplegarMenu} color=\"inherit\" edge=\"end\" aria-label=\"menu hamburguesa\">\r\n              <MenuIcon/>\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={despMenu}\r\n              keepMounted\r\n              open={Boolean(despMenu)}\r\n              onClose={plegarMenu}\r\n            >\r\n              <Link to={state.ruta+\"/registrar\"} hidden={tipoUsuario!==0} className={classes.EstiloLink}>\r\n                <MenuItem onClick={plegarMenu}>Crear una nueva cuenta</MenuItem>\r\n                <hr/>\r\n              </Link>\r\n              \r\n              <Link to={state.ruta+\"/\"} className={classes.EstiloMovil} className={classes.EstiloLink}>\r\n                <MenuItem onClick={plegarMenu}>\r\n                  <Typography variant=\"inherit\">Explorar servicios</Typography>\r\n                </MenuItem>\r\n              </Link>\r\n\r\n              {/*Usuario*/}\r\n              <div hidden={tipoUsuario<1 || tipoUsuario>2}>\r\n                <Link to={state.ruta+\"/solicitar-servicio\"} className={tipoUsuario===1?classes.EstiloMovil:classes.EstiloVacio} className={classes.EstiloLink}>\r\n                  <MenuItem onClick={plegarMenu}>Solicitar servicio</MenuItem>\r\n                </Link>\r\n                <Link to={state.ruta+\"/mis-servicios-solicitados\"} className={tipoUsuario===1?classes.EstiloMovil:classes.EstiloVacio} className={classes.EstiloLink}>\r\n                  <MenuItem onClick={plegarMenu}>Mis servicios solicitados</MenuItem>\r\n                </Link>\r\n              </div>\r\n\r\n              {/*Proveedor*/}\r\n              <div hidden={tipoUsuario!==2}>\r\n                <Link to={state.ruta+\"/crear-publicacion\"} className={classes.EstiloMovil} className={classes.EstiloLink}>\r\n                  <MenuItem onClick={plegarMenu}>Crear publicación</MenuItem>\r\n                </Link>\r\n                <Link to={state.ruta+\"/mis-publicaciones\"} className={classes.EstiloMovil} className={classes.EstiloLink}>\r\n                  <MenuItem onClick={plegarMenu}>Mis publicaciones</MenuItem>\r\n                </Link>\r\n              </div>\r\n\r\n              {/*Administrador*/}\r\n              <div hidden={tipoUsuario!==3}>\r\n                <Link to={state.ruta+\"/gestionar-reportes\"} className={classes.EstiloLink}><MenuItem onClick={plegarMenu}>Gestionar reportes</MenuItem></Link>\r\n                <Link to={state.ruta+\"/verificar-identidad\"} className={classes.EstiloLink}><MenuItem onClick={plegarMenu}>Verificar identidades </MenuItem></Link>\r\n                {/*<Link to={state.ruta+\"/administrar-categorias\"} className={classes.EstiloLink}><MenuItem onClick={plegarMenu}>Administrar categorías </MenuItem></Link>*/}\r\n              </div>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useState, useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Instagram, Facebook} from '@material-ui/icons/';\r\n\r\n//Material-UI\r\nimport {Typography, Grid, AppBar, Toolbar} from '@material-ui/core/';\r\n\r\nimport Estilos from './Estilos.js';\r\nimport { ObtenerEstadoAplicacion } from '../Estados/AplicacionEstado'\r\n\r\n//Componente que se muestra en la sección más baja de todas las vistas, es decir, el footer\r\nexport default function Footer() {\r\n    const classes = Estilos();\r\n    const [contactanos, setcontactanos] = useState(false);\r\n    const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n    return (\r\n        <div >\r\n           <AppBar position=\"relative\" bottom=\"0px\" style={{zIndex: 0}}>   \r\n                <Toolbar>\r\n                    <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid item xs={12} sm={4} align=\"center\">\r\n                            {/*<Link className={classes.EstiloLink} to=\"/sobre-nosotros\">Sobre nosotros</Link><br/>*/}\r\n                            <Link className={classes.EstiloLink} to={state.ruta+\"/preguntas-frecuentes\"}>Preguntas frecuentes</Link>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} align=\"center\">\r\n                            {/*<Link className={classes.EstiloLink} to=\"/terminos-de-uso\">Términos de uso</Link><br/>*/}\r\n                            <a href=\"#\" className={classes.EstiloLink} onClick={()=>{setcontactanos(!contactanos)}}>Contáctanos</a>\r\n                            {\r\n                                contactanos && <div>\r\n                                    <a href=\"mailto:angelruggia@gmail.com\" className={classes.EstiloLink}>angelruggia@gmail.com</a><br/>\r\n                                    <a href=\"mailto:ferransolischorvat@gmail.com\" className={classes.EstiloLink}>ferransolischorvat@gmail.com</a>\r\n                                </div>\r\n                            }\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} align=\"center\">\r\n                            <Typography>\r\n                                Nuestras redes\r\n                            </Typography>\r\n                            <a href=\"https://www.facebook.com/RuggiaAngel\" target=\"_blank\" className={classes.EstiloLink}><Facebook fontSize=\"large\"/></a>\r\n                            <a href=\"https://www.instagram.com/ferransolischorvat/\" target=\"_blank\" className={classes.EstiloLink}><Instagram fontSize=\"large\"/></a>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>     \r\n    );\r\n  }","import React,{useState, useEffect} from 'react';\r\n//Material UI\r\nimport {Chip, Grid, TextField, Typography, Button, Card, FormControlLabel, Checkbox, CardContent} from '@material-ui/core/';\r\nimport {Done as Done, Clear as Clear} from '@material-ui/icons';\r\n\r\nimport Estilos from '../Estilos.js'\r\n\r\n//Este es un subcomponente que se utiliza en el supercomponente Categoria.js, sirve para establecer un conjunto de filtros\r\n//para buscar publicaciones.\r\n//El componente acepta un conjunto de parámetros que son pasados por Categoria.js\r\nexport default function Filtro({tipoPublicacion, settipoPublicacion, servicios, agregarSeleccionado, buscarServicios, inputBusqueda, setinputBusqueda}) {\r\n  const classes = Estilos();\r\n  const [tipo,settipo] = useState(false)\r\n\r\n  //Cuando la variable tipo cambia, se cambia la variable tipoPublicacion, esto para que repercuta en Categoria.js\r\n  //indicando que se ha cambiado de tipo publicación a tipo solicitud\r\n  useEffect(()=>{\r\n    settipoPublicacion(!tipo)\r\n  },[tipo])\r\n  return (\r\n    <Card className={classes.margenArriba} variant=\"outlined\" className={classes.filaPublicacion}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Seleccione los filtros deseados\r\n        </Typography>\r\n\r\n        <Grid item xs={12}>    \r\n          <FormControlLabel\r\n            className={classes.inputAncho}\r\n            control={<Checkbox checked={tipo} name=\"tipo\" onChange={(e)=>{settipo(e.target.checked)}}/>}\r\n            label=\"Filtrar por publicaciones de solicitudes de servicios de usuarios.\"\r\n          />\r\n        </Grid>\r\n\r\n        {\r\n          tipoPublicacion &&\r\n          <Grid container className={classes.margenArriba} spacing={2} justify=\"space-around\" alignItems=\"center\">    \r\n            {\r\n              servicios.map((servicio,i) => (\r\n                <Grid item xs={6} sm={4} md={3} lg={2}  key={i}>\r\n                  <SeleccionarServicio key={i} servicio={servicio} agregarSeleccionado={agregarSeleccionado}/>\r\n                </Grid>\r\n              ))\r\n            }\r\n          </Grid>\r\n        }\r\n        \r\n        <TextField\r\n          className={classes.margenArriba}\r\n          value={inputBusqueda}\r\n          color=\"secondary\"\r\n          onChange={(e)=>{setinputBusqueda(e.target.value)}}\r\n          onKeyDown={(e)=>{if(e.key==='Enter'){buscarServicios()}}}\r\n          label=\"Buscar por nombre\" variant=\"outlined\"\r\n          size=\"medium\" fullWidth\r\n        />\r\n        <Button onClick={buscarServicios} className={classes.margenArriba} color=\"secondary\" variant=\"contained\" >Buscar</Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n//Subcomponente de Filtro.js que permite seleccionar o deseleccionar un servicio.\r\n//Se separa como un componente unico, ya que pueden existir mas de un servicio para seleccionar, por lo tanto\r\n//se puede simplificar el codigo separandolos.\r\nfunction SeleccionarServicio({servicio, agregarSeleccionado}) {\r\n  const classes = Estilos();\r\n  //Variables del componente\r\n  const [hecho_noHecho, setHecho_noHecho] = useState(false);\r\n  const [seleccion, setSeleccion] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    agregarSeleccionado(servicio.id)\r\n    if(seleccion===false){\r\n      setSeleccion(true);\r\n      setHecho_noHecho(true);\r\n    }else{\r\n      setSeleccion(false);\r\n      setHecho_noHecho(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.mostrarFlex}>\r\n      <Chip clickable color=\"primary\" label={servicio.nombre} icon={hecho_noHecho?<Done/>:<Clear/>} onClick={handleClick}/>\r\n    </div>\r\n  );\r\n}","import React, {useState} from 'react';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\r\nimport Cargando from '@material-ui/core/LinearProgress';\r\n\r\n//Alerta que utilizamos cuando se necesita confirmar alguna acción\r\nexport default function Alerta({titulo, funcionAceptar, mensaje}) {\r\n  const [open, setOpen] = useState(true);\r\n  const [cargando, setcargando] = useState(false)\r\n  //Ejecutamos la función que se pasa como parámetro\r\n  const handleClose = (boole) => {\r\n    setcargando(true)\r\n    funcionAceptar(boole)\r\n    setcargando(false)\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={()=>{handleClose(false)}}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{titulo}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {mensaje}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>{handleClose(false)}} variant=\"contained\" color=\"error\">\r\n            Cancelar\r\n          </Button>\r\n          <Button onClick={()=>{handleClose(true)}} variant=\"contained\" color=\"primary\" autoFocus>\r\n            Aceptar\r\n          </Button>\r\n          {cargando && <Cargando/>}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport Estilos from './Estilos.js'\r\n\r\n//Subcomponente de las puntuación en forma de estrellas\r\nexport default function Puntuacion({valor, clickeable, cambiarValor}) {\r\n    const classes = Estilos();\r\n    \r\n    return (\r\n        <div className={classes.mostrarFlex}>\r\n            <Rating name=\"half-rating\" onChange={cambiarValor} readOnly={!clickeable} value={valor} precision={0.5} />\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {Snackbar, Grid} from '@material-ui/core';\r\n\r\n//Subcomponente utilizado para mostrar alertas cuando se lleva a cabo una acción exitosa\r\nfunction Alerta(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nexport default function AlertaMensaje({mensaje, setabrir, abrir}) {\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setabrir(false);\r\n    };\r\n    \r\n    return (\r\n       <div>\r\n           <Grid container>\r\n                <Snackbar open={abrir} autoHideDuration={4000} onClose={handleClose}>\r\n                    <Alerta onClose={handleClose} severity=\"success\">\r\n                        {mensaje}\r\n                    </Alerta>\r\n                </Snackbar>\r\n            </Grid>\r\n       </div>\r\n    )\r\n}","import React,{useState, useContext, useEffect} from 'react'\r\nimport axios from 'axios'\r\n//Material-UI\r\nimport {LinearProgress, Avatar, FormControl, Grid, Typography, TextField, Button, Modal, Fade, Backdrop, InputLabel, MenuItem, Select} from '@material-ui/core/';\r\nimport {Mail} from '@material-ui/icons';\r\n\r\n///Componentes\r\nimport AlertaMensaje from './AlertaMensaje.js';\r\nimport Estilos from './Estilos.js';\r\n\r\nimport { ObtenerEstadoAplicacion } from '../Estados/AplicacionEstado'\r\n\r\n//Subcomponente que se muestra en aquellas vistas en donde requerimos que se pueda contactar con un proveedor\r\nexport function BotonContratar({fijo, esDePerfil, datos}) {\r\n  const classes = Estilos();\r\n  const { state } = useContext(ObtenerEstadoAplicacion);\r\n  const [open, setOpen] = useState(false);\r\n  const [cargando, setcargando] = useState(false);\r\n  const [mensaje, setmensaje] = useState(\"\");\r\n  const [abrir, setabrir] = useState(false);\r\n  const [categoria, setcategoria] = useState({});\r\n  const [arregloCategorias, setarregloCategorias] = useState([]);\r\n\r\n  //Si se abre o se cierra la ventan emergente...\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //Ejecutado para traer las categorías que el proveedor tiene asociado, utilizado cuando se lo contacta a través de su perfil\r\n  useEffect(()=>{\r\n    if (esDePerfil){\r\n      let cat = {}\r\n      let arrCat = []\r\n      datos.servicios.map((servicio)=>{\r\n        if(!cat.hasOwnProperty(servicio.categoria)){\r\n          cat[servicio.categoria] = servicio.categoria\r\n          arrCat.push(servicio.categoria)\r\n        }\r\n      })\r\n      let IDS = \"\"\r\n      arrCat.map((id)=>{\r\n        if(id!==null){\r\n            IDS+=\"id_in=\"+id+\"&\"\r\n        }\r\n      })\r\n      let auth = 'Bearer '+state.jwt;\r\n      if(arrCat.length!==0){\r\n        axios.get(state.servidor+\"/api/categorias?\"+IDS,{\r\n          headers: {'Authorization': auth},\r\n        })\r\n        .then(response => {\r\n          setarregloCategorias(response.data)\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Un error ha ocurrido al cargar los chats.\")\r\n          console.log(error.response)\r\n        }) \r\n      }\r\n    }\r\n  },[datos])\r\n\r\n  //Función que se ejecuta cuando se presiona en \"Contactar proveedor\"\r\n  function enviarContacto(e){\r\n    setcargando(true)\r\n    let auth = 'Bearer '+state.jwt;\r\n    e.preventDefault()\r\n\r\n    //Si el usuario está logueado...\r\n    if(state.jwt!==\"\"){\r\n      //Seteamos la categoría seleccionada\r\n      let cat_selecc = arregloCategorias.filter(cat_ => cat_.nombre === categoria)\r\n      //Creamos el chat\r\n      axios.post(state.servidor+\"/api/chats/\",{\r\n        noleido_emisor: 0,\r\n        noleido_receptor: 1,\r\n        emisor: state.datosSesion.id,\r\n        receptor: datos.idP,\r\n        solicitud: datos.idS,\r\n        //Si el contacto es a través del perfil, seteamos la categoría seleccionada, sino, seteamos en nulo\r\n        categoria: esDePerfil?cat_selecc[0].id:null,\r\n        peticion: false\r\n      },{\r\n        headers: {'Authorization': auth},\r\n      })\r\n      .then(response => {\r\n        //Creamos el mensaje y lo asociamos al chat\r\n        axios.post(state.servidor+\"/api/mensajes/\",{\r\n          contenido: mensaje,\r\n          enviado_por: true,\r\n          chat: response.data.id\r\n        },{\r\n          headers: {'Authorization': auth},\r\n        })\r\n        .then(response => {\r\n          setabrir(true)\r\n          setOpen(false)\r\n          setcargando(false)\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Un error ha ocurrido al cargar los chats.\")\r\n          console.log(error.response)\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Un error ha ocurrido al cargar los chats.\")\r\n        console.log(error.response)\r\n      })\r\n    }else{\r\n      alert(\"Debes iniciar sesión para poder contactar al proveedor.\")\r\n      setcargando(false)\r\n    }\r\n  }\r\n\r\n    return (\r\n      <div>\r\n          <div className={fijo?classes.botonFijo:classes.botonNoF}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<Mail/>}\r\n              onClick={handleOpen}\r\n            >\r\n              Contactar\r\n            </Button>\r\n        </div>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.mostrarFlex}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={open} style={{padding:\"15px\"}}>\r\n            <div className={classes.papelFondo}>\r\n              <div style={{maxWidth:750}} className=\"Fondo\">\r\n              <Grid  container direction=\"row\" justify=\"center\"  spacing={2}>\r\n                  <Grid item xs={12}>\r\n                      <div align=\"center\">\r\n                          <Avatar\r\n                            alt=\"Perfil\"\r\n                            src={datos.imagen_perfil!==null?datos.imagen_perfil:state.imagen_predeterminada}\r\n                            className={classes.imagenPublicacion}/>\r\n                      </div>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                      <Typography variant=\"h5\" component=\"h2\" align=\"center\" className={classes.form}>\r\n                          {datos.nombre}\r\n                      </Typography>\r\n                  </Grid>\r\n\r\n                  <form onSubmit={enviarContacto} className={classes.inputAncho}>\r\n                    <FormControl color=\"primary\" fullWidth>\r\n                      {\r\n                        esDePerfil &&\r\n                        <Grid item xs={12}>\r\n                          <InputLabel id=\"categoria\" variant=\"filled\">Categoría</InputLabel>\r\n                          <Select\r\n                              value={categoria}\r\n                              name=\"categoria\"\r\n                              onChange={(e)=>{setcategoria(e.target.value)}}\r\n                              id=\"categoria\"\r\n                              labelId=\"categoria\"\r\n                              variant=\"filled\"\r\n                              label=\"Categoría\"\r\n                              className={classes.inputAncho}\r\n                              required>\r\n                              {\r\n                                arregloCategorias.map((categoria, i)=>(\r\n                                  <MenuItem key={i} value={categoria.nombre}>{categoria.nombre}</MenuItem>\r\n                                ))\r\n                              }\r\n                          </Select>\r\n                        </Grid>\r\n                      }\r\n                      <br/>\r\n                      <Grid item xs={12}>  \r\n                        <TextField\r\n                          onChange={(e)=>{setmensaje(e.target.value)}}\r\n                          className={classes.inputAncho}\r\n                          id=\"filled-basic\"\r\n                          label=\"Escribe tu mensaje\"\r\n                          variant=\"filled\"\r\n                          required\r\n                          multiline\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} align=\"center\">\r\n                        <br/>\r\n                        {\r\n                          cargando && <LinearProgress/>\r\n                        }\r\n                        <Button\r\n                          disabled={cargando}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          type=\"submit\"\r\n                          >\r\n                            Contactar\r\n                        </Button>\r\n                      </Grid>\r\n                    </FormControl>\r\n                  </form>\r\n              </Grid>\r\n              </div>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n        <AlertaMensaje mensaje=\"¡Mensaje enviado con éxito!\" setabrir={setabrir} abrir={abrir}/>\r\n      </div>\r\n    );\r\n  }","import React,{useState, useEffect, useContext} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport axios from 'axios'\r\n//Material-UI\r\nimport {Card, Hidden, Typography, Chip, Button, Grid, Tooltip, IconButton, Container } from '@material-ui/core/';\r\nimport Editar from '@material-ui/icons/Edit';\r\nimport Pausa from '@material-ui/icons/Pause';\r\nimport Despausar from '@material-ui/icons/PlayArrow';\r\nimport Eliminar from '@material-ui/icons/DeleteForever';\r\nimport Alerta from '@material-ui/lab/Alert';\r\nimport Verificado from '@material-ui/icons/CheckCircleOutline';\r\nimport AlertaSi_No from '../AlertaSi_No.js';\r\n\r\n//Componentes\r\nimport Estrellas from '../Estrellas.js';\r\nimport Estilos from '../Estilos';\r\nimport {BotonContratar} from '../ContactarProveedor.js'\r\n\r\n//Estados globales que utilizaremos en este componente\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\nimport { FormatListBulletedRounded } from '@material-ui/icons';\r\n\r\n//Esto es un subcomponente que se utiliza en componente Categoria.js, permite dar un breve resumen de la publicación en cuestión\r\n//informando así el titulo, descripcion, precio estimado, valoración, una imagen y el tipo de servicio.\r\n//Permite tambien ver a la dicha publicación o contactar directamente al proveedor de la publicación\r\n//El componente recibe un conjunto de parámetros que son derivados del supercomponente que lo utiliza\r\nexport default function FilaPublicacion({tipoPublicacion, datos, contactar, buscarSolicitudes, resenas}) {\r\n  const classes = Estilos();\r\n  const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n  //Variables para el manejo del componente\r\n  const [precioPresupuesto, setPrecioPresupuesto] = useState(\"\");\r\n  const [noMostrar, setnoMostrar] = useState(true);\r\n  const [preguntarPausa, setpreguntarPausa] = useState(false);\r\n  const [preguntarEliminar, setpreguntarEliminar] = useState(false);\r\n  const [promedio, setpromedio] = useState(0);\r\n  const [datosPagina, setdatosPagina] = useState({\r\n    id: null,\r\n    titulo: \"\",\r\n    descripcion: \"\",\r\n    precio_estimado: 0,\r\n    imagenes: [],\r\n    servicio: \"\",\r\n    estrellas:0,\r\n    tipo: false,\r\n    Usuario_id: {id: null, nombre:\"\", apellido: \"\", imagen_perfil:null},\r\n    Servicio_id: {nombre:\"\"},\r\n    pausado: false\r\n  });\r\n\r\n  //Funcion que se ejecuta por única vez cuando el componente se renderiza.\r\n  useEffect(()=>{\r\n    //Dependiendo de si se quiere crear una publicación o solicitar un servicio, se muestra la pantalla correspodiente\r\n    if(tipoPublicacion){\r\n      setPrecioPresupuesto(\"Precio estimado\");\r\n    }else{\r\n      setPrecioPresupuesto(\"Presupuesto\");\r\n    }\r\n  },[])\r\n\r\n  //Cuando la variable datos cambia, es decir, cuando el supercomponente cambia el valor de la variable, el siguiente\r\n  //método se va a ejecutar, éste lo que hace setear una variable para mostrar u ocultar los botones para editar\r\n  //borrar o pausar una determinada publicación\r\n  useEffect(()=>{\r\n    if(datos.Usuario_id!==null){\r\n      setdatosPagina(datos)\r\n      let x = datos.Usuario_id.id===state.datosSesion.id\r\n      setnoMostrar(!x)\r\n    }\r\n  },[datos])\r\n\r\n  //Funcion que se ejecuta cuando la variable resenas cambia, permite calcular el promedio de las reseñas de la publicación\r\n  useEffect(()=>{\r\n    if(resenas!==null && resenas!==undefined ){\r\n      let total = 0, i = 0\r\n      resenas.resenas.map((resena)=>{\r\n        if(resena.proveedor.id===datos.Usuario_id.id){\r\n          total+=resena.recomendacion\r\n          i++\r\n        }\r\n      })\r\n      setpromedio(total/i)\r\n    }\r\n  },[resenas])\r\n\r\n\r\n  //Cuando se aprieta el boton eliminar publicación se ejecuta este método, lo que hace es eliminar la publicación\r\n  //seleccionada de la base de datos\r\n  const eliminarPublicacion = (boole) =>{\r\n    let auth = 'Bearer '+state.jwt;\r\n    if(boole){\r\n      //Si boole es true, entonce significa que se ha puesto \"Aceptar\" en el dialogo emergente, por consecuente se envia la orden de eliminar la publicación\r\n      axios.delete(\r\n        state.servidor+\"/api/solicitud/\"+datosPagina.id,{\r\n          headers: {'Authorization': auth},\r\n        }\r\n        )\r\n        .then(response => {\r\n          buscarSolicitudes()\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Error, no se ha podido eliminar la publicación.\", error.response)\r\n        })\r\n      }\r\n    setpreguntarEliminar(false)\r\n  } \r\n\r\n  //Cuando se aprieta el boton eliminar publicación se ejecuta este método, lo que hace es pausar la publicación seleccionada\r\n  const pausarPublicacion = (boole) =>{\r\n    let auth = 'Bearer '+state.jwt;\r\n    if(boole){\r\n      //Si boole es true, entonce significa que se ha puesto \"Aceptar\" en el dialogo emergente, por consecuente se envia la orden de pausar la publicación\r\n\r\n      let Pausa = !datosPagina.pausado\r\n      axios.put(\r\n      state.servidor+\"/api/solicitud/\"+datosPagina.id,{\r\n        pausado: Pausa\r\n      },{\r\n        headers: {'Authorization': auth},\r\n      })\r\n      .then(response => {\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error, no se ha podido pausar la publicación.\", error.response)\r\n      })\r\n      setdatosPagina(prevState => ({\r\n        ...prevState,\r\n        pausado: Pausa\r\n      }))\r\n    }\r\n    setpreguntarPausa(false) \r\n  }\r\n\r\n  //Si la publicación lleva mas de 10 dias sin modificarse, se considera como vencida (esto para evitar que ciertas\r\n  //publicaciones se muestren para siempre, en el caso de que el usuario deje de visitar a Servia)\r\n  function publicacionVencida(){\r\n    let hoy = Date.now()\r\n    let modificado = new Date(datosPagina.updated_at)\r\n    //Calculamos la cantidad de dias que lleva la publicación sin editarse\r\n    let dias = parseInt((hoy-modificado)/1000/60/60/24)\r\n\r\n    //Segun el tipo de publicación el tiempo de vencimiento es mayor o menor. Si es una solicitud 15 dias, sino 30\r\n    let diasTipo = datosPagina.tipo?30:15\r\n    if(dias > diasTipo){\r\n      return (<Alerta className={classes.inputAncho} style={{marginBottom:\"10px\"}} variant=\"outlined\" severity=\"info\">\r\n        Esta publicación se encuentra vencida, por lo tanto no aparecerá en las búsquedas. Para que vuelva a aparecer su creador debe editarla.\r\n        Tenga en cuenta que las solicitudes se vencen al cabo de 15 días y las publicaciones de proveedores a los 30 días.\r\n        --Si usted quiere contactar a este proveedor/cliente, tenga en cuenta que es posible que no le responda o no le responda a  tiempo, ya que puede estar inactivo en Servia.--\r\n      </Alerta>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.filaPublicacion}>\r\n      <Grid container spacing={1} justify=\"center\">\r\n          {\r\n            datosPagina.pausado && (<Alerta className={classes.inputAncho} style={{marginBottom:\"10px\"}} variant=\"outlined\" severity=\"warning\">\r\n              Esta publicación se encuentra pausada.\r\n            </Alerta>)\r\n          }\r\n          {\r\n            datosPagina.bloqueado && (<Alerta className={classes.inputAncho} style={{marginBottom:\"10px\"}} variant=\"outlined\" severity=\"error\">\r\n              Esta publicación se encuentra bloqueada, contacte a un administrador.\r\n            </Alerta>)\r\n          }\r\n          {\r\n            publicacionVencida()\r\n          }\r\n\r\n\r\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} md={3} sm={12} align=\"center\">\r\n              <img \r\n                className={classes.imagenPublicacion}\r\n                src={datosPagina.imagenes.length!==0?state.servidor+datosPagina.imagenes[0].url:state.imagen_predeterminada}\r\n                alt=\"1° imagen\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={9} sm={12}>  \r\n              <Typography align=\"left\" component=\"h5\" variant=\"h5\">\r\n                {`${datosPagina.Usuario_id.nombre} ${datosPagina.Usuario_id.apellido}`}\r\n                <Hidden xlDown={!datosPagina.Usuario_id.identidad_verificada}><Tooltip title=\"Usuario verificado\">\r\n                  <IconButton style={{padding: 1}}><Verificado color=\"inherit\"/></IconButton>\r\n                </Tooltip></Hidden>\r\n              </Typography>\r\n\r\n              <Typography align=\"left\" component=\"h5\" variant=\"h5\">\r\n                  {datosPagina.titulo}\r\n                <Hidden xlDown={noMostrar}>  \r\n                  <Link to={tipoPublicacion?state.ruta+\"/modificar-publicacion/\"+datosPagina.id:state.ruta+\"/modificar-solicitud-servicio/\"+datosPagina.id}>\r\n                  <Tooltip title=\"Editar publicación\">\r\n                    <IconButton ><Editar color=\"primary\" /></IconButton>\r\n                  </Tooltip>\r\n                  </Link>\r\n                  <Tooltip title=\"Pausar publicación\">\r\n                    <IconButton onClick={()=>{setpreguntarPausa(true)}}>{datosPagina.pausado?<Despausar color=\"secondary\" />:<Pausa color=\"primary\" />}</IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Eliminar publicación\">\r\n                    <IconButton onClick={()=>{setpreguntarEliminar(true)}}><Eliminar color=\"error\" /></IconButton>\r\n                  </Tooltip>\r\n                  {\r\n                    preguntarPausa &&\r\n                    <AlertaSi_No\r\n                    mensaje={datosPagina.pausado?\r\n                    'La publicación \"'+datosPagina.titulo+'\" volverá a aparecer en la sección de búsqueda.'\r\n                    :'La publicación \"'+datosPagina.titulo+'\" será pausada y no se mostrará en la sección de búsqueda.'}\r\n                    funcionAceptar={pausarPublicacion}\r\n                    titulo={datosPagina.pausado?\r\n                    \"¿Está seguro que quiere despausar la publicación?\"\r\n                    :\"¿Está seguro que quiere pausar la publicación?\"}/> \r\n                  }\r\n                  {\r\n                    preguntarEliminar &&\r\n                    <AlertaSi_No\r\n                    mensaje={'Se va a eliminar la publicación \"'+datosPagina.titulo+'\", esta acción no se puede revertir.'}\r\n                    funcionAceptar={eliminarPublicacion}\r\n                    titulo=\"¿Está seguro que quiere eliminar la publicación?\"/>\r\n                  }\r\n                </Hidden>  \r\n              </Typography>\r\n              <div style={{overflow: \"auto\", textOverflow: \"ellipsis\", textJustify:\"auto\", align:\"left\", WebkitLineClamp:\"3\", height:\"3\"}}> \r\n                <Typography>\r\n                  {datosPagina.descripcion}\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={8} sm={12} md={6} lg={3} align=\"center\">\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              {precioPresupuesto}: ${datosPagina.precio_estimado}\r\n            </Typography>\r\n          </Grid>  \r\n\r\n          {\r\n            (tipoPublicacion && datosPagina.Servicio_id!==null) && (<Grid item xs={4} sm={6} md={6} lg={3} align=\"center\">\r\n            <Chip variant=\"outlined\" label={datosPagina.Servicio_id.nombre}/>\r\n          </Grid>)\r\n          }\r\n\r\n          {\r\n            tipoPublicacion &&\r\n            <Grid item xs={12} sm={6} md={6} lg={3} align=\"center\">\r\n              <Estrellas valor={promedio} clickeable={false} cambiarValor={()=>{}}/>\r\n            </Grid>\r\n          }\r\n          \r\n          {\r\n            datosPagina.Usuario_id.id!==state.datosSesion.id &&\r\n            (datosPagina.tipo?true:state.datosSesion.tipo!==1) &&\r\n            <Grid item xs={6} sm={6} md={6} lg={3} align=\"center\" hidden={!contactar}>\r\n              <BotonContratar\r\n              fijo={false}\r\n              esDePerfil={false}\r\n              datos=\r\n              {{idS: datosPagina.id,\r\n              idP: datosPagina.Usuario_id.id,\r\n              nombre: `${datosPagina.Usuario_id.nombre} ${datosPagina.Usuario_id.apellido}`,\r\n              imagen_perfil: datosPagina.Usuario_id.imagen_perfil===null?null:state.servidor+datosPagina.Usuario_id.imagen_perfil.url}}/>\r\n            </Grid>\r\n          }\r\n           \r\n        <Grid item xs={6} lg={12} md={12} sm={6} align=\"center\">\r\n          <Link to={state.ruta+\"/publicacion/\"+datosPagina.id} style={{textDecoration:\"none\", padding: 0, color:\"black\"}}>\r\n            <Button variant=\"outlined\" color=\"default\">Leer más</Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect, useContext} from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n//Componentes\r\nimport Filtro from './Filtro.js';\r\nimport FilaPublicacion from './FilaPublicacion.js';\r\nimport Estilos from '../Estilos.js';\r\n//Material UI\r\nimport {Typography, Paper} from '@material-ui/core/'\r\nimport Cargando from '@material-ui/core/LinearProgress';\r\nimport Alerta from '@material-ui/lab/Alert';\r\n\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Este componente sirve para poder ver publicaciones (mostradas en filas resumidas) de una determinada categoría, \r\n//nos permite filtrar las publicaciones segun tipo de servicio, tipo de publicacion o solicitud y según el nombre de la publicación\r\nexport default function Categoria() {\r\n    const classes = Estilos();\r\n    let { id } = useParams()\r\n    const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n    //Variables de la página \r\n    const [serviciosSeleccionados, setServiciosSeleccionados] = useState([])\r\n    const [categoria, setcategoria] = useState({nombre:\"\"})\r\n    const [servicios, setservicios] = useState([])\r\n    const [solicitudes, setsolicitudes] = useState([])\r\n    const [cargando, setcargando] = useState(false)\r\n    const [resenas_servicio, setresenas_servicio] = useState(null)\r\n    const [tipoPublicacion, settipoPublicacion] = useState(true)\r\n    const [inputBusqueda, setinputBusqueda] = useState(\"\")\r\n\r\n    //Metodo que se ejecuta cuando se carga el componente (la pagina de categoría)\r\n    useEffect(()=>{\r\n        setcargando(true)\r\n        if(state.jwt!==\"\" || state.publico===true){\r\n            //Se busca la información de la categoría seleccionada\r\n            axios.get(state.servidor+\"/api/categorias/\"+id)\r\n            .then(response => {\r\n                //Se actualizan los datos de las variables\r\n                setcategoria(response.data)\r\n                setservicios(response.data.servicios)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Un error ha ocurrido al cargar las categorías.\")\r\n                console.log(error.response)\r\n            }) \r\n        }\r\n        buscarSolicitudes()\r\n    },[state.jwt, state.publico])\r\n\r\n    //Funcion que permite buscar publicaciones conforme al tipo de publicación (este metodo se ejecuta al inicio del renderizado)\r\n    function buscarSolicitudes(){\r\n        axios.get(state.servidor+\"/api/solicitud?Categoria_id=\"+id+\"&pausado=false&bloqueado=false&tipo=\"+tipoPublicacion)\r\n        .then(response => {\r\n            let hoy = Date.now()\r\n            let filtro = []\r\n            response.data.map((solicitud)=>{\r\n                let modificado = new Date(solicitud.updated_at)\r\n                let dias = parseInt((hoy-modificado)/1000/60/60/24)\r\n               \r\n                let diasTipo = tipoPublicacion?30:15\r\n                if(dias <= diasTipo){\r\n                    filtro.push(solicitud)\r\n                }\r\n            })\r\n            \r\n            //Filtramos las publicaciones donde sus proveedores no estén pausados\r\n            setcargando(false)\r\n            if (tipoPublicacion){\r\n                filtro = filtro.filter((solicitud)=>(solicitud.Usuario_id.estado === false && solicitud.Usuario_id.bloqueado===false))\r\n                setsolicitudes(filtro)\r\n            }else{\r\n                setsolicitudes(filtro)\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Un error ha ocurrido al cargar las categorías.\")\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    //Se agregan en un arreglo los servicios seleccionados para la búsqueda de éstos\r\n    const agregarSeleccionado = (servicio) => {\r\n        let encontrado = serviciosSeleccionados.some((elemento) => elemento===servicio);\r\n        \r\n        if(!encontrado){\r\n            setServiciosSeleccionados((arreglo)=>[...arreglo, servicio]);\r\n        }else{\r\n            setServiciosSeleccionados(serviciosSeleccionados.filter((elemento)=>servicio!==elemento));\r\n        }\r\n    }\r\n\r\n    //Esta función permite buscar las publicaciones según los filtros seleccionados (servicios, tipo de publicacion y nombre de publicación)\r\n    function buscarServicios(){\r\n        let IDS = \"&\"\r\n        setcargando(true)\r\n\r\n        serviciosSeleccionados.map((id)=>{\r\n            if(id!==null){\r\n                IDS+=\"Servicio_id=\"+id+\"&\"\r\n            }\r\n        })\r\n\r\n        if(IDS.length===1){\r\n            if (tipoPublicacion){\r\n                servicios.map((servicio)=>{\r\n                    if(servicio!==null){\r\n                        IDS+=\"Servicio_id=\"+servicio.id+\"&\"\r\n                    }\r\n                })\r\n            }else{\r\n                IDS+=\"Categoria_id=\"+id+\"&\"\r\n            }\r\n        }\r\n\r\n        //Buscamos las solicitudes según los parametros que seleccionamos\r\n        axios.get(state.servidor+\"/api/solicitud?\"+IDS+\"pausado=false&bloqueado=false&tipo=\"+tipoPublicacion+\"&titulo_contains=\"+inputBusqueda)\r\n        .then(response => {\r\n            let hoy = Date.now()\r\n            let filtro = []\r\n            response.data.map((solicitud)=>{\r\n                let modificado = new Date(solicitud.updated_at)\r\n                let dias = parseInt((hoy-modificado)/1000/60/60/24)\r\n               \r\n                let diasTipo = tipoPublicacion?30:15\r\n                if(dias <= diasTipo){\r\n                    filtro.push(solicitud)\r\n                }\r\n            })\r\n            \r\n            if (tipoPublicacion){\r\n                //Descartamos las solicitudes que tienen usuarios pausados y bloqueados\r\n                filtro = filtro.filter((solicitud)=>(solicitud.Usuario_id.estado === false && solicitud.Usuario_id.bloqueado===false))\r\n                setsolicitudes(filtro)\r\n            }else{\r\n                setsolicitudes(filtro)\r\n            }\r\n          setcargando(false)\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Un error ha ocurrido al cargar las categorías.\")\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    //Función que utilizamos para poder pasarle a filaPublicación las reseñas, de modo que se pueda calcular el promedio de la publicación\r\n    useEffect(()=>{\r\n        if(servicios.length!==0){\r\n            let ids_ = \"\"\r\n            servicios.map((servicio_)=>{\r\n                ids_+=\"servicios=\"+servicio_.id+\"&\"\r\n            })\r\n\r\n            //Buscamos todas las reseñas que sean de los servicios de la categoría\r\n            axios.get(state.servidor+\"/api/resenas?\"+ids_)\r\n            .then(response => {\r\n                //Generamos un diccionario que posee las reseñas agrupadas segun el servicio al que pertenecen\r\n                let servicios_resena = {}\r\n                response.data.map((resena=>{\r\n                    resena.servicios.map(serv_=>{\r\n                      if(!servicios_resena.hasOwnProperty(serv_.nombre)){\r\n                        servicios_resena[serv_.nombre] = {resenas:[]}\r\n                        servicios_resena[serv_.nombre].resenas.push(resena)\r\n                      }else{\r\n                        servicios_resena[serv_.nombre].resenas.push(resena)\r\n                      }\r\n                    })\r\n                }))\r\n                setresenas_servicio(servicios_resena)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Un error ha ocurrido al buscar las reseñas.\")\r\n                console.log(error.response)\r\n            })\r\n        }\r\n    },[servicios])\r\n\r\n    \r\n    return (\r\n        <div className={classes.fondo}>\r\n            <Paper elevation={3} style={{width:950, padding: 15}} className=\"Fondo\">\r\n                <Typography variant=\"h5\" component=\"h2\" align=\"center\">{categoria.nombre}</Typography>\r\n                <Filtro\r\n                    tipoPublicacion={tipoPublicacion}\r\n                    settipoPublicacion={settipoPublicacion}\r\n                    inputBusqueda={inputBusqueda}\r\n                    setinputBusqueda={setinputBusqueda}\r\n                    servicios={servicios}\r\n                    agregarSeleccionado={agregarSeleccionado}\r\n                    buscarServicios={buscarServicios}\r\n                />\r\n                <br/>\r\n                {cargando && <Cargando/>}\r\n                {\r\n                    !cargando && solicitudes.length===0 && (<Alerta variant=\"outlined\" severity=\"info\">\r\n                    Lo sentimos, por el momento no hay {tipoPublicacion?\"publicaciones \":\"solicitudes \"} de servicios que coincidan con los filtros de búsqueda.\r\n                    </Alerta>)\r\n                }\r\n                { \r\n                    solicitudes.map((solicitud, i)=>{            \r\n                        return (<FilaPublicacion\r\n                            key={i}\r\n                            resenas={solicitud.tipo?(resenas_servicio===null?null:resenas_servicio[solicitud.Servicio_id.nombre]):null}\r\n                            buscarSolicitudes={buscarSolicitudes}\r\n                            datos={solicitud}\r\n                            tipoPublicacion={tipoPublicacion}\r\n                            contactar={true}/>\r\n                        )\r\n                    })\r\n                }\r\n            </Paper>\r\n        </div>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link} from \"react-router-dom\";\r\n//Material UI\r\nimport {Typography, Paper, Avatar, Grid, IconButton} from '@material-ui/core/'\r\nimport Cargando from '@material-ui/core/LinearProgress';\r\n\r\nimport Estilos from '../Estilos';\r\n//Estado global de la aplicación\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Este componente es el que se muestra al inicio del sistema, permite seleccionar una categoría para ver publicaciones\r\nexport default function Inicio({tipo}) {\r\n  const classes = Estilos();\r\n  const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n  //Variables del componente\r\n  const [categorias, setcategorias] = useState([])\r\n  const [cargando, setcargando] = useState(false)\r\n  \r\n  //Función que se ejecuta en el primer renderizado del componente, ejecuta buscarCategorias() para establecer todas las categorias\r\n  useEffect(()=>{\r\n    if (state.jwt!==\"\" || state.publico===true){\r\n      setcargando(true)\r\n      buscarCategorias()\r\n    }\r\n  },[state.jwt, state.publico])\r\n  \r\n  //Esta función busca todas las categorías del sistema para poder mostrarlas en pantalla\r\n  function buscarCategorias(){\r\n    axios.get(state.servidor+\"/api/categorias\")\r\n    .then(response => {\r\n      setcategorias(response.data)\r\n      setcargando(false)\r\n    })\r\n    .catch(error => {\r\n      console.log(\"Un error ha ocurrido al cargar las categorías.\")\r\n      console.log(error.response)\r\n    }) \r\n  }\r\n\r\n  return (\r\n    <div className={classes.fondo} >\r\n      <Paper elevation={3} className=\"Fondo\" style={{width:\"85%\"}}>      \r\n        <Typography component=\"h3\" variant=\"h3\" align=\"center\">Servia</Typography>\r\n        <Typography component=\"h4\" variant=\"h5\" align=\"center\">{tipo?\"¡Encuentra tu servicio ideal!\":\"¡Contacta con personas que buscan tu ayuda!\"}</Typography>\r\n        \r\n        \r\n        {\r\n          //Cuando cargando es true (seteado al momento de empezar a realizar la búsqueda de las categorías), nos muestra el componente de carga,\r\n          //y desaparece cuando cambia a false (seteado al finalizar la búsqueda de los datos)\r\n          cargando && <Cargando style={{margin:\"15px\"}}/>\r\n        }\r\n        <hr/>\r\n        <Grid container spacing={5} justify=\"space-around\" alignItems=\"center\">\r\n          {\r\n            categorias.map((cat, i) => (\r\n              <Grid item sm={4} md={3} lg={2} key={i} align=\"center\">\r\n                {\r\n                  <Link to={state.ruta+\"/publicaciones/\"+cat.id} className={classes.EstiloLink}>\r\n                    <Typography align=\"center\">{cat.nombre}</Typography>\r\n                    <IconButton>\r\n                      <Avatar style={{width:\"100px\", height:\"100px\"}} src={state.servidor+cat.imagen.formats.thumbnail.url} color=\"secondary\" fontSize=\"inherit\"/>\r\n                    </IconButton>\r\n                  </Link>\r\n                }\r\n              </Grid>\r\n            ))\r\n          }\r\n          </Grid>\r\n          <hr/>\r\n          {cargando && <br/>}\r\n        </Paper>\r\n    </div>\r\n  );\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport axios from 'axios'\r\nimport { Link  } from 'react-router-dom';\r\n//Material-UI\r\nimport {Hidden, Paper, Grid, Typography, Avatar, Divider, Button, ListSubheader, List, ListItem, ListItemText, Tooltip, Collapse, IconButton} from '@material-ui/core';\r\nimport {Phone as PhoneIcon, FileCopy as Copiar, ExpandLess, ExpandMore, CheckCircleOutline as Verificado} from '@material-ui/icons/';\r\nimport Alerta from '@material-ui/lab/Alert';\r\n\r\nimport Estilos from '../Estilos.js';\r\nimport AlertaMensaje from '../AlertaMensaje.js';\r\n\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Subcomponente que contiene la información del perfil de un proveedor\r\nexport default function ProveedorInfo({esDePerfil, datosPerfil}) {\r\n  const classes = Estilos();\r\n  const { state } = useContext(ObtenerEstadoAplicacion);\r\n  const [categorias, setcategorias] = useState([])\r\n  const [copiado, setcopiado] = useState(false)\r\n\r\n  const [DatosPerfil, setDatosPerfil] = useState({\r\n    id: null,\r\n    descripcion:\"\",\r\n    titulo:\"\",\r\n    identidad_verificada: false,\r\n    telefono: \"\",\r\n    mostrar_telefono: false,\r\n    servicios: [],\r\n    pausado: false,\r\n    bloqueado: false,\r\n  })\r\n\r\n  //Seteamos los datos del perfil del proveedor\r\n  useEffect(()=>{\r\n  if (state.jwt!==\"\" || state.publico===true)\r\n    if(datosPerfil!==null){\r\n      setDatosPerfil(datosPerfil)\r\n      buscarCategorias(datosPerfil)\r\n    }\r\n  },[datosPerfil])\r\n\r\n  //Función que trae las categorías que el proveedor tiene asociadas a los servicios que ofrece\r\n  function buscarCategorias(perfil){\r\n    let ids_categorias = perfil.servicios.map((servicio) =>(servicio.categoria))\r\n    let ids_consultas = \"\"\r\n\r\n    ids_categorias.map((id)=>{\r\n      ids_consultas+=\"id_in=\"+id+\"&\"\r\n    })\r\n\r\n    if (ids_consultas!==\"\"){\r\n      axios.get(\r\n        state.servidor+\"/api/categorias?\"+ids_consultas\r\n      )\r\n      .then(response => {\r\n        setcategorias(response.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Un error ha ocurrido al cargar las categorías.\")\r\n        console.log(error.response)\r\n      }) \r\n    }\r\n  }\r\n\r\n  function copiarAlPortapapeles(telefono) {\r\n    // Crea un campo de texto \"oculto\"\r\n    var aux = document.createElement(\"input\");\r\n    // Asigna el contenido del elemento especificado al valor del campo\r\n    aux.setAttribute(\"value\", telefono);\r\n    // Añade el campo a la página\r\n    document.body.appendChild(aux);\r\n    // Selecciona el contenido del campo\r\n    aux.select();\r\n    // Copia el texto seleccionado\r\n    document.execCommand(\"copy\");\r\n    // Elimina el campo de la página\r\n    document.body.removeChild(aux);\r\n    setcopiado(true)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.proveedorSticky}>\r\n      <Paper elevation={5}>\r\n        <Grid className={classes.padding} container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n            <Grid item xs={12} className={esDePerfil?classes.EstiloPC:classes.EstiloVacio}>\r\n              <Avatar\r\n              alt=\"Perfil\"\r\n              src={DatosPerfil.imagen_perfil!==null?state.servidor+DatosPerfil.imagen_perfil:state.imagen_predeterminada}\r\n              className={classes.imagenPublicacion}/>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} hidden={esDePerfil}>\r\n              <Typography variant=\"h5\" component=\"h3\" align=\"center\">\r\n                <Link to={state.ruta+\"/perfil-proveedor/\"+DatosPerfil.id} className={classes.EstiloLink}>\r\n                  {DatosPerfil.titulo}\r\n                  <Hidden xlDown={!DatosPerfil.identidad_verificada}>\r\n                    <Tooltip title=\"Usuario verificado\">\r\n                      <IconButton><Verificado color=\"primary\"/></IconButton>\r\n                    </Tooltip>\r\n                  </Hidden>\r\n                </Link>\r\n              </Typography>\r\n           </Grid>\r\n\r\n           <Grid item xs={12} hidden={esDePerfil}>\r\n           {\r\n              DatosPerfil.pausado && (<Alerta className={classes.inputAncho} style={{marginBottom:\"10px\"}} variant=\"outlined\" severity=\"warning\">\r\n                Este proveedor ha pausado sus servicios.\r\n              </Alerta>)\r\n            }\r\n            {\r\n              DatosPerfil.bloqueado && (<Alerta className={classes.inputAncho} style={{marginBottom:\"10px\"}} variant=\"outlined\" severity=\"error\">\r\n                Este proveedor se encuentra bloqueado.\r\n              </Alerta>)\r\n            }\r\n            </Grid>\r\n\r\n           <Grid item xs={12} hidden={esDePerfil}>\r\n              <Divider/> \r\n              <Typography variant=\"body1\" component=\"p\" align=\"justify\"> \r\n                {DatosPerfil.descripcion}\r\n              </Typography>\r\n           </Grid>\r\n            \r\n           <Grid item xs={12}>\r\n                <Divider/> \r\n                <List\r\n                component=\"nav\"\r\n                aria-labelledby=\"nested-list-subheader\"\r\n                subheader={\r\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                        Servicios ofrecidos\r\n                    </ListSubheader>\r\n                }\r\n                >\r\n                    <Divider/>\r\n                    {\r\n                      categorias.map((categoria, i)=>(\r\n                        <Categorias key={i} categoria={categoria} DatosPerfil={DatosPerfil} /> \r\n                      ))\r\n                    }\r\n                    <Divider/>\r\n                </List>         \r\n           </Grid>\r\n           <Hidden xlDown={!DatosPerfil.mostrar_telefono}>\r\n            {\r\n              DatosPerfil.telefono.length!==0 &&\r\n              <Grid item xs={12}>\r\n                <a className={classes.EstiloLink} href={\"tel:\"+DatosPerfil.telefono}>\r\n                  <Button startIcon={<PhoneIcon/>}>\r\n                    {DatosPerfil.telefono}\r\n                  </Button>\r\n                </a>\r\n                <Tooltip title=\"Copiar\">\r\n                  <IconButton onClick={()=>copiarAlPortapapeles(DatosPerfil.telefono)}><Copiar/></IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            }\r\n           </Hidden>\r\n        </Grid>\r\n      </Paper>\r\n      <AlertaMensaje mensaje={\"Copiado al portapapeles\"} abrir={copiado} setabrir={setcopiado}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n//Subcomponente que muestra los datos de la categoría y servicios que ofrece el proveedor\r\nfunction Categorias({categoria, DatosPerfil}) {\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n    return (\r\n        <div>\r\n            <ListItem button onClick={handleClick}>\r\n                <ListItemText primary={categoria.nombre}/>\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <Divider/>\r\n                      {\r\n                        DatosPerfil.servicios.map((servicio, i) => {\r\n                          if(servicio.categoria===categoria.id){\r\n                            return (\r\n                              <Typography key={i} variant=\"h6\" component=\"h5\" align=\"left\">\r\n                                {servicio.nombre}\r\n                              </Typography>\r\n                            )\r\n                          }\r\n                        }\r\n                        )\r\n                      }\r\n                    <Divider/>\r\n                </List>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState, useContext} from 'react'\r\nimport axios from 'axios'\r\n\r\n//Material UI\r\nimport {LinearProgress, Tooltip, FormGroup, FormControlLabel, Checkbox, Modal, Backdrop, Fade, Typography, TextField, Button, Hidden} from '@material-ui/core/';\r\nimport Reportar from '@material-ui/icons/PriorityHigh';\r\nimport Estilos from '../Estilos.js';\r\nimport AlertaMensaje from '../AlertaMensaje.js';\r\n\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Subcomponente utilizado cada vez que se quiere reportar una publicación o un perfil\r\nexport default function ReportarPublicacion({esDePerfil, solicitud, abrirAlerta}) {\r\n  const classes = Estilos();\r\n  const { state } = useContext(ObtenerEstadoAplicacion);\r\n  const [open, setOpen] = useState(false);\r\n  const [motivos, setmotivos] = useState([{id: null, nombre: \"\",tipo: false}])\r\n  const [motivosSeleccionados, setmotivosSeleccionados] = useState([])\r\n  const [descripcion, setdescripcion] = useState(\"\")\r\n  const [abrir, setabrir] = useState(false)\r\n  const [cargando, setcargando] = useState(false)\r\n  const [mensaje, setmensaje] = useState(false);\r\n\r\n  //Ejecutados cuando se abre o se cierra la ventana modal\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setmotivosSeleccionados([])\r\n    setOpen(false);\r\n  };\r\n\r\n  //Función ejecutada cada vez que se selecciona un motivo\r\n  function seleccionarMotivo(Motivo){\r\n    if(mensaje===true)\r\n      setmensaje(false)\r\n    let esta = motivosSeleccionados.some((motivo) => motivo.id===Motivo.id)\r\n    //Si no está, se lo agrega al arreglo, caso contrario se lo quita\r\n    if(!esta){\r\n      setmotivosSeleccionados((arreglo)=>[...arreglo, {id:Motivo.id, nombre:Motivo.nombre}])\r\n    }else{\r\n      setmotivosSeleccionados(motivosSeleccionados.filter((motivo)=>motivo.id!==Motivo.id))\r\n    }\r\n  }\r\n\r\n  //Traemos los motivos existentes en el sistema\r\n  useEffect(()=>{\r\n    if(state.jwt!==\"\" || state.publico===true){\r\n      axios.get(state.servidor+\"/api/motivos?tipo=\"+esDePerfil)\r\n      .then(response => {\r\n        setmotivos(response.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Un error ha ocurrido al cargar las motivos.\")\r\n        console.log(error.response)\r\n      })      \r\n    }\r\n  },[state.jwt, state.publico])\r\n\r\n  //Función que se utiliza para ver si hay algún reporte ya hecho a esa publicación o perfil\r\n  function ComprobarReporte(reporte){\r\n    let auth = 'Bearer '+state.jwt;\r\n    //Si hay algún motivo seleccionado...\r\n    if(motivosSeleccionados.length!==0){\r\n      //Si existe ya algún reporte creado a la publicación o al perfil...\r\n      if(reporte.length!==0){\r\n        let fecha = new Date()\r\n        let reporte_conjunto = reporte[0]\r\n        //Concatenamos la descripción del reporte viejo con el del nuevo reporte\r\n        let _descripcion = descripcion.length!==0?descripcion:\"El usuario no ha proporcionado información adicional.\"\r\n        let descripcion_=\"##Nuevo reporte (Motivos:\"+\r\n        motivosSeleccionados.map(motivo=>(\" \"+motivo.nombre))+\") del día \"\r\n        +fecha.getDate()+\"/\"+(fecha.getMonth()+1)+\"/\"+fecha.getFullYear()+\": \"+_descripcion\r\n        //Modificamos el reporte\r\n        axios.put(state.servidor+\"/api/reportes/\"+reporte_conjunto.id,{\r\n          descripcion: reporte_conjunto.descripcion+descripcion_\r\n        },\r\n          {headers: {'Authorization': auth},\r\n        })\r\n        .then(response => {\r\n          setmensaje(false)\r\n          handleClose()\r\n          setabrir(true)\r\n          setcargando(false)\r\n          setmotivosSeleccionados([])\r\n          setdescripcion(\"\")\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Un error ha ocurrido al cargar las motivos.\")\r\n          console.log(error.response)\r\n        })\r\n      }else{\r\n        //Si no existe ya algún reporte creado a la publicación o al perfil, creamos el reporte\r\n        axios.post(state.servidor+\"/api/reportes\",{\r\n          motivos: motivosSeleccionados.map(motivo_=>(motivo_.id)),\r\n          Solicitud_id: esDePerfil?null:solicitud.id,\r\n          Usuario_id: esDePerfil?solicitud.id:solicitud.Usuario_id.id,\r\n          accion: false,\r\n          estado: 0,\r\n          descripcion: descripcion\r\n        },{\r\n          headers: {'Authorization': auth},\r\n        })\r\n        .then(response => {\r\n          console.log(response.data)\r\n          setmensaje(false)\r\n          handleClose()\r\n          setabrir(true)\r\n          setcargando(false)\r\n          setmotivosSeleccionados([])\r\n          setdescripcion(\"\")\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Un error ha ocurrido al cargar las motivos.\")\r\n          console.log(error.response)\r\n        })\r\n      }\r\n    }else{\r\n      setcargando(false)\r\n      setmensaje(true)\r\n    }\r\n  }\r\n\r\n  //Función que se ejecuta al enviar el reporte\r\n  function EnviarReporte(){\r\n    setcargando(true)\r\n    let auth = 'Bearer '+state.jwt;\r\n    //Si el reporte es a una publicación, entonces se trae el reporte (si es que existe) que coincida con el id de la publicación y su estado sea \"En espera\"\r\n    if(!esDePerfil && solicitud.id!==null){\r\n      axios.get(state.servidor+\"/api/reportes?Solicitud_id=\"+solicitud.id+\"&estado=0\"\r\n        ,{headers: {'Authorization': auth},\r\n      })\r\n      .then(response => {\r\n        ComprobarReporte(response.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Un error ha ocurrido al cargar las motivos.\")\r\n        console.log(error.response)\r\n      })\r\n    }\r\n    //Si el reporte es a un perfil, entonces se trae el reporte (si es que existe) que coincida con el id del usuario y su estado sea \"En espera\"\r\n    if(esDePerfil && solicitud.id!==null){\r\n      axios.get(state.servidor+\"/api/reportes?Usuario_id=\"+solicitud.id+\"&estado=0\"\r\n        ,{headers: {'Authorization': auth},\r\n      })\r\n      .then(response => {\r\n        let reportes_solicitud_null = response.data.filter((reporte) => reporte.Solicitud_id===null)\r\n        ComprobarReporte(reportes_solicitud_null)\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Un error ha ocurrido al cargar las motivos.\")\r\n        console.log(error.response)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {abrir && <AlertaMensaje mensaje=\"¡Se ha enviado su reporte correctamente!\" abrir={abrir} setabrir={setabrir}/>}\r\n      <Tooltip title={esDePerfil?\"Reportar proveedor de servicios\":\"Reportar publicación\"}>\r\n        <Button\r\n            onClick={handleOpen}\r\n        ><Reportar/>\r\n        </Button>\r\n      </Tooltip>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.mostrarFlex}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition={true}\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.papelFondo}>\r\n            <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n                Seleccione los motivos:\r\n            </Typography>\r\n            <FormGroup required>\r\n            {\r\n              motivos.map((motivo,i)=>(\r\n                <FormControlLabel\r\n                  key={i}\r\n                  control={\r\n                  <Checkbox\r\n                    variant=\"error\"\r\n                    onChange={()=>{seleccionarMotivo(motivo)}}\r\n                  />\r\n                  }\r\n                  label={motivo.nombre}\r\n                />\r\n              ))\r\n            }\r\n            </FormGroup>\r\n\r\n            <Hidden xlDown={!mensaje || cargando}>\r\n              <Typography color=\"error\">\r\n                Debe seleccionar un motivo.\r\n              </Typography>\r\n            </Hidden>\r\n\r\n            <TextField\r\n            className={classes.inputAncho}\r\n            onChange={(e)=>{setdescripcion(e.target.value)}}\r\n            value={descripcion}\r\n            id=\"filled-basic\"\r\n            label=\"Informacion adicional\"\r\n            variant=\"filled\"\r\n            multiline/>\r\n\r\n            <br/>\r\n            {cargando && <LinearProgress color=\"secondary\"/>}\r\n            \r\n            <Button\r\n            disabled={cargando}\r\n            className={classes.inputAncho}\r\n            style={{marginTop:10}}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={EnviarReporte}>Enviar</Button>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React, {useState, useEffect, useContext} from 'react';\r\n//Material-UI\r\nimport {Hidden, Paper, Grid, Typography, Breadcrumbs, Avatar, Tooltip, IconButton} from '@material-ui/core/';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Verificado from '@material-ui/icons/CheckCircleOutline';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport ReportarPublicacion from './ReportarPublicacion.js'\r\nimport Estilos from '../Estilos.js';\r\nimport Alerta from '@material-ui/lab/Alert';\r\n\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Subcomponente que contiene la información de la publicación o parte de la información el perfil de un proveedor\r\nexport default function PublicacionInfo({esDePerfil, datosPagina, abrirAlerta}) {\r\n  const classes = Estilos();\r\n  const { state } = useContext(ObtenerEstadoAplicacion);\r\n  const [imagenes, setimagenes] = useState([])\r\n  const [DatosPagina, setDatosPagina] = useState({\r\n    id: null,\r\n    titulo:\"\",\r\n    precio:\"\",\r\n    categoria:\"\",\r\n    servicio:\"\",\r\n    estrella: 0,\r\n    descripcion:\"\",\r\n    imagenes:[\"\"],\r\n    pausado: false,\r\n    bloqueado: false,\r\n    Usuario_id: null,\r\n    imagen_perfil: \"\",\r\n    updated_at: Date.now()\r\n  });\r\n\r\n  //Seteamos los datos de la publicación o perfil en el componente\r\n  useEffect(()=>{\r\n    if (state.jwt!==\"\" || state.publico===true){\r\n      if(datosPagina!==null){\r\n        let img = datosPagina.imagenes.map((imagen)=>{\r\n          return ({\r\n            original: state.servidor+imagen.url,\r\n            thumbnail: state.servidor+imagen.url\r\n          })\r\n        })\r\n        setimagenes(img)\r\n        setDatosPagina({\r\n          id: datosPagina.id,\r\n          titulo: datosPagina.titulo,\r\n          categoria: datosPagina.categoria,\r\n          servicio: datosPagina.servicio,\r\n          estrella: 0,\r\n          descripcion: datosPagina.descripcion,\r\n          precio_estimado: datosPagina.precio_estimado,\r\n          tipo: datosPagina.tipo,\r\n          pausado: datosPagina.pausado,\r\n          imagenes: datosPagina.imagenes,\r\n          bloqueado: datosPagina.bloqueado,\r\n          Usuario_id: datosPagina.Usuario_id,\r\n          imagen_perfil: datosPagina.imagen_perfil,\r\n          updated_at: datosPagina.updated_at\r\n        })\r\n      }\r\n    }\r\n  },[datosPagina, state.jwt, state.publico])\r\n\r\n  //Si la publicación lleva mas de 10 dias sin modificarse, se considera como vencida (esto para evitar que ciertas\r\n  //publicaciones se muestren para siempre, en el caso de que el usuario deje de visitar a Servia)\r\n  function publicacionVencida(){\r\n    let hoy = Date.now()\r\n    let modificado = new Date(DatosPagina.updated_at)\r\n    //Calculamos la cantidad de dias que lleva la publicación sin editarse\r\n    let dias = parseInt((hoy-modificado)/1000/60/60/24)\r\n    //Segun el tipo de publicación el tiempo de vencimiento es mayor o menor. Si es una solicitud 15 dias, sino 30\r\n    let diasTipo = DatosPagina.tipo?30:15\r\n    if(dias >diasTipo){\r\n      return (<Alerta className={classes.inputAncho} style={{marginBottom:\"10px\"}} variant=\"outlined\" severity=\"info\">\r\n        Esta publicación se encuentra vencida, por lo tanto no aparecerá en las búsquedas. Para que vuelva a aparecer su creador debe editarla.\r\n        Tenga en cuenta que las solicitudes se vencen al cabo de 15 días y las publicaciones de proveedores a los 30 días.\r\n        --Si usted quiere contactar a este proveedor/cliente, tenga en cuenta que es posible que no le responda o no le responda a  tiempo, ya que puede estar inactivo en Servia.--\r\n      </Alerta>)\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.mostrarFlex}>\r\n      <Paper elevation={5} >\r\n        <Grid className={classes.padding} container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n            {\r\n              //En el caso de que el componente fuese utilizado para mostrar datos de un perfil, en DatosPagina.precio_estimado estará la cadena \"perfil\"\r\n              DatosPagina.pausado && (<Alerta className={classes.inputAncho} style={{marginBottom:\"10px\"}} variant=\"outlined\" severity=\"warning\">\r\n                {DatosPagina.precio_estimado===\"perfil\"?\"Este proveedor ha pausado sus servicios.\":\"Esta publicación se encuentra pausada.\"}\r\n              </Alerta>)\r\n            }\r\n            {\r\n              DatosPagina.bloqueado && (<Alerta className={classes.inputAncho} style={{marginBottom:\"10px\"}} variant=\"outlined\" severity=\"error\">\r\n                {DatosPagina.precio_estimado===\"perfil\"?\"Este proveedor se encuentra bloqueado.\":\"Esta publicación se encuentra bloqueada.\"}\r\n              </Alerta>)\r\n            }\r\n            {\r\n              !esDePerfil && publicacionVencida()\r\n            }\r\n            <Grid item lg={12} hidden={!esDePerfil} align=\"center\" className={esDePerfil?classes.EstiloMovil:classes.EstiloVacio}>\r\n              <Avatar\r\n              alt=\"Perfil\"\r\n              src={DatosPagina.imagen_perfil!==\"\"?state.servidor+DatosPagina.imagen_perfil:state.imagen_predeterminada}\r\n              className={classes.imagenPublicacion} />\r\n            </Grid>\r\n\r\n            <Grid item lg={4} md={4} sm={12} hidden={esDePerfil}>\r\n                <Typography variant=\"h6\" component=\"h3\" align=\"left\">\r\n                  {DatosPagina.tipo?\"Precio estimado:\":\"Presupuesto:\"} ${DatosPagina.precio_estimado}\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid hidden={esDePerfil} item lg={7} md={7} sm={11} align=\"right\">\r\n              <div align=\"right\">\r\n                <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                  <Typography color=\"inherit\">{DatosPagina.categoria}</Typography>\r\n                  {\r\n                    datosPagina.tipo &&\r\n                    <Typography color=\"inherit\">{DatosPagina.servicio}</Typography>\r\n                  }\r\n                </Breadcrumbs>\r\n                  </div>\r\n            </Grid>\r\n            \r\n            {//Si se está logueado y no se está bloqueado, se permite reportar\r\n              state.publico===false && !esDePerfil && !DatosPagina.bloqueado &&\r\n              <Grid item lg={1} md={1} sm={1}>\r\n                <ReportarPublicacion esDePerfil={esDePerfil} solicitud={DatosPagina}/>\r\n              </Grid>\r\n            }\r\n            \r\n            <Grid item xs={esDePerfil?11:12} sm={esDePerfil?11:12}>\r\n              <Typography variant=\"h5\" component=\"h1\" align=\"left\">\r\n                {DatosPagina.titulo}\r\n                {\r\n                  esDePerfil && <Hidden xlDown={!DatosPagina.identidad_verificada}><Tooltip title=\"Usuario verificado\">\r\n                    <IconButton><Verificado color=\"primary\"/></IconButton>\r\n                  </Tooltip></Hidden>\r\n                }\r\n              </Typography>\r\n            </Grid>\r\n\r\n            {//Si se está logueado y no se está bloqueado, se permite reportar\r\n              state.publico===false && esDePerfil && !DatosPagina.bloqueado &&\r\n              <Grid item lg={1} md={1} sm={1}>\r\n                <ReportarPublicacion esDePerfil={esDePerfil} solicitud={DatosPagina}/>\r\n              </Grid>\r\n            }\r\n            \r\n            <Grid item xs={12}>\r\n              <Typography variant=\"body1\" component=\"p\" align=\"justify\"> \r\n                {DatosPagina.descripcion}    \r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <ImageGallery items={imagenes.length===0?[{original: state.imagen_predeterminada,thumbnail: state.imagen_predeterminada}]:imagenes}/>\r\n            </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","import React,{useState, useEffect, useContext} from 'react';\r\nimport axios from 'axios'\r\n\r\n//Material UI\r\nimport {Tooltip, Button, Typography, Paper, Grid, Chip} from '@material-ui/core/';\r\nimport Alerta from '@material-ui/lab/Alert';\r\nimport {ThumbUpAltTwoTone as Like, ThumbDownAltTwoTone as Dislike} from '@material-ui/icons';\r\n\r\nimport Estrellas from '../Estrellas.js';\r\nimport Estilos from '../Estilos.js';\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\nimport { format, register } from 'timeago.js';\r\n\r\n//Subcomponente que muestra las reseñas que tiene una determinada publicación en función del servicio que ofrece\r\nexport default function Opiniones({datos}) {\r\n    const classes = Estilos();\r\n    const { state } = useContext(ObtenerEstadoAplicacion);\r\n    const [opiniones, setopiniones] = useState([])\r\n    const [promedioEstrellas, setpromedioEstrellas] = useState(0)\r\n\r\n    //Traemos las reseñas que coincidan con el id del proveedor y el servicio que ofrece en la publicación\r\n    useEffect(()=>{\r\n        if (state.jwt!==\"\" || state.publico){  \r\n            if(datos.Usuario_id!==null){\r\n                axios.get(state.servidor+\"/api/resenas?proveedor=\"+datos.Usuario_id.id+\"&servicios=\"+datos.servicio_id)\r\n                .then(response => {\r\n                    setopiniones(response.data)\r\n                    let total = 0;\r\n                    response.data.map(opi => {\r\n                        total+= opi.recomendacion\r\n                    })\r\n                    //Calculamos el promedio de la puntuación de las reseñas\r\n                    setpromedioEstrellas(total/(response.data.length))\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"Un error ha ocurrido al buscar la solicitud.\")\r\n                    console.log(error.response)\r\n                })\r\n            }\r\n        }\r\n    },[state.jwt, state.publico, datos])\r\n    //Seteamos cómo se mostrará el \"hace cuanto tiempo\" se hizo la reseña\r\n    const localeFunc = (number, index, totalSec) => {\r\n        return [\r\n        ['justo ahora', 'justo ahora'],\r\n        ['hace %s segundos', 'en %s segundos'],\r\n        ['hace 1 minuto', 'en 1 minuto'],\r\n        ['hace %s minutos', 'en %s minutos'],\r\n        ['hace 1 hora', 'en 1 hora'],\r\n        ['hace %s horas', 'en %s horas'],\r\n        ['hace 1 día', 'en 1 día'],\r\n        ['hace %s días', 'en %s días'],\r\n        ['hace 1 semana', 'en 1 semana'],\r\n        ['hace %s semanas', 'en %s semanas'],\r\n        ['hace 1 mes', 'en 1 mes'],\r\n        ['hace %s meses', 'en %s meses'],\r\n        ['hace 1 año', 'en 1 año'],\r\n        ['hace %s años', 'en %s años']\r\n        ][index];\r\n    };\r\n    register('spanish', localeFunc);\r\n\r\n    return (\r\n        <div className={classes.mostrarFlex}>\r\n        <Paper elevation={5}>\r\n            <Grid className={classes.padding} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h4\" component=\"h2\" align=\"left\">\r\n                        Reseñas\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" component=\"h2\" align=\"center\" align=\"left\">\r\n                        {\r\n                            opiniones.length!==0 &&\r\n                            <><Estrellas clickeable={false} valor={promedioEstrellas}/> {`Puntuación promedio de ${promedioEstrellas} en base a ${opiniones.length} reseñas hechas por otros usuarios.`}</>\r\n                        }\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {\r\n                        opiniones.length===0 && <Alerta className={classes.inputAncho} style={{marginBottom:\"10px\"}} variant=\"outlined\" severity=\"info\">\r\n                        {\"Esta publicación aún no tiene reseñas\"}\r\n                      </Alerta>\r\n                    }\r\n                    {\r\n                        opiniones.map((opinion, i)=>(\r\n                            <Resena opinion={opinion} key={i}/>\r\n                        ))\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\n//Subcomponente que muestra cada reseña\r\nfunction Resena({opinion}) {\r\n    const classes = Estilos();\r\n    return (\r\n        <Paper variant=\"outlined\" square>\r\n            <Grid className={classes.padding} container direction=\"row\" justify=\"space-around\" alignItems=\"baseline\">\r\n                <Grid item xs={6}>\r\n                    <Typography variant=\"h5\" component=\"h2\" align=\"left\">\r\n                        {opinion.titulo}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Estrellas clickeable={false} valor={opinion.recomendacion}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"body1\" component=\"p\" align=\"justify\"> \r\n                        {opinion.descripcion}\r\n                    </Typography> \r\n                </Grid>\r\n                {/*\r\n                    true && <Grid item xs={4} align=\"left\">\r\n                        <Tooltip title=\"Me sirve\">\r\n                            <Button startIcon={<Like/>}>\r\n                                {opinion.votos_positivos}\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"No me sirve\">\r\n                            <Button color=\"secondary\" startIcon={<Dislike/>}>\r\n                                {opinion.votos_negativos}\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                */}\r\n                \r\n                    {\r\n                        opinion.servicios.map((servicio, i)=>(\r\n                            <Grid key={i} item xs={2} align=\"center\">\r\n                                <Chip variant=\"outlined\" label={servicio.nombre}/>\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n                    \r\n                <Grid item xs={2} align=\"right\">\r\n                    {format(new Date(opinion.created_at),\"spanish\")}\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n  }","import React, {useEffect, useState, useContext} from 'react';\r\n\r\n//Material-UI\r\nimport {Grid, Container} from '@material-ui/core/';\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\n//Componentes\r\nimport ProveedorInfo from './ProveedorInfo.js';\r\nimport PublicacionInfo from './PublicacionInfo.js';\r\nimport Opiniones from './Opiniones.js';\r\nimport {BotonContratar} from '../ContactarProveedor.js'\r\n\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Componente que llama a los subcomponentes que debería tener una publicación, para mostrarlos\r\nexport default function Publicacion() {\r\n    const { state } = useContext(ObtenerEstadoAplicacion);\r\n    let { id } = useParams();\r\n    const [datosPerfil, setdatosPerfil] = useState({\r\n        id: null,\r\n        descripcion:\"\",\r\n        nombre:\"\",\r\n        apellido:\"\",\r\n        identidad_verificada: false,\r\n        telefono: \"\",\r\n        mostrar_telefono: false,\r\n        pausado: false,\r\n        bloqueado: false,\r\n        servicios: [],\r\n        imagen_perfil: \"\"\r\n    })\r\n    const [datosPagina, setdatosPagina] = useState({\r\n        id: null,\r\n        descripcion:\"\",\r\n        titulo:\"\",\r\n        precio_estimado: 0,\r\n        tipo: false,\r\n        pausado: false,\r\n        bloqueado: false,\r\n        imagenes: [],\r\n        Usuario_id: null\r\n    })\r\n\r\n    //Traemos los datos de la publicación\r\n    useEffect(()=>{\r\n        if (state.jwt!==\"\" || state.publico===true){            \r\n            axios.get(state.servidor+\"/api/solicitud/\"+id)\r\n            .then(response => {\r\n                obtenerUsuario(response.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Un error ha ocurrido al buscar la solicitud.\")\r\n                console.log(error.response)\r\n            }) \r\n        }\r\n    },[state.jwt, state.publico])\r\n\r\n    //Función que setea los datos de la publicación y del proveedor en variables que luego serán pasadas a los subcomponentes\r\n    function obtenerUsuario(data){\r\n        setdatosPagina({\r\n            id: data.id,\r\n            titulo: data.titulo,\r\n            descripcion: data.descripcion,\r\n            precio_estimado: data.precio_estimado,\r\n            tipo: data.tipo,\r\n            pausado: data.pausado,\r\n            imagenes: data.imagenes,\r\n            categoria: data.Categoria_id.nombre,\r\n            servicio: data.tipo?data.Servicio_id.nombre:null,\r\n            Usuario_id: data.Usuario_id,\r\n            bloqueado: data.bloqueado,\r\n            servicio_id: data.tipo?data.Servicio_id.id:null,\r\n            updated_at: data.updated_at,\r\n        })\r\n\r\n        let auth = state.jwt!==\"\"?'Bearer '+state.jwt:\"\";\r\n        \r\n        axios.get(\r\n            state.servidor+\"/users/\"+data.Usuario_id.id,{\r\n                headers: {\r\n                'Authorization': auth\r\n                },\r\n            })\r\n            .then(response => {\r\n                setdatosPerfil({\r\n                    id: response.data.id,\r\n                    descripcion: response.data.descripcion,\r\n                    titulo: `${response.data.nombre} ${response.data.apellido}`,\r\n                    identidad_verificada: response.data.identidad_verificada,\r\n                    telefono: response.data.telefono,\r\n                    mostrar_telefono: response.data.mostrar_telefono,\r\n                    servicios: response.data.servicios,\r\n                    bloqueado: response.data.bloqueado,\r\n                    pausado: response.data.estado,\r\n                    imagen_perfil: response.data.imagen_perfil===null?null:response.data.imagen_perfil.url,\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Un error ha ocurrido al buscar el usuario.\")\r\n                console.log(error.response)\r\n            }) \r\n    }\r\n\r\n    return (\r\n        <Container style={{width: \"95%\"}}>\r\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\r\n                <Grid item md={8} xs={12}>\r\n                  <PublicacionInfo esDePerfil={false} datosPagina={datosPagina}/>\r\n                  {datosPagina.tipo && <Opiniones datos={datosPagina}/>}\r\n                </Grid>  \r\n\r\n                {\r\n                    datosPagina.tipo && (\r\n                        <Grid item md={4} xs={12} >\r\n                            <ProveedorInfo esDePerfil={false} datosPerfil={datosPerfil}/>\r\n                        </Grid> \r\n                    )\r\n                }\r\n                {\r\n                    //Si no es el dueño de la publicación, si no es un usuario en una solicitud de servicio\r\n                    //y si el proveedor o la publicación no se encuentra pausada o bloqueada, entonces ofrecemos la posibilidad de contactarlo \r\n                    datosPerfil.id!==state.datosSesion.id && !datosPagina.pausado && !datosPagina.bloqueado && !datosPerfil.pausado && !datosPerfil.bloqueado &&\r\n                    (datosPagina.tipo?true:state.datosSesion.tipo!==1) &&\r\n                    <BotonContratar fijo={true} esDePerfil={false} datos={{idS: datosPagina.id, idP: datosPerfil.id, nombre: datosPerfil.titulo, imagen_perfil: datosPerfil.imagen_perfil}} />\r\n                }\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n","import React,{useEffect, useContext, useState} from 'react';\r\nimport 'react-dropzone-uploader/dist/styles.css'\r\nimport Dropzone from 'react-dropzone-uploader'\r\nimport axios from 'axios'\r\nimport { ObtenerEstadoAplicacion } from '../Estados/AplicacionEstado'\r\n\r\n//Componente utilizado para la carga de imágenes en el sitio\r\nconst SingleFileAutoSubmit = ({cantidad, funcionSetImagen, ids, setcargando}) => {\r\n  //Constante del componente \r\n  const toast = (innerHTML) => {\r\n      const el = document.getElementById('toast')\r\n      el.innerHTML = innerHTML\r\n      el.className = 'show'\r\n      setTimeout(() => { el.className = el.className.replace('show', '') }, 3000)\r\n    }\r\n  \r\n  //Variables del componente\r\n  const [archivos, setarchivos] = useState([])\r\n  const [archivosSubidos, setarchivosSubidos] = useState([])\r\n  const { state } = useContext(ObtenerEstadoAplicacion);\r\n  \r\n  //Cada vez que se agreguen nuevas imágenes o se carguen las imágenes guardadas, se ejecuta este método\r\n  useEffect(()=>{\r\n    //Si hay algún id distinto de nulo\r\n    if(state.datosSesion.id!==null && ids.some(id=>(id!==null))){\r\n      let IDS = \"\"\r\n      //Concatenamos todos los ids para poder realizar la consulta\r\n      ids.map((id)=>{\r\n        if(id!==null){\r\n          IDS+=\"id_in=\"+id+\"&\"\r\n        }\r\n      })\r\n      axios.get(state.servidor+\"/upload/files?\"+IDS)\r\n      .then(response => {\r\n        response.data.map((dat) => {\r\n          //Creamos los archivos de imágenes\r\n          hacerArchivo(dat)\r\n        })\r\n      })  \r\n      .catch(error => {\r\n          console.log(\"Error: \", error.response)\r\n      })\r\n    }\r\n  },[ids])\r\n    \r\n    //Método que sirve para transformar las imágenes que maneja el backend a imágenes que utiliza el componente\r\n    function hacerArchivo(imagen) {\r\n      let imagenUrl = state.servidor+imagen.url\r\n      let file\r\n      fetch(imagenUrl).then(res => {\r\n        res.arrayBuffer().then(buf => {\r\n          file = new File([buf], \"\"+imagen.id, { type: 'image/jpeg' })\r\n          setarchivos([...archivos, file])\r\n          setarchivosSubidos(arch => [...arch, file])\r\n        })\r\n      })\r\n    }\r\n\r\n    //Seteamos las imágenes\r\n    const getUploadParams = ({ file, meta }) => {\r\n      funcionSetImagen(file, cantidad, 0, archivosSubidos)\r\n      return { url: 'https://httpbin.org/post'}\r\n    }\r\n    \r\n    //Se ejecuta cada vez que cambia el estado del componente\r\n    const handleChangeStatus = ({ meta, file }, status) => {\r\n      //Si se remueve una imagen, se la quita del arreglo de imágenes a subir o se la agrega al arreglo de imágenes a borrar, según se necesite\r\n      if (status === 'removed') {\r\n        funcionSetImagen(file, cantidad, 1, archivosSubidos);\r\n      }\r\n      if (status === 'uploading'){\r\n        setcargando(true)\r\n      }\r\n      if (status === 'done'){\r\n        setcargando(false)\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <Dropzone\r\n          getUploadParams={getUploadParams}\r\n          onChangeStatus={handleChangeStatus}\r\n          maxFiles={cantidad}\r\n          initialFiles={ids.length!==0?archivos:null}\r\n          multiple={true}\r\n          maxSizeBytes={5000000}\r\n          canCancel={false}\r\n          accept=\"image/*\"\r\n          inputWithFilesContent={'Subir otra imagen'}\r\n          inputContent={()=>(cantidad===1?`Selecciona ${cantidad} imagen`:`Selecciona hasta ${cantidad} imágenes`)}\r\n          styles={{\r\n            dropzone: { width: \"100%\", height: \"100%\", overflow:\"auto\"},\r\n            dropzoneActive: { borderColor: 'green' },\r\n          }}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  export default SingleFileAutoSubmit;","import React, {useState, useEffect} from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {Done as DoneIcon, Clear as ClearIcon} from '@material-ui/icons';\r\n\r\nimport Estilos from './Estilos.js';\r\n\r\n//Componente utilizado para el proceso de selección de servicios de la página por un determinado proveedor\r\nexport default function SeleccionarServicio({servicio, agregarSeleccionado}) {\r\n  const classes = Estilos();\r\n  const [hecho_noHecho, setHecho_noHecho] = useState((<div><ClearIcon/></div>));\r\n  const [seleccion, setSeleccion] = useState(servicio.seleccionado);\r\n\r\n  //Si el servicio está seleccionado, entonces se cambia el icono al correspondiente, y viceversa\r\n  useEffect(()=>{\r\n    if(servicio.seleccionado===true){\r\n      setSeleccion(true);\r\n      setHecho_noHecho(<div><DoneIcon/></div>);\r\n    }else{\r\n      setSeleccion(false);\r\n      setHecho_noHecho(<div><ClearIcon/></div>);\r\n    }\r\n  },[])\r\n\r\n  //Dependiendo si se selecciona o no el servicio, se agrega o quita del arreglo de servicios seleccionados\r\n  const handleClick = () => {\r\n    agregarSeleccionado(!seleccion)\r\n    if(seleccion===false){\r\n      setSeleccion(true);\r\n      setHecho_noHecho(<div><DoneIcon/></div>);\r\n    }else{\r\n      setSeleccion(false);\r\n      setHecho_noHecho(<div><ClearIcon/></div>);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.mostrarFlex}>\r\n      <Chip clickable color=\"primary\" label={servicio.nombre} icon={hecho_noHecho} onClick={handleClick}/>\r\n    </div>\r\n  );\r\n}","import React,{useState, useContext, useEffect} from 'react';\r\nimport {useHistory } from 'react-router-dom'\r\nimport axios from 'axios';\r\n//Material-UI\r\nimport {Hidden, Typography, TextField, FormControl, Button, Paper, Grid, Checkbox, FormControlLabel} from '@material-ui/core/';\r\nimport BarraDeCarga from '@material-ui/core/LinearProgress'\r\n//Componentes\r\nimport SubirImagenes from '../SubirImagen.js';\r\nimport Estilos from '../Estilos.js';\r\nimport SeleccionarServicio from '../SeleccionarServicio.js';\r\nimport AlertaMensaje from '../AlertaMensaje.js';\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Componente utilizado para modificar el perfil de proveedor\r\nexport default function ModificarPerfilProveedor() {\r\n    //Variables de la página\r\n    const classes = Estilos();\r\n    let history = useHistory();\r\n    const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n    const [cargando, setcargando] = useState(false)\r\n    const [controlGuardar, setcontrolGuardar] = useState(false)\r\n    const [categorias, setcategorias] = useState([])\r\n    const [serviciosSeleccionados, setserviciosSeleccionados] = useState([])\r\n    const [mensaje, setmensaje] = useState(false)\r\n    const [abrir, setabrir] = useState(false)\r\n    const [imagenes, setimagenes] = useState([])\r\n    const [imagenesBorradas, setimagenesBorradas] = useState([]);\r\n    const [imagenesSubidas, setimagenesSubidas] = useState([]);\r\n    const [datos, setdatos] = useState({\r\n        descripcion: \"\",\r\n        estado: false,\r\n        mostrar_telefono: false,\r\n        pasarImagenes: [] \r\n    });\r\n\r\n    const funcionSetImagen = (file, cantidad, tipo, subidas) =>{\r\n        setimagenesSubidas(subidas)\r\n        //Si es 0, entonces se agrega la imagen a su respectiva variable, si es 1 entonces se desea eliminar\r\n        if(tipo===0){\r\n            setimagenes([...imagenes, file])\r\n        }else{\r\n            setimagenesBorradas(img => [...imagenesBorradas, file])\r\n            let aux = imagenes.filter(f => f.file !== file)\r\n            setimagenes(aux)\r\n        }\r\n    }\r\n    //Se ejecuta para traer los datos que el usuario ya tiene, si es que los tiene\r\n    useEffect(()=>{\r\n        if(state.jwt!==\"\" || state.publico===true){\r\n            //Asignamos el estado a las variables de los componentes\r\n            let pasar = state.datosSesion.imagenes_proveedor.map((item)=>(item.id))\r\n            setdatos({\r\n                descripcion: state.datosSesion.descripcion,\r\n                estado: state.datosSesion.estado,\r\n                mostrar_telefono: state.datosSesion.mostrar_telefono,\r\n                pasarImagenes: pasar\r\n            })\r\n\r\n            //Buscamos las categorias para cargarlas en los checkboxes\r\n            axios.get(\r\n                state.servidor+\"/api/categorias\"\r\n            )\r\n            .then(response => {\r\n                response.data.map((item)=>{\r\n                    item[\"seleccionado\"] = false\r\n\r\n                    item.servicios.map((itemserv) =>{\r\n                        itemserv[\"seleccionado\"] = false\r\n                    })\r\n\r\n                    if(state.datosSesion.servicios.length!==0){\r\n                        response.data.map((categoria) =>{\r\n                            categoria.servicios.map((servicio) =>{\r\n\r\n                                state.datosSesion.servicios.map((servicioSesion)=>{\r\n                                    if(servicioSesion.categoria === categoria.id){\r\n                                        categoria.seleccionado = true\r\n                                    }\r\n\r\n                                    if(servicioSesion.id===servicio.id){\r\n                                        servicio.seleccionado = true\r\n                                    }\r\n                                })\r\n\r\n                            })\r\n                        })\r\n                    }                \r\n                })\r\n                setcategorias(response.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Un error ha ocurrido al cargar las categorías.\")\r\n                console.log(error.response)\r\n            }) \r\n        }\r\n    },[state.jwt, state.publico])\r\n\r\n    //Función que registra los cambios en los checkboxes\r\n    const cambiarCheckbox = (e) =>{  \r\n        if(!controlGuardar)\r\n            setcontrolGuardar(true)\r\n        \r\n        let valor = e.target.checked;\r\n        let campo = e.target.name;\r\n        setdatos({\r\n            ...datos,\r\n            [campo]: valor\r\n        })\r\n    }\r\n\r\n    //Ejecutado al guardar los datos\r\n    const guardarDatos = () => {\r\n        let aux = [];\r\n        categorias.map((categoria)=>{\r\n            if(categoria.seleccionado){\r\n                categoria.servicios.map((servicio)=>{\r\n                    if(servicio.seleccionado){\r\n                        aux.push(servicio.id)\r\n                        if(!controlGuardar){\r\n                            setcontrolGuardar(true)\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        if(aux.length!==0){\r\n            setmensaje(false)\r\n        }else{\r\n            setmensaje(true)\r\n        }\r\n        setserviciosSeleccionados(aux)\r\n    }\r\n    \r\n    function subirImagenes(_id_){\r\n        let archivosNuevos = []\r\n        //archivosNuevos es el arreglo que contiene los archivos que han sido agregados y no los que ya han sido subidos al servidor\r\n        imagenes.map((imagen) => {\r\n            let iguales = imagenesSubidas.some(img => img === imagen)\r\n            if(!iguales){\r\n                archivosNuevos.push(imagen)\r\n            }\r\n        })\r\n\r\n        //archivosBorrados es el arreglo que contiene los archivos que han sido subidos al servidor pero que han sido eliminados en el frontend\r\n        let archivosBorrados = []\r\n        imagenesBorradas.map((imagen) => {\r\n            let iguales = imagenesSubidas.some(img => img === imagen)\r\n            if(iguales){\r\n                archivosBorrados.push(imagen)\r\n            }\r\n        })\r\n\r\n        //Si existen elementos dentro del arreglo imagenesBorradas, significa que se quieren borrar imágenes de la publicación\r\n        for(let indx = 0; indx < imagenesBorradas.length; indx++){\r\n            let id = Number(imagenesBorradas[indx].name)\r\n            \r\n            let auth = 'Bearer '+state.jwt;\r\n            axios.delete(state.servidor+\"/upload/files/\"+id,\r\n            {\r\n                headers: {\r\n                'Authorization': auth\r\n            },})\r\n            .then(response => {         \r\n            }).catch(error => {\r\n                console.log(\"Error al borrar las imagenes\")\r\n                console.log(error.response)\r\n            })\r\n        }\r\n        \r\n        //Subiendo las imagenes seleccionadas\r\n        const formData = new FormData()\r\n        \r\n        //Se cargan en el fromData las nuevas imágenes cargadas a la publicación, si es que las hay, y los datos modificados\r\n        for(let i = 0; i<archivosNuevos.length; i++){\r\n            formData.append('files', archivosNuevos[i])\r\n        }\r\n        \r\n        if(archivosNuevos.length!==0){\r\n            formData.append('ref', 'user')\r\n            formData.append('refId', _id_)\r\n            formData.append('field', 'imagenes_proveedor')\r\n            formData.append('source', 'users-permissions')\r\n\r\n            let auth = 'Bearer '+state.jwt;\r\n\r\n            axios.post(\r\n                state.servidor+\"/upload\",\r\n                formData,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                        'Authorization': auth\r\n                    },\r\n                })\r\n            .then(response => {\r\n                let usr = state.datosSesion\r\n                usr.imagenes_proveedor = response.data\r\n\r\n                dispatch({type:\"setDatos\", value: usr})\r\n                dispatch({type:\"setJwt\", value: state.jwt})\r\n\r\n                localStorage.setItem('datosLocal', JSON.stringify({\r\n                    jwt: state.jwt,\r\n                    datosSesion: usr\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error al cargar las imágenes.\")\r\n                console.log(\"Error: \", error.response)\r\n            })\r\n        }\r\n    }\r\n\r\n    //Se ejecuta al enviar los datos y tener algún servicio seleccionado\r\n    useEffect(()=>{\r\n        if(serviciosSeleccionados.length!==0){\r\n            let auth = 'Bearer '+state.jwt;\r\n\r\n            setcargando(true)\r\n            subirImagenes(state.datosSesion.id)\r\n\r\n            //Se modifican los datos del proveedor con los nuevos datos\r\n            axios.put(\r\n                state.servidor+\"/users/\"+state.datosSesion.id\r\n                ,{\r\n                    descripcion: datos.descripcion,\r\n                    estado: datos.estado,\r\n                    mostrar_telefono: datos.mostrar_telefono,\r\n                    servicios : serviciosSeleccionados\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Authorization': auth\r\n                    },\r\n                }\r\n            )\r\n            .then(response => {\r\n                let datos_ayuda = response.data\r\n\r\n                dispatch({type:\"setDatos\", value: response.data})\r\n                localStorage.setItem('datosLocal', JSON.stringify({\r\n                    jwt: state.jwt,\r\n                    datosSesion: datos_ayuda\r\n                }));\r\n                setabrir(true)\r\n                setcargando(false)\r\n                setTimeout(() => {  history.push(state.ruta+\"/\"); }, 3000);\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Ha ocurrido un error al guardar los datos\")\r\n                console.log(error.response)\r\n                setcargando(false)\r\n            })\r\n        }\r\n    },[serviciosSeleccionados])\r\n    //-----------------------------------------------------------------------------------------------------------------------------------------------------\r\n    \r\n    return (\r\n        <div className= {classes.fondo}>\r\n            <Paper elevation={3} className= {classes.pantallaMedia}>\r\n                <FormControl color=\"primary\" fullWidth>\r\n                    <Grid className={classes.filaPublicacion} container direction=\"row\" justify=\"space-around\" alignItems=\"center\" spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h5\" component=\"h1\" align=\"center\">\r\n                                Modificar mis datos de proveedor\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>    \r\n                            <FormControlLabel\r\n                                className={classes.inputAncho}\r\n                                control={<Checkbox checked={datos.estado} name=\"estado\" onChange={cambiarCheckbox}/>}\r\n                                label=\"Pausar mis servicios\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>    \r\n                            <FormControlLabel\r\n                                className={classes.inputAncho}\r\n                                control={<Checkbox name=\"mostrar_telefono\" checked={datos.mostrar_telefono} onChange={cambiarCheckbox}/>}\r\n                                label=\"Mostrar mi número de teléfono\"\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                            className={classes.inputAncho}\r\n                            onChange={(e)=>{\r\n                                setdatos({\r\n                                ...datos,\r\n                                descripcion: e.target.value\r\n                                })\r\n                                if(!controlGuardar)\r\n                                    setcontrolGuardar(true)\r\n                            }}\r\n                            name=\"descripcion\"\r\n                            value={datos.descripcion}\r\n                            id=\"filled-basic\"\r\n                            label=\"Descripción\"\r\n                            multiline\r\n                            variant=\"filled\"/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} className={classes.inputAncho}>\r\n                            <SubirImagenes setcargando={setcargando} cantidad={10} funcionSetImagen={funcionSetImagen} ids={datos.pasarImagenes}/>\r\n                        </Grid>\r\n                        \r\n                        <AlertaMensaje mensaje=\"¡Tus datos se han guardado correctamente!\" abrir={abrir} setabrir={setabrir}/>\r\n\r\n                        <Grid item xs={12} >\r\n                            <Typography variant=\"h6\" component=\"h3\" align=\"left\" className={classes.alinearInputs}>\r\n                                Selecciona los servicios que ofreces\r\n                            </Typography>\r\n                        </Grid>\r\n                        \r\n                        \r\n                        {\r\n                            categorias.map((categoria, i)=>(\r\n                                <Grid key={i} item xs={12}>\r\n                                    <Grid container justify=\"flex-start\">\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={categoria.seleccionado}\r\n                                                    onChange={(e)=>{setcategorias(categorias.map((cat, j)=>{\r\n                                                        if(i===j){\r\n                                                            cat.seleccionado = e.target.checked\r\n                                                        }\r\n                                                        return cat\r\n                                                    }))}}\r\n                                                />}\r\n                                            label={categoria.nombre}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Hidden xlDown={!categoria.seleccionado}>\r\n                                        <Grid container spacing={2} justify=\"space-around\">    \r\n                                            {\r\n                                                categoria.servicios.map((servicio,k) => (\r\n                                                <Grid item xs={6} sm={4} md={3} lg={2} key={k}>\r\n                                                    <SeleccionarServicio\r\n                                                    servicio={servicio} \r\n                                                    agregarSeleccionado={(valor)=>{\r\n                                                        servicio.seleccionado = valor\r\n                                                        //Asignamos los valores \"true\" a aquellos servicios que son seleccionados\r\n                                                        setcategorias(categorias.map((cat, j)=>{\r\n                                                            if(i===j){\r\n                                                                cat.servicios[k] = servicio\r\n                                                            }\r\n                                                            return cat\r\n                                                        }))\r\n                                                    }}/>\r\n                                                </Grid>\r\n                                                ))\r\n                                            }\r\n                                        </Grid>\r\n                                    </Hidden>\r\n                                </Grid>\r\n                            ))\r\n                        }\r\n                        \r\n                        <Hidden xlDown={!mensaje || cargando}>\r\n                            <Grid item xs={12} align=\"center\">\r\n                                <Typography color=\"error\">\r\n                                    Debe seleccionar al menos un servicio.\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Hidden>\r\n\r\n                        <div className={classes.inputAncho} hidden={!cargando}>\r\n                            <BarraDeCarga/>\r\n                        </div>\r\n\r\n                        <Grid item xs={6} align=\"center\">\r\n                            <Button onClick={guardarDatos} disabled={cargando} size=\"large\" variant=\"contained\" color=\"primary\">Guardar</Button>\r\n                        </Grid>\r\n                        <Grid item xs={6} align=\"center\">\r\n                            <Button onClick={()=>{history.push(state.ruta+\"/\")}} size=\"large\" variant=\"contained\" color=\"secondary\">Cancelar</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </FormControl>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, {useEffect, useState, useContext} from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\n//Material-UI\r\nimport {Grid, Container} from '@material-ui/core/';\r\n\r\nimport ProveedorInfo from '../Publicacion/ProveedorInfo.js';\r\nimport PublicacionInfo from '../Publicacion/PublicacionInfo.js';\r\nimport {BotonContratar} from '../ContactarProveedor.js'\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado' \r\n\r\n//Componente que muestra los datos del perfil de un proveedor\r\nexport default function MiPerfil() {\r\n    const { state } = useContext(ObtenerEstadoAplicacion);\r\n    let { id } = useParams();\r\n    const [datosPagina, setdatosPagina] = useState({\r\n        descripcion:\"\",\r\n        titulo:\"\",\r\n        identidad_verificada: false,\r\n        telefono: \"\",\r\n        mostrar_telefono: false,\r\n        servicios: [],\r\n        imagenes: [],\r\n        bloqueado: false,\r\n        imagen_perfil: \"\",\r\n        //Datos de publicación\r\n        precio_estimado: \"perfil\",\r\n        pausado: false,\r\n        tipo: false,\r\n        categoria:\"\",\r\n        servicio:\"\",\r\n        estrella: 0,\r\n    })\r\n    \r\n    useEffect(()=>{\r\n        if (state.jwt!==\"\" || state.publico===true){\r\n            let auth = state.jwt!==\"\"?'Bearer '+state.jwt:\"\";\r\n            //Traemos los datos del usuario en cuestión\r\n            axios.get(\r\n            state.servidor+\"/users/\"+id,{\r\n                headers: {\r\n                'Authorization': auth\r\n                },\r\n            })\r\n            .then(response => {\r\n                //Seteamos los datos que nos interesan\r\n                setdatosPagina({\r\n                    id: response.data.id,\r\n                    descripcion: response.data.descripcion,\r\n                    titulo: `${response.data.nombre} ${response.data.apellido}`,\r\n                    identidad_verificada: response.data.identidad_verificada,\r\n                    telefono: response.data.telefono,\r\n                    mostrar_telefono: response.data.mostrar_telefono,\r\n                    servicios: response.data.servicios,\r\n                    imagenes: response.data.imagenes_proveedor,\r\n                    bloqueado: response.data.bloqueado,\r\n                    pausado:  response.data.estado,\r\n                    precio_estimado: \"perfil\",\r\n                    imagen_perfil: response.data.imagen_perfil===null?null:response.data.imagen_perfil.url\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Un error ha ocurrido al buscar el usuario.\")\r\n                console.log(error.response)\r\n            }) \r\n        }\r\n    },[state.jwt, state.publico])\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\r\n                <Grid item md={8} xs={12} >\r\n                    <PublicacionInfo esDePerfil={true} datosPagina={datosPagina}/>\r\n                </Grid> \r\n                <Grid item md={4} xs={12} >\r\n                    <ProveedorInfo esDePerfil={true} datosPerfil={datosPagina}/>\r\n                </Grid>\r\n                {\r\n                    //Si no es el proveedor que se está viendo, tiene servicios para ofrecer y el proveedor no está bloqueado ni pausado, ofrecemos la posibilidad de contactarse\r\n                    datosPagina.id!==state.datosSesion.id &&\r\n                    datosPagina.servicios.length!==0 &&\r\n                    !datosPagina.pausado &&\r\n                    !datosPagina.bloqueado &&\r\n                    <BotonContratar\r\n                    fijo={true}\r\n                    esDePerfil={true}\r\n                    datos={{idS: null, idP: datosPagina.id, nombre: datosPagina.titulo, servicios: datosPagina.servicios}}/>\r\n                }\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import React,{useState, useEffect, useContext} from 'react';\r\nimport axios from 'axios'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\n//Material-UI\r\nimport {Typography, TextField, FormControl, Button, Paper, Grid, Select, MenuItem, InputLabel} from '@material-ui/core';\r\nimport Cargando from '@material-ui/core/LinearProgress';\r\n\r\nimport AlertaMensaje from '../AlertaMensaje.js';\r\nimport SubirImagenes from '../SubirImagen.js';\r\nimport Estilos from '../Estilos.js';\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Componente utilizado para crear o modificar publicaciones o solicitudes de servicios\r\nexport default function CrearPublicacion({tipoPublicacion, modificar}) {\r\n    const classes = Estilos();\r\n    const { state } = useContext(ObtenerEstadoAplicacion);\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    const [precioPresupuesto, setPrecioPresupuesto] = useState(\"\");\r\n    const [titulo, setTitulo] = useState(\"\");\r\n    const [categorias, setcategorias] = useState([]);\r\n    const [servicios, setservicios] = useState([]);\r\n    const [cargando, setcargando] = useState(false);\r\n    const [imagenes, setimagenes] = useState([]);\r\n    const [abrir, setabrir] = useState(false);\r\n    const [mensaje, setmensaje] = useState(\"\");\r\n\r\n    const [imagenesSubidas, setimagenesSubidas] = useState([]);\r\n    const [imagenesBorradas, setimagenesBorradas] = useState([]);\r\n\r\n    //Datos de la pagina\r\n    const [datosPagina, setdatosPagina] = useState({\r\n        titulo:\"\",\r\n        precio_estimado: \"\",\r\n        Categoria_id: {nombre: \"\"},\r\n        Servicio_id: {nombre:\"\"},\r\n        descripcion:\"\",\r\n        imagenes:[],\r\n        pausado: false,\r\n        bloqueado: false\r\n    });\r\n\r\n    useEffect(()=>{\r\n        //Dependiendo de si se quiere crear una publicación o solicitar un servicio, se muestra la pantalla correspodiente\r\n        if(tipoPublicacion){\r\n            setTitulo(modificar?\"Modificar publicación\":\"Crear publicación\");\r\n            setPrecioPresupuesto(\"Precio estimado\");\r\n        }else{\r\n            setTitulo(modificar?\"Modificar solicitud de servicio\":\"Solicitar servicio\");\r\n            setPrecioPresupuesto(\"Presupuesto\");\r\n        }\r\n        if (state.jwt!==\"\" || state.publico===true){\r\n            setcargando(true)\r\n            //Traemos las categorías que tiene el sistema\r\n            axios.get(state.servidor+\"/api/categorias\")\r\n            .then(response => {\r\n                setcategorias(response.data)\r\n                setcargando(false)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Un error ha ocurrido al cargar las categorías.\")\r\n                console.log(error.response)\r\n            })\r\n        }\r\n    },[state.jwt, state.publico, tipoPublicacion, modificar])\r\n\r\n    useEffect(()=>{\r\n        //Si se quiere modificar una publicación...\r\n        if(modificar && categorias.length!==0){\r\n            setcargando(true)\r\n            //Traemos la publicación que se quiere modificar\r\n            axios.get(state.servidor+\"/api/solicitud/\"+id)\r\n            .then(response => {    \r\n                //Solamente se permite modificar si se es el dueño de la publicación         \r\n                if (state.datosSesion.id===response.data.Usuario_id.id){\r\n                    //Seteamos los datos de la publicación\r\n                    response.data[\"imagenes\"] = response.data.imagenes.map((imagen)=>(imagen.id))\r\n                    setdatosPagina(response.data)\r\n                    //Si es una publicación, entonces también seteamos los servicios\r\n                    if (tipoPublicacion)\r\n                        categorias.map(cat =>{\r\n                            if(cat.id===response.data.Servicio_id.categoria){\r\n                                setservicios(cat.servicios)\r\n                            }\r\n                        })\r\n                }else{\r\n                    history.push(state.ruta+\"/\")\r\n                }\r\n                setcargando(false)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Un error ha ocurrido al cargar la solicitud.\")\r\n                console.log(error.response)\r\n            })\r\n        }\r\n    },[categorias])\r\n    \r\n    //Funcion para captar los cambios en los inputs \r\n    function modificarInput(e){\r\n        setdatosPagina({\r\n            ...datosPagina,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    const funcionSetImagen = (file, cantidad, tipo, subidas) =>{\r\n        setimagenesSubidas(subidas)\r\n        //Si es 0, entonces se agrega la imagen a su respectiva variable, si es 1 entonces se desea eliminar\r\n        if(tipo===0){\r\n            setimagenes([...imagenes, file])\r\n        }else{\r\n            setimagenesBorradas(img => [...imagenesBorradas, file])\r\n            let aux = imagenes.filter(f => f !== file)\r\n            setimagenes(aux)\r\n        }\r\n        setimagenesSubidas(subidas)\r\n    }\r\n\r\n    //Se ejecuta al presionar el botón de guardar\r\n    const guardarDatos = (e) => {\r\n        e.preventDefault()\r\n        setcargando(true)\r\n        const formData = new FormData()\r\n\r\n        let archivosNuevos = []\r\n        \r\n        //archivosNuevos es el arreglo que contiene los archivos que han sido agregados y no los que ya han sido subidos al servidor\r\n        imagenes.map((imagen) => {\r\n            let iguales = imagenesSubidas.some(img => img === imagen)\r\n            if(!iguales){\r\n                archivosNuevos.push(imagen)\r\n            }\r\n        })\r\n\r\n        //archivosBorrados es el arreglo que contiene los archivos que han sido subidos al servidor pero que han sido eliminados en el frontend\r\n        let archivosBorrados = []\r\n        imagenesBorradas.map((imagen) => {\r\n            let iguales = imagenesSubidas.some(img => img === imagen)\r\n\r\n            if(iguales){\r\n                archivosBorrados.push(imagen)\r\n            }\r\n        })\r\n        \r\n        //Si existen elementos dentro del arreglo imagenesBorradas, significa que se quieren borrar imágenes de la publicación\r\n        for(let indx = 0; indx < imagenesBorradas.length; indx++){\r\n            let id = Number(imagenesBorradas[indx].name)\r\n            \r\n            let auth = 'Bearer '+state.jwt;\r\n            axios.delete(state.servidor+\"/upload/files/\"+id,\r\n            {\r\n                headers: {\r\n                'Authorization': auth\r\n            },})\r\n            .then(response => {         \r\n            }).catch(error => {\r\n                console.log(\"Error al borrar las imagenes\")\r\n                console.log(error.response)\r\n            })\r\n        }\r\n\r\n        //Se cargan en el fromData las nuevas imágenes cargadas a la publicación, si es que las hay, y los datos modificados\r\n        for(let i = 0; i<archivosNuevos.length; i++){\r\n            formData.append('files.imagenes', archivosNuevos[i])\r\n        }\r\n        formData.append('data', JSON.stringify({\r\n            titulo: datosPagina.titulo,\r\n            precio_estimado: datosPagina.precio_estimado===\"\"?0:datosPagina.precio_estimado,\r\n            descripcion: datosPagina.descripcion,\r\n            Categoria_id: datosPagina.Categoria_id.id,\r\n            Servicio_id: tipoPublicacion?datosPagina.Servicio_id.id:null,\r\n            Usuario_id: state.datosSesion.id,\r\n            pausado: false,\r\n            tipo: tipoPublicacion\r\n        }))\r\n\r\n        let auth = 'Bearer '+state.jwt;\r\n        //Si se está creando una publicación, se procede a la creación del la entrada en la tabla correspondiente.\r\n        if (!modificar){\r\n            axios.post(\r\n                state.servidor+\"/api/solicitud\",\r\n                formData,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                        'Authorization': auth\r\n                    },\r\n            })\r\n            .then(response => {\r\n                let estaServicio = state.datosSesion.servicios.some(servicio=>(servicio.id===datosPagina.Servicio_id.id))\r\n                //Procedemos a asociar el nuevo servicio (si es que es nuevo) al arreglo de servicios del proveedor\r\n                if (tipoPublicacion && !estaServicio){\r\n                    let servicios_id = state.datosSesion.servicios.map(servicio_=>(servicio_.id))\r\n                    servicios_id.push(datosPagina.Servicio_id.id)\r\n                    axios.put(\r\n                        state.servidor+\"/users/\"+state.datosSesion.id,{\r\n                            servicios: servicios_id\r\n                        },\r\n                        {headers: {'Authorization': auth},\r\n                    })\r\n                    .then(response => {\r\n                        setcargando(false)\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error.response)\r\n                        console.log(\"Ha ocurrido un error al guardar los datos\")\r\n                        setcargando(false)\r\n                    })\r\n                }\r\n                setcargando(false)\r\n                setmensaje(\"¡Publicación creada!\")\r\n                setabrir(true)\r\n                setTimeout(() => {  history.push(state.ruta+\"/\"); }, 3000);\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error, no se ha podido crear la solicitud.\", error.response)\r\n            })\r\n        //Si se desea modificar una publicación, se envía la petición con los nuevos datos\r\n        }else{\r\n            axios.put(\r\n                state.servidor+\"/api/solicitud/\"+id,\r\n                formData,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                        'Authorization': auth\r\n                },\r\n            })\r\n            .then(response => {\r\n                //Si la publicación estaba bloqueada por un administrador, entonces se ejecuta el método\r\n                if (response.data.bloqueado)\r\n                    modificarBloqueadoReporte()\r\n                setcargando(false)\r\n                setmensaje(\"¡Publicación modificada!\")\r\n                setabrir(true)\r\n                setTimeout(() => {  history.push(state.ruta+\"/\"); }, 3000);\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error, no se ha podido modificar la solicitud.\", error.response)\r\n            })\r\n        }\r\n    }\r\n\r\n    //Función utilizada para modificar el reporte asociado al bloqueo, de tal manera de que vuelva a aparecer en la lista de reportes a moderar\r\n    function modificarBloqueadoReporte(){\r\n        let auth = 'Bearer '+state.jwt;\r\n        //Traemos el reporte asociado a la publicación\r\n        axios.get(\r\n            state.servidor+\"/api/reportes?Solicitud_id=\"+datosPagina.id,\r\n            {\r\n                headers: {\r\n                    'Authorization': auth\r\n            },\r\n        })\r\n        .then(response => {\r\n            let reportes_ = response.data.filter((reporte)=>reporte.estado === 1)\r\n            //Modificamos el reporte y le asignamos el esto \"en espera\"\r\n            reportes_.map(report => {\r\n                axios.put(\r\n                    state.servidor+\"/api/reportes/\"+report.id,{\r\n                        estado: -1\r\n                    },{\r\n                        headers: {\r\n                            'Authorization': auth\r\n                    },\r\n                })\r\n                .then(response => {               \r\n                })\r\n                .catch(error => {\r\n                    console.log(\"Error: \", error.response)\r\n                })\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Error: \", error.response)\r\n        })\r\n    }\r\n\r\n    //Al seleccionar una categoría, se procede a cargarlo en el campo correspondiente y setear los servicios que se deben mostrar\r\n    function seleccionarCategoria(e){\r\n        let categoriaSeleccionada = categorias.filter((cat) => cat.nombre === e.target.value)\r\n        setservicios(categoriaSeleccionada[0].servicios)\r\n        setdatosPagina({\r\n            ...datosPagina,\r\n            Categoria_id: categoriaSeleccionada[0],\r\n            Servicio_id: {nombre:\"\"}\r\n        })\r\n    }\r\n\r\n    //Seteamos el servicio seleccionado\r\n    function seleccionarServicio(e){\r\n        let servicioSeleccionado\r\n        categorias.map((cat) =>{\r\n            if(cat.nombre===datosPagina.Categoria_id.nombre){\r\n                servicioSeleccionado = cat.servicios.filter((serv) => serv.nombre === e.target.value)\r\n            }\r\n        })\r\n        setdatosPagina({\r\n            ...datosPagina,\r\n            Servicio_id: servicioSeleccionado[0]   \r\n        })\r\n    }\r\n\r\n    //Si se presiona en cancelar, se vuelve al inicio\r\n    function cancelar(){\r\n        history.push(state.ruta+\"/\")    \r\n    }\r\n\r\n    return ( \r\n    <div className={classes.fondo}>\r\n        <Paper elevation={3} style={{padding: \"10px\"}} className=\"Fondo\">\r\n            <form onSubmit={guardarDatos}>\r\n                <FormControl className={classes.padding2} color=\"primary\" fullWidth>\r\n                    <Grid className={classes.pantallaMedia} container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h5\" component=\"h1\" align=\"center\">\r\n                                {titulo}\r\n                            </Typography>\r\n                        </Grid>\r\n                        \r\n                        <Grid item sm={8} xs={12}>\r\n                            <TextField\r\n                            onChange={modificarInput}\r\n                            value={datosPagina.titulo}\r\n                            name=\"titulo\"\r\n                            className={classes.inputAncho}\r\n                            id=\"filled-basic\"\r\n                            label=\"Título de la publicación\"\r\n                            variant=\"filled\"\r\n                            maxLength={50}\r\n                            required/>\r\n                        </Grid>\r\n\r\n                        <Grid item sm={4} xs={12}>\r\n                            <TextField\r\n                            onChange={modificarInput}\r\n                            value={datosPagina.precio_estimado}\r\n                            name=\"precio_estimado\"\r\n                            type=\"number\"\r\n                            className={classes.inputAncho}\r\n                            id=\"formatted-numberformat-input\"\r\n                            label={precioPresupuesto}\r\n                            variant=\"filled\"/>\r\n                        </Grid>\r\n\r\n                        <Grid item sm={6} xs={12}>\r\n                            <FormControl className={classes.inputAncho}>\r\n                                <InputLabel id=\"Categoria_id\" variant=\"filled\">Categoría</InputLabel>\r\n                                <Select\r\n                                    value={datosPagina.Categoria_id.nombre}\r\n                                    name=\"Categoria_id\"\r\n                                    onChange={seleccionarCategoria}\r\n                                    id=\"Categoria_id\"\r\n                                    labelId=\"Categoria_id\"\r\n                                    variant=\"filled\"\r\n                                    label=\"Categoría\"\r\n                                    required>\r\n                                    {\r\n                                        categorias.map((categoria, i)=>(\r\n                                            <MenuItem key={i} value={categoria.nombre}>{categoria.nombre}</MenuItem>\r\n                                        ))\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        {\r\n                            tipoPublicacion &&\r\n                            (<Grid item sm={6} xs={12}>\r\n                                <FormControl className={classes.inputAncho}>\r\n                                    <InputLabel id=\"Servicio_id\" variant=\"filled\">Servicio</InputLabel>\r\n                                    <Select \r\n                                        value={datosPagina.Servicio_id.nombre}\r\n                                        name=\"Servicio_id\"\r\n                                        id=\"Servicio_id\"\r\n                                        labelId=\"Servicio_id\"\r\n                                        onChange={seleccionarServicio} \r\n                                        label=\"Servicio\"\r\n                                        variant=\"filled\"\r\n                                        required>\r\n                                        {\r\n                                            servicios.map((servicio, i)=>(\r\n                                                <MenuItem key={i} value={servicio.nombre}>{servicio.nombre}</MenuItem>\r\n                                            ))\r\n                                        }   \r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>)\r\n                        }\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                            onChange={modificarInput}\r\n                            value={datosPagina.descripcion}\r\n                            name=\"descripcion\"\r\n                            className={classes.inputAncho}\r\n                            id=\"filled-basic\"\r\n                            label=\"Descripción\"\r\n                            maxLength={400}\r\n                            multiline\r\n                            variant=\"filled\"/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} className={classes.inputAncho}>\r\n                            <SubirImagenes cantidad={10} funcionSetImagen={funcionSetImagen} setcargando={setcargando} ids={datosPagina.imagenes}/>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12} className={classes.inputAncho}>\r\n                            {cargando && <Cargando/>}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6} align=\"center\">\r\n                            <Button className={classes.botones} disabled={cargando} type=\"submit\" size=\"large\" variant=\"contained\" color=\"primary\">Guardar</Button>\r\n                        </Grid>\r\n                        <Grid item xs={6} align=\"center\">\r\n                            <Button className={classes.botones} onClick={cancelar} size=\"large\" variant=\"contained\" color=\"secondary\">Cancelar</Button>\r\n                        </Grid>\r\n                        <AlertaMensaje mensaje={mensaje} abrir={abrir} setabrir={setabrir}/>\r\n                    </Grid>\r\n                </FormControl>\r\n            </form>\r\n        </Paper>\r\n    </div>\r\n  );\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport axios from 'axios'\r\n//Material-UI\r\nimport {LinearProgress, Collapse, Hidden, ListItemText, ListItem, List, Paper, Grid, Typography, Button, TextField} from '@material-ui/core/';\r\nimport {Clear as Rechazar, Check as Aceptar, ExpandLess, ExpandMore} from '@material-ui/icons/';\r\nimport Alerta from '@material-ui/lab/Alert';\r\n\r\n//Componentes\r\nimport Imagenes from 'react-lightbox-component';\r\nimport 'react-lightbox-component/build/css/index.css';\r\n\r\n//Estilos\r\nimport Estilos from '../Estilos.js'\r\n//Variables globales de la aplicación\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Este componente lista todas las solicitudes de verificación de identidad (estas las generan los proveedores\r\n//cuando quieren validar su identidad en el sistema), el administrador va a ver el N° de DNI y las imagenes\r\n//de éste y va a determinar si el usuario es quien dice ser \r\nexport default function VerificarIdentidad() {\r\n    const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n    const classes = Estilos();\r\n    //Variables del componente\r\n    const [usuariosVerificar, setusuariosVerificar] = useState([])\r\n    const [cargando, setcargando] = useState(false);\r\n\r\n    //Buscamos todos los usuarios que estan deseando verificar su identidad\r\n    useEffect(()=>{\r\n        setcargando(true)\r\n        let auth = 'Bearer '+state.jwt\r\n        if (state.jwt!==\"\"){            \r\n            axios.get(state.servidor+\"/users?espera_verificacion=true\",{\r\n                headers: {'Authorization': auth},\r\n            })\r\n            .then(response => {\r\n                setusuariosVerificar(response.data)\r\n                setcargando(false)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Un error ha ocurrido al buscar los usuarios a verificar.\")\r\n                console.log(error.response)\r\n            }) \r\n        }\r\n    },[state.jwt])\r\n\r\n    //Si el administrador realiza una acción ante una solicitud, entonces esta debe ser sacada de la lista de \r\n    //solicitudes, el siguiente método hace eso.\r\n    function actualizarUsuario(usuario_id){\r\n        setusuariosVerificar(usuariosVerificar.filter(user => user.id!==usuario_id))\r\n    }\r\n    return (\r\n    <div className={classes.fondo}>\r\n        <Paper elevation={5}  style={{margin:\"10px 0px\", padding:\"20px\", width:\"90%\"}} className=\"Fondo\">\r\n            <Grid container justify=\"center\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h4\" component=\"h1\" align=\"center\">\r\n                        Verificar identidades\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {\r\n                        cargando && <LinearProgress/>\r\n                    }\r\n                    <br/>\r\n                    {\r\n                        !cargando && (usuariosVerificar.length===0 && (<Alerta variant=\"outlined\" severity=\"info\">\r\n                            No hay usuarios que deseen verificar su identidad.\r\n                        </Alerta>))\r\n                    }\r\n                </Grid>\r\n                {\r\n                    usuariosVerificar.map((usuario, i) =>(\r\n                        <Grid item xs={12} key={i}>\r\n                            <Solicitud usuario={usuario} actualizarUsuario={actualizarUsuario}/>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\n//Este componente hace referencia a una solicitud, como las solicitudes pueden ser muchas, se separa en un componente aparte\r\nfunction Solicitud({usuario, actualizarUsuario}) {\r\n    const classes = Estilos()\r\n    return (\r\n        <Paper className={classes.filaPublicacion} variant=\"outlined\" square>\r\n            <Grid container direction=\"row\" alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Button className={classes.button}>\r\n                        <Typography variant=\"h5\" component=\"h5\" align=\"left\">\r\n                            {`${usuario.nombre} ${usuario.apellido}`}\r\n                        </Typography>\r\n                    </Button>\r\n                    <Button disabled>\r\n                        <Typography variant=\"h5\" component=\"h2\" align=\"left\" >\r\n                            DNI: {usuario.dni}\r\n                        </Typography>\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <DesplegarInformacion usuario={usuario} actualizarUsuario={actualizarUsuario}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n//Cada fila de solicitud, muestra una información reducida para no tener que colapsar la vista con información\r\n//para ver toda la información es necesario desplegarla, el siguiente componente permite eso.\r\nfunction DesplegarInformacion({usuario, actualizarUsuario}) {\r\n    const classes = Estilos();\r\n    const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n    //Variables del componente\r\n    const [open, setOpen] = useState(false);\r\n    const [imagenes, setimagenes] = useState([]);\r\n    const [cargando, setcargando] = useState(false);\r\n    const [descripcion, setdescripcion] = useState(\"\");\r\n    const [mensaje, setmensaje] = useState(\"\");\r\n    \r\n    //Función que se ejecuta cada vez que se acciona el desplegar información (mostrando u ocultando la información)\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n    \r\n    //Cuando el administrador decide realizar una acción ante la solicitud, el siguiente método es accionado,\r\n    //el cual genera una notificación al usuario que deseaba verificarse, esta notificación le informa si fue \r\n    //aceptado o rechazado, tambien se actualiza su estado para que, en el caso de que fuera rechazado pueda\r\n    //volver a enviar la solicitud.\r\n    function enviarDatos(aceptado){\r\n        setcargando(true)\r\n        let auth = 'Bearer '+state.jwt;\r\n        //Generamos una notificación al usuario, indicando si se lo ha verificado o no.\r\n        axios.post(\r\n            state.servidor+\"/api/notificaciones/\",{\r\n                tipo: 1,\r\n                emisor: state.datosSesion.id,\r\n                receptor: usuario.id,\r\n                solicitud: null,\r\n                datos_notificacion: aceptado?\"\":descripcion,\r\n                leido: false\r\n            },\r\n            {headers: {'Authorization': auth},})\r\n        .then(response => {\r\n\r\n            //Actualizamos los datos al usuario que solicitó la verificación de su identidad.\r\n            axios.put(\r\n                state.servidor+\"/users/\"+usuario.id,{\r\n                    espera_verificacion: false,\r\n                    identidad_verificada: aceptado\r\n                },{headers: {'Authorization': auth},})\r\n            .then(response => {\r\n                actualizarUsuario(response.data.id)\r\n                setcargando(false)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error, no se ha podido actualizar al usuario.\", error.response)\r\n                console.log(\"Error, no se ha podido actualizar al usuario.\")\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Error, no se ha podido crear la notificacion.\", error.response)\r\n            console.log(\"Error, no se ha podido crear la notificacion.\")\r\n        })\r\n        \r\n    }\r\n\r\n    //Este metodo sirve para setear un objeto de imagenes para que el componente para mostrar imagenes pueda mostrarlas\r\n    //correctamente\r\n    useEffect(()=>{\r\n        if(usuario.imagenes_dni){\r\n            let img = usuario.imagenes_dni.map((imagen)=>(\r\n                {\r\n                    src: state.servidor+imagen.url,\r\n                    title: imagen.name,\r\n                    description: 'Imagenes de D.N.I.'\r\n                }\r\n            ))\r\n            setimagenes(img)\r\n        }\r\n    },[usuario])\r\n\r\n    return (\r\n        <div>\r\n            <ListItem button onClick={handleClick}>\r\n                <ListItemText primary=\"Desplegar información\"/>\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid item xs={4} sm={12}>\r\n                            <div align=\"center\">\r\n                                <Imagenes images={imagenes}\r\n                                    thumbnailWidth='100px'\r\n                                    thumbnailHeight='100px'\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                name=\"descripcion\"\r\n                                label=\"Agregar mensaje\"\r\n                                multiline variant=\"outlined\"\r\n                                size=\"medium\"\r\n                                fullWidth\r\n                                className={classes.inputAncho}\r\n                                onChange={(e)=>{setdescripcion(e.target.value)}}\r\n                            >\r\n                            </TextField> \r\n                        </Grid>\r\n\r\n                        <Hidden xlDown={mensaje===\"\" || descripcion!==\"\"}>\r\n                            <Grid item xs={12}>\r\n                                <Typography color=\"error\">\r\n                                    {mensaje}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Hidden>\r\n                        {\r\n                            cargando && <LinearProgress/>\r\n                        }\r\n                        <div align=\"center\">\r\n                            <Button\r\n                            disabled={cargando}\r\n                            onClick={()=>{enviarDatos(true)}}\r\n                            color=\"secondary\"\r\n                            startIcon={<Aceptar/>}>\r\n                                Validar Identidad\r\n                            </Button>\r\n                            <Button\r\n                            disabled={cargando}\r\n                            onClick={()=>{descripcion===\"\"?setmensaje(\"Debe escribir un mensaje para rechazar la solicitud.\"):enviarDatos(false)}}\r\n                            color=\"error\"\r\n                            startIcon={<Rechazar/>}>\r\n                                Rechazar Solicitud\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                </List>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}","import React, {useEffect,useState, useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\n//Material-UI\r\nimport {LinearProgress, Paper, List, ListItem, Collapse, ListItemText, Grid, Typography, Button, Tooltip, TextField, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel} from '@material-ui/core';\r\nimport {ExpandLess, ExpandMore}  from '@material-ui/icons';\r\nimport Ojo from '@material-ui/icons/Visibility';\r\nimport Flechita from '@material-ui/icons/ArrowForwardIos';\r\nimport Aceptar from '@material-ui/icons/Check';\r\nimport Rechazar from '@material-ui/icons/Clear';\r\nimport Alerta from '@material-ui/lab/Alert';\r\n\r\n//Variables globales de la aplicación\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\nimport Estilos from '../Estilos.js';\r\n\r\n//Este es un subcomponente que se utiliza en PestanaReporte.js, se utiliza para administrar los reportes de publicaciones\r\n//y de perfiles. Solo un administrador tiene acceso a este componente.\r\n//Aquí se visualizaran 3 secciones de reportes: reportes nuevos, son reportes que pueden ser administrados (aceptados\r\n//o rechazados); reportes en espera, estos reportes ya han sido administrados, y se encuentran en espera de que el\r\n//usuario modifique la publicación o perfil; historial de reportes, estos reportes ya han sido conluidos, aquí se\r\n//muestra información de la acción que han tomado los administradores\r\nexport default function GestionarReportes({estadoReporte, reportes, modificarReporte, cargando}) {\r\n    const classes = Estilos();\r\n    const [titulo, setTitulo] = useState(\"\");\r\n    \r\n    useEffect(()=>{\r\n        //Dependiendo de si accedemos a los reclamos en espera, al historial de reclamos o a los reclamos nuevos, se muestra el título correspodiente\r\n        if(estadoReporte===0)\r\n            setTitulo(\"Reportes pendientes de moderación\");\r\n        else if(estadoReporte===1)\r\n            setTitulo(\"Reportes en espera\");\r\n        else\r\n            setTitulo(\"Historial de reportes\");\r\n    },[])\r\n  \r\n  return (\r\n    <div className={classes.fondo} className=\"Fondo\">\r\n      <Paper elevation={5}>\r\n        <Grid className={classes.filaPublicacion}  container justify=\"center\">\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\" component=\"h1\" align=\"center\">\r\n                    {titulo}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <br/>\r\n                {\r\n                    !cargando && reportes.length===0 && (<Alerta variant=\"outlined\" severity=\"info\">\r\n                    No hay reportes para mostrar.\r\n                    </Alerta>)\r\n                }  \r\n                {\r\n                    reportes.map((datos, i) =>\r\n                        <Reporte key={i} datos={datos} modificarReporte={modificarReporte}/>\r\n                    )\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction Reporte({datos, modificarReporte}) {\r\n    const classes = Estilos();\r\n    const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n    let color;\r\n    //Cada reporte tiene un color asignado según el estado en el que se encuentra. \r\n    switch (datos.estado) {\r\n        case -1:\r\n            color = \"#5d9b9b\"\r\n            break;\r\n        case 0:\r\n            color = \"gray\"\r\n            break;\r\n        case 1:\r\n            color = \"yellow\"\r\n            break;\r\n        case 2:\r\n            color = \"#FFDED3\"\r\n            break;\r\n        case 3:\r\n            color = \"#D6FFD3\"\r\n            break;\r\n    }\r\n    return (\r\n        <Paper className={classes.filaPublicacion} className=\"Fondo\" variant=\"outlined\" square>\r\n            <Grid container direction=\"row\" justify=\"center\" style={{padding:\"15px\"}}>\r\n                <Grid item xs={12} lg={9} md={9} sm={12}>\r\n                    <Button disabled>\r\n                        <Typography color=\"secondary\" variant=\"h5\" component=\"h2\" align=\"left\" >\r\n                            {datos.Solicitud_id===null?\"Reporte al usuario \":datos.Solicitud_id.titulo}\r\n                        </Typography>\r\n                    </Button>\r\n\r\n                    {\r\n                        datos.Solicitud_id!==null &&\r\n                        <Link to={state.ruta+\"/publicacion/\"+datos.Solicitud_id.id} className={classes.EstiloLink}>\r\n                            <Tooltip title=\"Vista previa\">\r\n                                <Button><Ojo color=\"primary\" /></Button>\r\n                            </Tooltip>\r\n                        </Link>\r\n                    }\r\n                        \r\n                    <Button disabled>\r\n                        <Flechita/>\r\n                    </Button>\r\n                  \r\n                    <Link to={state.ruta+\"/perfil-proveedor/\"+datos.Usuario_id.id} className={classes.EstiloLink}>\r\n                        <Button className={classes.button}>\r\n                            <Typography variant=\"h6\" component=\"h5\" align=\"left\">\r\n                                {`${datos.Usuario_id.nombre} ${datos.Usuario_id.apellido}`}\r\n                            </Typography>\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} lg={3} md={3} sm={12}>\r\n                    <Typography variant=\"h6\" component=\"h5\" align=\"right\">\r\n                        {datos.created_at.split(\"T\")[0]}\r\n                    </Typography>\r\n                </Grid>\r\n                \r\n                \r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h6\" component=\"h5\" align=\"left\">\r\n                        Motivos del reporte:\r\n                    </Typography>\r\n                </Grid>\r\n                \r\n                <Grid container direction=\"row\" justify=\"center\">\r\n                    {\r\n                        datos.motivos.map((motivo, i)=>(\r\n                            <Grid key={i} item xs={6} sm={3} md={3} lg={3}>\r\n                                <Typography variant=\"h6\" component=\"h3\" align=\"center\">\r\n                                    {\r\n                                        motivo.nombre\r\n                                    }\r\n                                </Typography>\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n                </Grid>\r\n                \r\n                <Grid item xs={12}>\r\n                    <DesplegarInformacion datos={datos} modificarReporte={modificarReporte}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n  \r\nfunction DesplegarInformacion({datos, modificarReporte}) {\r\n    const classes = Estilos();\r\n    const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n    //Variables del componente\r\n    const [open, setOpen] = useState(false);\r\n    const [accion, setaccion] = useState(false);\r\n    const [cargando, setcargando] = useState(false);\r\n\r\n    //Función que se ejecuta cada vez que se despliega la información, sirve para mostrar los elementos desplegados\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    //Funcion que se ejecuta cada vez que un administrador acepta o rechaza un reporte\r\n    function enviarDatos(descripcion, aceptado){\r\n        setcargando(true)\r\n        let auth = 'Bearer '+state.jwt;\r\n        let estado = 2\r\n        let datosNoti = \"Su \"+(datos.Solicitud_id!==null?\"publicación\":\"perfil\")+\" tiene una sugerencia de modificación. \\nMensaje de la administración: \"+descripcion\r\n        \r\n        /**\r\n         * estado:-1 ->Reporte respondido por el usuario\r\n         * estado: 0 ->Reporte esperando a ser atendido\r\n         * estado: 1 ->Reporte en espera, el proveedor debe modificar su perfil/publicación\r\n         * estado: 2 ->Reporte rechazado\r\n         * estado: 3 ->Reporte concluido\r\n         */\r\n\r\n        //Si se acepta el reporte\r\n        if(aceptado){\r\n            //Si la acción tomada es pausar la publicación o continuar con la pausa\r\n            if(accion){\r\n                //El estado se setea en \"en espera de respuesta\"\r\n                estado = 1\r\n                datosNoti = datos.Solicitud_id!==null?\r\n                \"Su publicación ha sido pausada por un administrador, deberá modificarla para que vuelva a estar disponible al público. \\nMensaje de la administración: \"+descripcion:\r\n                \"Su perfil ha sido bloqueado por un adminitrador, deberá modificarlo para que vuelva a estar disponible al público. \\nMensaje de la administración: \"+descripcion\r\n                //Bloqueamos la publicación, si es que ya no lo está\r\n                if(datos.estado!==-1)\r\n                    cambiarVariableBloqueado(datos, true)\r\n            //Si no se pausa o se despausa\r\n            }else{\r\n                //El estado se setea en \"concluído\"\r\n                estado = 3\r\n                //Si el estado del reporte era \"respondido\", se desbloquea la publicación\r\n                if(datos.estado===-1){\r\n                    cambiarVariableBloqueado(datos, false)\r\n                    aceptado = true\r\n                    datosNoti = datos.Solicitud_id!==null?\"¡Su publicación se encuentra nuevamente disponible!\":\"¡Su perfil se encuentra nuevamente disponible!\"\r\n                }\r\n            }\r\n        }\r\n        \r\n        //Si aceptado es true, entonces el reporte es aceptado y se le notifica al usuario\r\n        if(aceptado===true){\r\n            axios.post(\r\n                state.servidor+\"/api/notificaciones/\",{\r\n                    tipo: 0,\r\n                    emisor: state.datosSesion.id,\r\n                    receptor: datos.Usuario_id.id,\r\n                    solicitud: datos.Solicitud_id!==null?datos.Solicitud_id.id:null,\r\n                    datos_notificacion: datosNoti,\r\n                    leido: false\r\n                },{\r\n                    headers: {'Authorization': auth},\r\n            })\r\n            .then(response => {\r\n                actualizarReporte(response.data.id, estado)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error, no se ha podido crear la notificacion.\", error.response)\r\n                setcargando(false)\r\n            })\r\n        }else{\r\n            //Si aceptado es false, entonces el reporte es descartado, luego se actualiza el estado del reporte\r\n            actualizarReporte(null, estado)\r\n        }\r\n    }\r\n\r\n    //Función que se ejecuta cuando se desea actualizar la información de un determinado reporte\r\n    function actualizarReporte(notificacion, estado){\r\n        let auth = 'Bearer '+state.jwt;\r\n        //Se establecen los datos actualizados\r\n        axios.put(\r\n            state.servidor+\"/api/reportes/\"+datos.id,{\r\n                accion: accion,\r\n                estado: estado,\r\n                notificacion: notificacion,\r\n                Administrador_id: state.datosSesion.id\r\n            },{headers: {'Authorization': auth},\r\n        })\r\n        .then(response => {\r\n            setcargando(false)\r\n            /*El siguiente método actualiza el arreglo de objetos de reporte del componente pestanaReportes, \r\n            con el objetivo de que el reporte cambie de estado y se muestre en su respectivo tab*/\r\n            modificarReporte(response.data)\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Error, no se ha podido crear el reporte.\", error.response)\r\n            console.log(\"Error, no se ha podido crear el reporte.\")\r\n            setcargando(false)\r\n        })\r\n    }\r\n    \r\n    //Cuando un administrador decide pausar una publicación o despausar, entonces se debe actualizar la información\r\n    //de esa publicación.\r\n    function cambiarVariableBloqueado(datos, bool){\r\n        let auth = 'Bearer '+state.jwt;\r\n        //Si el reporte no tiene información de solicitud, significa que es un reporte a un perfil, por lo que\r\n        //debemos establecer la ruta y el id respectivo a cada uno de los casos\r\n        let ruta = datos.Solicitud_id===null?\"users/\":\"api/solicitud/\"\r\n        let _id = datos.Solicitud_id===null?datos.Usuario_id.id:datos.Solicitud_id.id\r\n\r\n        //Se actualizan los datos\r\n        axios.put(\r\n            state.servidor+\"/\"+ruta+_id,{\r\n                bloqueado: bool,\r\n            },{headers: {'Authorization': auth},})\r\n        .then(response => {\r\n            setcargando(false)\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Error, no se ha podido bloquear.\", error.response)\r\n            console.log(\"Error, no se ha podido bloquear .\")\r\n            setcargando(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ListItem button onClick={handleClick}>\r\n                <ListItemText primary=\"Desplegar información\"/>\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <hr/>\r\n                    <Grid item xs={12}>\r\n                        {\r\n                            datos.descripcion.split(\"##\").map((mensaje, i)=>(\r\n                                <Typography key={i} align=\"justify\"> \r\n                                    {mensaje}\r\n                                </Typography>\r\n                            ))\r\n                        } \r\n                    </Grid>\r\n                    <hr/>\r\n                    \r\n                    {\r\n                        datos.estado<=0 && <FormControl component=\"fieldset\" align=\"left\">\r\n                            <FormLabel required component=\"legend\">Acción</FormLabel>\r\n                                <RadioGroup disabled={datos.estado>0} row aria-label=\"Accion\" value={accion} onChange={(e)=>{setaccion(!accion)}}>\r\n                                    <FormControlLabel\r\n                                    value=\"true\"\r\n                                    checked={accion}\r\n                                    control={<Radio />}\r\n                                    label={datos.estado===-1?(datos.Solicitud_id!==null?\"Continuar con la publicación bloqueada\":\"Continuar con el perfil bloqueado\"):\r\n                                    (datos.Solicitud_id!==null?\"Bloquear publicación\":\"Bloquear perfil\")}/>\r\n                                    <FormControlLabel\r\n                                    value=\"false\"\r\n                                    checked={!accion}\r\n                                    control={<Radio />}\r\n                                    label={datos.estado===-1?(datos.Solicitud_id!==null?\"Desbloquear publicación\":\"Desbloquear perfil\"):(\"No hacer nada\")} />\r\n                                </RadioGroup>\r\n                        </FormControl>\r\n                    }\r\n                    {\r\n                        datos.estado>0 && <Typography variant=\"h6\" component=\"h5\" align=\"left\">\r\n                            {datos.accion?(datos.Solicitud_id!==null?\"La publicación fue bloqueada\":\"El perfil fue bloqueado\"):\r\n                            (datos.Solicitud_id!==null?\"No se bloqueó la publicación\":\"No se bloqueó el perfil\")}\r\n                        </Typography>\r\n                    }\r\n                    {\r\n                        cargando && <LinearProgress />\r\n                    }\r\n                    <div hidden={datos.estado>0}>\r\n                        {\r\n                            datos.estado===-1 && <ParteEspera_Historial datos={datos.notificacion}/>\r\n                        }\r\n                        <ParteNuevos enviarDatos={enviarDatos} datos={datos} cargando={cargando} esRespuesta={datos.estado===-1}/>\r\n                    </div>\r\n                    \r\n                    <div hidden={datos.estado<=0}>\r\n                        <ParteEspera_Historial datos={datos.notificacion}/>\r\n                    </div>\r\n                </List>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\n//Componente que se utiliza para mostrar los reportes de la sección \"Gestionar nuevos reportes\"\r\nconst ParteNuevos = ({enviarDatos, datos, cargando, esRespuesta}) =>{\r\n    const [descripcion, setdescripcion] = useState(\"\")\r\n    return(\r\n        <div>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                onChange={(e)=>{setdescripcion(e.target.value)}}\r\n                value={descripcion}\r\n                id=\"outlined-basic\"\r\n                label=\"Agregar mensaje\"\r\n                multiline variant=\"outlined\"\r\n                size=\"medium\"\r\n                fullWidth/> \r\n            </Grid>\r\n\r\n            <div align=\"center\">\r\n                <Button disabled={cargando} startIcon={<Aceptar/>} onClick={()=>{enviarDatos(descripcion, true)}}>\r\n                    {esRespuesta?\"Confirmar acción\":\"Aceptar reporte\"}\r\n                </Button>\r\n                {\r\n                    datos.estado!==-1 &&\r\n                    <Button disabled={cargando} color=\"secondary\" startIcon={<Rechazar/>} onClick={()=>{enviarDatos(descripcion, false)}}>\r\n                        Descartar reporte\r\n                    </Button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//Componente que se utiliza para mostrar los reportes de la sección \"Reportes en espera\"\r\nconst ParteEspera_Historial = ({datos}) =>{\r\n    return(\r\n        datos.map((notif, i)=>(\r\n            <div key={i}>\r\n                <hr/>\r\n                <Grid container justify=\"center\">\r\n                    <Grid item xs={9}>\r\n                        <Typography color=\"secondary\" variant=\"h5\" component=\"h4\" align=\"left\" >\r\n                            Mensaje del administrador\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography variant=\"h6\" component=\"h5\" align=\"right\">\r\n                            {notif.created_at.split(\"T\")[0]}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        {notif.datos_notificacion}\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        ))\r\n    )\r\n}","import React, {useState, useEffect, useContext} from 'react';\r\nimport axios from 'axios'\r\nimport PropTypes from 'prop-types';\r\n\r\n//Material UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Container, AppBar, Backdrop, CircularProgress, Box, Tab, Tabs} from '@material-ui/core';\r\nimport Nuevo from '@material-ui/icons/Announcement';\r\nimport Reloj from '@material-ui/icons/QueryBuilder';\r\nimport Check from '@material-ui/icons/AssignmentTurnedIn';\r\n\r\n\r\nimport GestionarReportes from './GestionarReportes.js'\r\n//Variables globales de la aplicación\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Función extraída de Material UI para mostrar las secciones del Tab\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n//Hasta aquí código copiado para el Tab\r\n\r\n//Estilos para PestanaReportes\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: 10,\r\n    minHeight:\"calc(100vh - 130px)\",\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function PestanaReportes() {\r\n  const classes = useStyles();\r\n  const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n\r\n  //Variables del componente\r\n  const [cargando, setcargando] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n  const [reportes, setreportes] = useState([]);\r\n\r\n  //Función que sirve para manejar el cambio de la sección del Tab\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  //Funcion que se ejecuta en el primer renderizado del componente, trae todos los reportes que existen\r\n  useEffect(()=>{\r\n    if (state.jwt!==\"\" || state.publico===true){\r\n        setcargando(true)\r\n        let auth = 'Bearer '+state.jwt;\r\n        //Solicitamos a la API todos los reportes\r\n        axios.get(state.servidor+\"/api/reportes\",{\r\n          headers: {'Authorization': auth}})\r\n        .then(response => {\r\n          setreportes(response.data)\r\n          setcargando(false)\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Un error ha ocurrido al cargar las categorías.\")\r\n          console.log(error.response)\r\n        })\r\n    }\r\n  },[state.jwt, state.publico])\r\n\r\n  //Función que sirve para modificar un determinado reporte y actualizarlo en la lista actual de reportes\r\n  function modificarReporte(report){\r\n    setreportes(\r\n      reportes.map((reporte)=>{\r\n        if(report.id===reporte.id){\r\n          return report\r\n        }else{\r\n          return reporte\r\n        }\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root} style={{padding:\"20px\"}} className=\"fondo\">\r\n      <Container>\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            variant=\"fullWidth\"\r\n            scrollButtons=\"auto\"\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            aria-label=\"scrollable force tabs example\"\r\n          >\r\n            <Tab label=\"Gestionar nuevos reportes\" icon={<Nuevo />} {...a11yProps(0)} />\r\n            <Tab label=\"Reportes en espera\" icon={<Reloj />} {...a11yProps(1)} />\r\n            <Tab label=\"Historial de reportes\" icon={<Check />} {...a11yProps(2)} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <Backdrop className={classes.backdrop} open={cargando}>\r\n          <CircularProgress/>\r\n        </Backdrop>\r\n        <TabPanel value={value} index={0}>\r\n          <GestionarReportes estadoReporte={0} cargando={cargando} modificarReporte={modificarReporte} reportes={reportes.filter((reporte)=>(reporte.estado<=0))}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={1}>\r\n          <GestionarReportes estadoReporte={1} cargando={cargando} modificarReporte={()=>{}} reportes={reportes.filter((reporte)=>(reporte.estado===1))}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={2}>\r\n          <GestionarReportes estadoReporte={2} cargando={cargando} modificarReporte={()=>{}} reportes={reportes.filter((reporte)=>(reporte.estado>=2))}/>\r\n        </TabPanel>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useState, useEffect, useContext} from 'react';\r\nimport {useHistory } from 'react-router-dom'\r\n\r\n//Material UI\r\nimport {LinearProgress, Typography, TextField, Button, Divider, Paper, Grid, Checkbox, FormControlLabel, Hidden} from '@material-ui/core/';\r\n\r\n//Libreria para consultar la API del servidor\r\nimport axios from 'axios';\r\n\r\n//Componentes creados\r\nimport Estilos from '../Estilos.js';\r\nimport SubirImagen from '../SubirImagen.js';\r\nimport InicioSesion from \"../Sesion/InicioSesion.js\";\r\nimport AlertaMensaje from '../AlertaMensaje.js';\r\n\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Componente utilizado para registrar un nuevo usuario o para modificar los datos de un usuario\r\nexport default function Registrar({registrar}){\r\n    const classes = Estilos()\r\n    //Variables de la página\r\n    const [mensaje, setmensaje] = useState(\"\");\r\n    const [mensajeAlerta, setmensajeAlerta] = useState(\"\");\r\n    let history = useHistory();\r\n    const [tituloPagina, settituloPagina] = useState(\"\")\r\n    const [cargando, setcargando] = useState(false)\r\n    const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n \r\n    //Variables de los campos   \r\n    const [imagenes, setimagenes] = useState([])\r\n    const [ImagenPerfil, setImagenPerfil] = useState([])\r\n    const [imagenesBorradas, setimagenesBorradas] = useState([]);\r\n    const [imagenesSubidas, setimagenesSubidas] = useState([]);\r\n    const [abrir, setabrir] = useState(false);\r\n    const [datos, setdatos] = useState({\r\n        nombre:\"\",\r\n        apellido:\"\",\r\n        email:\"\",\r\n        usuario:\"\",\r\n        telefono:\"\",\r\n        contrasena:\"\",\r\n        contrasena_rep:\"\",\r\n        dni:\"\",\r\n        descripcion:\"\",\r\n        imagen_perfil: null\r\n    });\r\n    //Proveedor\r\n    const [soyProveedor, setSoyProveedor] = useState(false);\r\n\r\n    //Si se quiere modificar los datos, entonces seteamos los datos del usuario en los campos\r\n    useEffect(()=>{\r\n        if(state.jwt!==\"\" || state.publico===true){\r\n            if(!registrar){            \r\n                setdatos({\r\n                    nombre: state.datosSesion.nombre,\r\n                    apellido: state.datosSesion.apellido,\r\n                    email: state.datosSesion.email,\r\n                    usuario: state.datosSesion.username,\r\n                    telefono: state.datosSesion.telefono,\r\n                    contrasena: \"\",\r\n                    contrasena_rep: \"\",\r\n                    dni: state.datosSesion.dni,\r\n                    descripcion: state.datosSesion.descripcion,\r\n                    tipo: state.datosSesion.tipo,\r\n                    imagen_perfil: state.datosSesion.imagen_perfil\r\n                })\r\n                \r\n                if(state.datosSesion.imagen_perfil!==null)\r\n                    setimagenes([state.datosSesion.imagen_perfil.id])\r\n            }\r\n        }\r\n    },[state.jwt, state.publico])\r\n\r\n    //Cada vez que se escribe algo en un campo, lo capturamos y lo seteamos en los datos\r\n    const cambiarInput = (e) =>{\r\n        if(mensaje!==\"\")\r\n            setmensaje(\"\")\r\n        \r\n        let valor = e.target.value;\r\n        let campo = e.target.name;\r\n        setdatos({\r\n            ...datos,\r\n            [campo]: valor\r\n        })\r\n    }\r\n\r\n    //Función para setear las imágenes\r\n    const funcionSetImagen = (file, cantidad, tipo, subidas) =>{\r\n        setimagenesSubidas(subidas)\r\n        //Si es 0, entonces se agrega la imagen a su respectiva variable, si es 1 entonces se desea eliminar\r\n        if(tipo===0){\r\n            setImagenPerfil([...ImagenPerfil, file])\r\n        }else{\r\n            setimagenesBorradas(img => [...imagenesBorradas, file])\r\n            let aux = ImagenPerfil.filter(f => f !== file)\r\n            setImagenPerfil(aux)\r\n        }\r\n    }\r\n\r\n    //Función para subir las imágenes\r\n    function subirImagen(datos){\r\n        let archivosNuevos = []\r\n        let auth = 'Bearer '+datos.jwt;\r\n\r\n        //archivosNuevos es el arreglo que contiene los archivos que han sido agregados y no los que ya han sido subidos al servidor\r\n        ImagenPerfil.map((imagen) => {\r\n            let iguales = imagenesSubidas.some(img => img === imagen)\r\n            if(!iguales){\r\n                archivosNuevos.push(imagen)\r\n            }\r\n        })\r\n        //archivosBorrados es el arreglo que contiene los archivos que han sido subidos al servidor pero que han sido eliminados en el frontend\r\n        let archivosBorrados = []\r\n        imagenesBorradas.map((imagen) => {\r\n            let iguales = imagenesSubidas.some(img => img === imagen)\r\n            if(iguales){\r\n                archivosBorrados.push(imagen)\r\n            }\r\n        })\r\n        //Si existen elementos dentro del arreglo imagenesBorradas, significa que se quieren borrar imágenes de la publicación\r\n        for(let indx = 0; indx < imagenesBorradas.length; indx++){\r\n            let id = Number(imagenesBorradas[indx].name)\r\n            \r\n            axios.delete(state.servidor+\"/upload/files/\"+id,\r\n            {\r\n                headers: {\r\n                'Authorization': auth\r\n            },})\r\n            .then(response => {\r\n               \r\n            }).catch(error => {\r\n                console.log(\"Error al borrar las imagenes\")\r\n                console.log(error.response)\r\n            })\r\n        }\r\n        \r\n        //Subiendo las imagenes seleccionadas\r\n        const formData = new FormData()\r\n        \r\n        //Se cargan en el fromData las nuevas imágenes cargadas a la publicación, si es que las hay, y los datos modificados\r\n        for(let i = 0; i<archivosNuevos.length; i++){\r\n            formData.append('files', archivosNuevos[i])\r\n        }\r\n        \r\n        if(archivosNuevos.length!==0){\r\n            formData.append('ref', 'user')\r\n            formData.append('refId', datos.usuario.id)\r\n            formData.append('field', 'imagen_perfil')\r\n            formData.append('source', 'users-permissions')\r\n\r\n            axios.post(\r\n                state.servidor+\"/upload\",\r\n                formData,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                        'Authorization': auth\r\n                    },\r\n                })\r\n            .then(response => {\r\n                let usr = datos.usuario\r\n                usr.imagen_perfil = response.data[0]\r\n\r\n                dispatch({type:\"setDatos\", value: usr})\r\n                dispatch({type:\"setJwt\", value: datos.jwt})\r\n\r\n                localStorage.setItem('datosLocal', JSON.stringify({\r\n                    jwt: datos.jwt,\r\n                    datosSesion: usr\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error: \", error.response)\r\n            })\r\n        }\r\n    }\r\n    \r\n    //Funcion para enviar los datos, ya sea de modificación de perfil como de creación de una cuenta nueva\r\n    const enviarDatos = (e) =>{\r\n        e.preventDefault();        \r\n        if(datos.email.search('[.][a-z][a-z]')=== -1 || datos.email.search('[.].*[0-9].*')!== -1 ){\r\n            setmensaje(\"El email se encuentra escrito incorrectamente\");\r\n        }else{\r\n            if(registrar){\r\n                if(datos.contrasena!==datos.contrasena_rep){\r\n                    setmensaje(\"Las contraseñas no coinciden\")\r\n                }else if(datos.contrasena.length < 8){\r\n                    setmensaje(\"La contraseña debe tener al menos 8 caracteres\");\r\n                }else{\r\n                    //Si se entra a acá, significa que se quiere crear un nuevo usuario\r\n                    enviarPost()\r\n                }\r\n            }else{\r\n                if(datos.email.search('[.][a-z][a-z]')=== -1 || datos.email.search('[.].*[0-9].*')!== -1 ){\r\n                    setmensaje(\"El email se encuentra escrito incorrectamente\");\r\n                }else{\r\n                    //Si se entra a acá, significa que se quiere modificar el usuario                \r\n                    enviarPut()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Función que se ejecuta si se quieren modificar datos de usuario\r\n    function enviarPut(){\r\n        let auth = 'Bearer '+state.jwt;\r\n        setcargando(true)\r\n        axios.put(\r\n            state.servidor+\"/users/\"+state.datosSesion.id\r\n            ,{\r\n                username: datos.usuario,\r\n                email: datos.email,\r\n                nombre: datos.nombre,\r\n                apellido: datos.apellido,\r\n                telefono: datos.telefono,\r\n                dni: datos.dni,\r\n                descripcion: datos.descripcion,\r\n                tipo: datos.tipo===2?2:soyProveedor?2:1\r\n            },\r\n            {\r\n                headers: {\r\n                    'Authorization': auth\r\n                },\r\n            }\r\n        )\r\n        .then(response => {\r\n            //Seteamos los datos de la sesión actual con los nuevos datos\r\n            dispatch({type:\"setDatos\", value: response.data})\r\n            dispatch({type:\"setJwt\", value: state.jwt})\r\n            subirImagen({usuario: response.data, jwt: state.jwt})\r\n            localStorage.setItem('datosLocal', JSON.stringify({\r\n                jwt: state.jwt,\r\n                datosSesion: response.data\r\n            }));\r\n            setcargando(false)\r\n            setmensajeAlerta(\"¡Cambios guardados!\")\r\n            setabrir(true)\r\n            setTimeout(() => {  history.push(state.ruta+\"/\"); }, 3000);\r\n        })\r\n        .catch(error => {\r\n            let err = JSON.parse(error.response.request.response).message[0].messages[0].id;\r\n            console.log(\"error: \",error.response)\r\n            if(err===\"Auth.form.error.email.taken\")\r\n                setmensaje('El email ya está en uso.');\r\n            else if(err===\"Auth.form.error.username.taken\")\r\n                setmensaje('El usuario ya está en uso.');\r\n            else{\r\n                setmensaje(err)\r\n            }\r\n            setcargando(false)\r\n        })\r\n    }\r\n\r\n    //Función que se ejecuta si se quiere crear un usuario nuevo\r\n    function enviarPost(){\r\n        setcargando(true)\r\n        axios\r\n        .post(state.servidor+\"/auth/local/register\", {\r\n            username: datos.usuario,\r\n            email: datos.email,\r\n            password: datos.contrasena,\r\n            nombre: datos.nombre,\r\n            apellido: datos.apellido,\r\n            telefono: datos.telefono,\r\n            dni: datos.dni,\r\n            descripcion: datos.descripcion,\r\n            tipo: soyProveedor?2:1,\r\n            confirmed: false,\r\n            estado: false,\r\n            mostrar_telefono: false,\r\n            identidad_verificada: false,\r\n            espera_verificacion: false,\r\n            bloqueado: false\r\n        })\r\n        .then(response => {\r\n            //Seteamos los datos de la sesión actual con los nuevos datos\r\n            dispatch({type:\"setDatos\", value: response.data.user})\r\n            dispatch({type:\"setJwt\", value: response.data.jwt})         \r\n            localStorage.setItem('datosLocal', JSON.stringify({\r\n                jwt: response.data.jwt,\r\n                datosSesion: response.data.user\r\n            }));\r\n            subirImagen({usuario: response.data.user, jwt: response.data.jwt})\r\n            setcargando(false)\r\n            setmensajeAlerta(\"Usuario creado. ¡Bienvenido a Servia!\")\r\n            setabrir(true)\r\n            setTimeout(() => {  history.push(state.ruta+\"/\"); }, 2000);\r\n        })\r\n        .catch(error => {\r\n            // Ocurrió un error\r\n            let err = JSON.parse(error.response.request.response).message[0].messages[0].id;\r\n            if(err===\"Auth.form.error.email.taken\")\r\n                setmensaje('El email ya está en uso.');\r\n            else if(err===\"Auth.form.error.username.taken\")\r\n                setmensaje('El usuario ya está en uso.');\r\n            else\r\n                setmensaje(err)\r\n            setcargando(false)\r\n        });\r\n    }\r\n\r\n    /*Cuando se renderiza la pagina debemos saber si ha sido invocada para registrar un usuario o\r\n    para modificar datos  */\r\n    useEffect(()=>{\r\n        if(!registrar){\r\n            settituloPagina(\"Modificar mi perfil\")\r\n        }else{\r\n            settituloPagina(\"Registrar usuario\")\r\n        }\r\n    },[])\r\n    \r\n    return (\r\n        <div className={classes.fondo}>\r\n            <Paper elevation={3} >\r\n                <form onSubmit={enviarDatos}>\r\n                    <Grid className={classes.gridRegistro} spacing={1} container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h5\" component=\"h1\" align=\"center\" className={classes.inputAncho}>\r\n                                {tituloPagina}\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                            className={classes.inputAncho}\r\n                            type=\"text\"\r\n                            name=\"nombre\"\r\n                            value={datos.nombre}\r\n                            onChange={cambiarInput}\r\n                            label=\"Nombre\"\r\n                            variant=\"filled\"\r\n                            required/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                            className={classes.inputAncho}\r\n                            type=\"text\"\r\n                            name=\"apellido\"\r\n                            value={datos.apellido}\r\n                            onChange={cambiarInput}\r\n                            label=\"Apellido\"\r\n                            variant=\"filled\"\r\n                            required/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <SubirImagen cantidad={1} setcargando={setcargando} funcionSetImagen={funcionSetImagen} ids={imagenes}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                            className={classes.inputAncho}\r\n                            name=\"email\"\r\n                            value={datos.email}\r\n                            onChange={cambiarInput}\r\n                            label=\"Correo electrónico\"\r\n                            variant=\"filled\"\r\n                            type=\"email\"\r\n                            required />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                            className={classes.inputAncho}\r\n                            name=\"usuario\"\r\n                            value={datos.usuario}\r\n                            onChange={cambiarInput}\r\n                            label=\"Usuario\"\r\n                            variant=\"filled\"\r\n                            required />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                            className={classes.inputAncho}\r\n                            type=\"number\"\r\n                            name=\"telefono\"\r\n                            value={datos.telefono}\r\n                            onChange={cambiarInput}\r\n                            label=\"Telefono\"\r\n                            variant=\"filled\"/>\r\n                        </Grid>\r\n                        <Divider/>\r\n                        <Hidden xlDown={!registrar}>\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    required={registrar}\r\n                                    name=\"contrasena\"\r\n                                    value={datos.contrasena}\r\n                                    onChange={cambiarInput}\r\n                                    type=\"password\"\r\n                                    label=\"Contraseña\"\r\n                                    variant=\"filled\"\r\n                                    className={classes.inputAncho} \r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}> \r\n                                <TextField\r\n                                    required={registrar}\r\n                                    name=\"contrasena_rep\"\r\n                                    value={datos.contrasena_rep}\r\n                                    onChange={cambiarInput}\r\n                                    type=\"password\"\r\n                                    label=\"Repetir contraseña\"\r\n                                    variant=\"filled\"\r\n                                    className={classes.inputAncho}\r\n                                />\r\n                            </Grid>\r\n                        </Hidden>\r\n                        \r\n                        <Hidden xlDown={mensaje===\"\"}>\r\n                            <Grid item xs={12}>\r\n                                <Typography color=\"error\">\r\n                                    {mensaje}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Hidden>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Hidden xlDown={state.datosSesion.tipo>1}>\r\n                                <OkProveedor soyProveedor={soyProveedor} setSoyProveedor={setSoyProveedor}/>\r\n                            </Hidden>\r\n                        </Grid>\r\n                        \r\n                        <div className={classes.inputAncho} hidden={!cargando}>\r\n                            <LinearProgress />\r\n                        </div>\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                            type=\"submit\"\r\n                            className={classes.inputAncho}\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={cargando}>\r\n                            {registrar?\"Registrar Usuario\":\"Guardar cambios\"}\r\n                            </Button>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12} hidden={!registrar}>\r\n                            <InicioSesion mensaje={\"¿Ya tienes una cuenta?\"}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                <AlertaMensaje mensaje={mensajeAlerta} abrir={abrir} setabrir={setabrir}/>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction OkProveedor({setSoyProveedor, soyProveedor}) {\r\n    const manejarCambio = (event) => {\r\n        setSoyProveedor(!soyProveedor);\r\n    };\r\n\r\n    return (\r\n        <FormControlLabel\r\n            control={<Checkbox checked={soyProveedor} onChange={manejarCambio} name=\"checkedB\" color=\"primary\"/>}\r\n            label=\"Soy proveedor de servicios\"\r\n        />\r\n    );\r\n}","import React, {useState, useEffect, useContext} from 'react';\r\nimport axios from 'axios'\r\n//Material-UI\r\nimport { Typography, Paper, Container } from '@material-ui/core';\r\nimport Alerta from '@material-ui/lab/Alert';\r\nimport Cargando from '@material-ui/core/LinearProgress';\r\n\r\nimport FilaPublicacion from '../Categoria/FilaPublicacion.js';\r\nimport Estilos from '../Estilos.js';\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Este componente nos sirve para mostrar las publicaciones y los servicios solicitados que tiene un usuario\r\nexport default function MisPublicaciones({tipoPublicacion}) {\r\n  const classes = Estilos();\r\n  const { state } = useContext(ObtenerEstadoAplicacion);\r\n  const [tituloPagina, setTituloPagina] = useState(\"\");\r\n  const [cargando, setcargando] = useState(false)\r\n  const [solicitudes, setsolicitudes] = useState([])\r\n  const [resenas_servicio, setresenas_servicio] = useState(null)\r\n\r\n  useEffect(()=>{\r\n    setcargando(true)\r\n    //Dependiendo de si se quiere crear una publicación o solicitar un servicio, se muestra la pantalla correspodiente\r\n    if(tipoPublicacion){\r\n      setTituloPagina(\"Mis publicaciones\");\r\n    }else{\r\n      setTituloPagina(\"Mis servicios solicitados\");\r\n    }\r\n    if(state.jwt!==\"\"){\r\n      setresenas_servicio(null)\r\n      buscarSolicitudes()\r\n    }\r\n  },[state.jwt, tipoPublicacion])\r\n\r\n  //Función que trae todas las publicaciones o solicitudes de servicios que tiene un usuario, dependiendo desde dónde se acceda\r\n  function buscarSolicitudes(){\r\n    axios.get(state.servidor+\"/api/solicitud?Usuario_id=\"+state.datosSesion.id+\"&tipo=\"+tipoPublicacion)\r\n    .then(response => {\r\n      //Guardamos las solicitudes en un arreglo\r\n      setsolicitudes(response.data)\r\n      setcargando(false)\r\n    })\r\n    .catch(error => {\r\n      console.log(\"Un error ha ocurrido al cargar las solicitudes.\")\r\n      console.log(error.response)\r\n    })\r\n    //Si se están listando publicaciones, entonces traemos también las reseñas\r\n    if(tipoPublicacion){\r\n      axios.get(state.servidor+\"/api/resenas?proveedor=\"+state.datosSesion.id)\r\n      .then(response => {\r\n        let servicios_resena = {}\r\n        //Seteamos únicamente las reseñas que correspondan a cada publicación\r\n        response.data.map((resena=>{\r\n          resena.servicios.map(serv_=>{\r\n            if(!servicios_resena.hasOwnProperty(serv_.nombre)){\r\n              servicios_resena[serv_.nombre] = {resenas:[]}\r\n              servicios_resena[serv_.nombre].resenas.push(resena)\r\n            }else{\r\n              servicios_resena[serv_.nombre].resenas.push(resena)\r\n            }\r\n          })\r\n        }))\r\n        setresenas_servicio(servicios_resena)\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Un error ha ocurrido al buscar los servicios.\")\r\n        console.log(error.response)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.fondo} style={{margin:\"auto\"}}>\r\n      <Container> \r\n          <Paper elevation={3} style={{maxWidth:950, padding: 15}} className=\"Fondo\">\r\n              <Typography variant=\"h5\" component=\"h2\" align=\"center\">{tituloPagina}</Typography>\r\n              <br/>\r\n              {\r\n                //Cuando cargando es true (seteado al momento de empezar a realizar la búsqueda de las publicaciones), nos muestra el componente de carga,\r\n                //y desaparece cuando cambia a false (seteado al finalizar la búsqueda de los datos)\r\n                cargando && <Cargando/>\r\n              }\r\n              {\r\n                !cargando && solicitudes.length===0 && (<Alerta variant=\"outlined\" severity=\"info\">\r\n                  No tienes {tipoPublicacion?\"publicaciones \":\"solicitudes \"}de servicios\r\n                </Alerta>)\r\n              }\r\n              {\r\n                solicitudes.map((solicitud, i)=>(\r\n                  <FilaPublicacion resenas={resenas_servicio===null?null:resenas_servicio[solicitud.Servicio_id.nombre]} buscarSolicitudes={buscarSolicitudes} key={i} datos={solicitud} tipoPublicacion={tipoPublicacion} contactar={true}/>\r\n                ))\r\n              }\r\n          </Paper>\r\n      </Container>\r\n    </div> \r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Typography, Paper, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core/';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Estilos from '../Estilos';\r\n\r\n//Componente que se muestra en la sección de preguntas frecuentes\r\nexport default function PreguntasFrecuentes() {\r\n  const classes = Estilos();\r\n  const [informacion, setinformacion] = React.useState([\r\n    {\r\n      pregunta: \"¿Qué es Servia?\",\r\n      respuesta: \"Servia es una aplicación en la cual vas a poder encontrar servicios domesticos, publicar tus servicios o solicitar un servicio determinado.\"\r\n    },\r\n    {\r\n      pregunta: \"¿Cómo busco un servicio?\",\r\n      respuesta: 'Para buscar un servicio, debes hacer click en la opcion \"Explorar servicios\", luego se mostrará una pagina donde podrás seleccionar la categoría referente al servicio que buscas, al hacer esto se abrirá una página donde podrás ver y buscar servicios.'\r\n    },\r\n    {\r\n      pregunta: \"¿Cómo me vuelvo proveedor de servicios?\",\r\n      respuesta: 'Para ser proveedor, debes seleccionar la opción \"Quiero ser proveedor de servicios\" al momento de registrarte o yendo a \"Editar mi perfil\".'\r\n    },\r\n    {\r\n      pregunta: \"Si soy un proveedor de servicios, ¿Cómo verifico mi identidad en Servia?\",\r\n      respuesta: 'Para verificar tu identidad, debes ir a la opcion \"Verificar mi identidad\", allí podrás cargar tu número de DNI y las fotos del mismo. Luego un administrador validará tus datos y te notificará los resultados.'\r\n    },\r\n    {\r\n      pregunta: \"¿De qué me sirve verificar mi identidad?\",\r\n      respuesta: 'Verificar tu identidad te sirve para mostrar un distintivo al lado de tu nombre que indica que tu perfil se encuentra verificado y que pertenece a una persona real.'\r\n    },\r\n    {\r\n      pregunta: \"¿Cómo me publicito en Servia?\",\r\n      respuesta: \"Servia ofrece a los proveedores la posibilidad de crear publicaciones en donde pueden mostrar una descripción de sus servicio e imágenes que la acompañen.\"\r\n    },\r\n    {\r\n      pregunta: \"¿Cómo solicito un servicio?\",\r\n      respuesta: 'Para solicitar un servicio, debes ir a la opción \"Solicitar servicio\", allí podrás especificar todos los requerimientos, de modo de que algún proveedor se pueda contactar contigo para ayudarte.'\r\n    },\r\n    {\r\n      pregunta: \"¿Cómo administro las publicaciones/solicitudes que he hecho?\",\r\n      respuesta: 'Para administrar tus publicaciones/solicitudes, debes ir a la opcion \"Mis servicios solicitados\" o \"Mis publicaciones\", allí podrás modificar o eliminar las publicaciones/solicitudes que hiciste.'\r\n    },\r\n    {\r\n      pregunta: \"¿Cómo contacto a un proveedor de servicios?\",\r\n      respuesta: 'Para contactar a un proveedor de servicios, debes ir a la publicacion del servicio que deseas y hacer click en la opción \"Contactar\". Al hacer click en el boton \"Enviar\", se generará un Chat en el cual el proveedor podrá responderte.'\r\n    },\r\n    {\r\n      pregunta: \"¿Cómo me mantengo en contacto con un proveedor de servicios?\",\r\n      respuesta: \"Para mantenerte en contacto con uno o varios proveedores existe un chat, el cual tendrá los chats con los proveedores que hiciste contacto. Par accederlo debes hacer click en el ícono de mensaje, al lado de la campana de notificaciones.\"\r\n    },\r\n  ])\r\n\r\n  return (\r\n    <div className={classes.fondo}>\r\n      <Paper elevation={3} style={{margin:\"auto\",width:850, padding:\"20px\"}} className=\"Fondo\">    \r\n        <Typography component=\"h3\" variant=\"h4\" align=\"center\">\r\n            Preguntas frecuentes\r\n        </Typography>\r\n        <br/>\r\n        <>\r\n          {\r\n            informacion.map((fila, i)=>(\r\n              <Accordion key={i}>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n                  <Typography  component=\"h6\" variant=\"h6\">{fila.pregunta}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Typography>\r\n                    {fila.respuesta}\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            ))\r\n          }\r\n        </>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport {Typography, Paper} from '@material-ui/core/';\r\n\r\nimport Estilos from '../Estilos';\r\n\r\nexport default function SobreNosotros() {\r\n  const classes = Estilos();\r\n  return (\r\n    <div className={classes.fondo} >\r\n      <Paper elevation={3} style={{width:650, minHeight:300, padding: 15}}>    \r\n        <Typography component=\"h3\" variant=\"h4\" align=\"center\">\r\n            ¿Quienes somos?\r\n        </Typography>  \r\n        <Typography variant=\"body1\" align=\"left\">\r\n            Somos...\r\n        </Typography>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","import React,{useState, useEffect, useContext} from 'react';\r\nimport {useHistory } from 'react-router-dom'\r\n//Libreria para consultar la API del servidor\r\nimport axios from 'axios';\r\n//Material UI\r\nimport {Typography, TextField, Button, Paper, Grid} from '@material-ui/core/';\r\nimport Cargando from '@material-ui/core/LinearProgress';\r\n//Componentes creados\r\nimport Estilos from '../Estilos.js';\r\nimport SubirImagen from '../SubirImagen.js';\r\nimport AlertaMensaje from '../AlertaMensaje.js';\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Componente que se utiliza por el usuario cuando quiere verificar su identidad\r\nexport default function VerificarMiIdentidad(){\r\n    const classes = Estilos()\r\n    const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n    let history = useHistory();\r\n    //Variables de la página\r\n    const [cargando, setcargando] = useState(false)\r\n    const [abrir, setabrir] = useState(false);\r\n    //Variables de los campos   \r\n    const [DNI, setDNI] = useState(\"\")\r\n    const [imagenes, setimagenes] = useState([])\r\n    const [ImagenDNI, setImagenDNI] = useState([])\r\n    const [imagenesSubidas, setimagenesSubidas] = useState([]);\r\n    const [imagenesBorradas, setimagenesBorradas] = useState([]);\r\n\r\n    const funcionSetImagen = (file, cantidad, tipo, subidas) =>{\r\n        setimagenesSubidas(subidas)\r\n        //Si es 0, entonces se agrega la imagen a su respectiva variable, si es 1 entonces se desea eliminar\r\n        if(tipo===0){\r\n            setImagenDNI([...ImagenDNI, file])\r\n        }else{\r\n            setimagenesBorradas(img => [...imagenesBorradas, file])\r\n            let aux = ImagenDNI.filter(f => f !== file)\r\n            setImagenDNI(aux)\r\n        }\r\n        setimagenesSubidas(subidas)\r\n    }\r\n\r\n    //Si ya se tiene cargado el número de dni y/o imágenes del documento, se los setea en los campos\r\n    useEffect(()=>{\r\n        if(state.jwt!==\"\"){\r\n            setDNI(state.datosSesion.dni)\r\n            let imgs = state.datosSesion.imagenes_dni.map(i_dni => i_dni.id)\r\n            setimagenes(imgs)\r\n        }\r\n    },[state.jwt])\r\n    \r\n    //Función ejecutada al enviar los datos\r\n    const enviarDatos = (e) =>{\r\n        e.preventDefault()\r\n        setcargando(true)\r\n\r\n        setDNI(String(DNI))\r\n\r\n        let archivosNuevos = []\r\n        \r\n        //archivosNuevos es el arreglo que contiene los archivos que han sido agregados y no los que ya han sido subidos al servidor\r\n        ImagenDNI.map((imagen) => {\r\n            let iguales = imagenesSubidas.some(img => img === imagen)\r\n            if(!iguales){\r\n                archivosNuevos.push(imagen)\r\n            }\r\n        })\r\n\r\n        //archivosBorrados es el arreglo que contiene los archivos que han sido subidos al servidor pero que han sido eliminados en el frontend\r\n        let archivosBorrados = []\r\n        imagenesBorradas.map((imagen) => {\r\n            let iguales = imagenesSubidas.some(img => img === imagen)\r\n            if(iguales){\r\n                archivosBorrados.push(imagen)\r\n            }\r\n        })\r\n        \r\n        //Si existen elementos dentro del arreglo imagenesBorradas, significa que se quieren borrar imágenes de la publicación\r\n        for(let indx = 0; indx < imagenesBorradas.length; indx++){\r\n            let id = Number(imagenesBorradas[indx].name)\r\n            \r\n            let auth = 'Bearer '+state.jwt;\r\n            axios.delete(state.servidor+\"/upload/files/\"+id,\r\n            {\r\n                headers: {\r\n                'Authorization': auth\r\n            },})\r\n            .then(response => {       \r\n            }).catch(error => {\r\n                console.log(\"Error al borrar las imagenes\")\r\n                console.log(error.response)\r\n            })\r\n        }\r\n\r\n        //Subiendo las imagenes seleccionadas\r\n        const formData = new FormData()\r\n        \r\n        //Se cargan en el fromData las nuevas imágenes cargadas a la publicación, si es que las hay, y los datos modificados\r\n        for(let i = 0; i<archivosNuevos.length; i++){\r\n            formData.append('files', archivosNuevos[i])\r\n        }\r\n        \r\n        \r\n        if(archivosNuevos.length!==0){\r\n            formData.append('ref', 'user')\r\n            formData.append('refId', state.datosSesion.id)\r\n            formData.append('field', 'imagenes_dni')\r\n            formData.append('source', 'users-permissions')\r\n\r\n            let auth = 'Bearer '+state.jwt;\r\n\r\n            axios.post(\r\n                state.servidor+\"/upload\",\r\n                formData,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                        'Authorization': auth\r\n                    },\r\n                })\r\n            .then(response => {\r\n                guardarDatos()\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error al cargar las imágenes.\")\r\n                console.log(\"Error: \", error.response)\r\n            })\r\n        }else{\r\n            guardarDatos()\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    //Función que se ejecuta para guardar los datos del usuario\r\n    function guardarDatos(){\r\n        let auth = 'Bearer '+state.jwt;\r\n        //Se modifica el perfil del usuario incluyendo los nuevos datos.\r\n        axios.put(\r\n            state.servidor+\"/users/\"+state.datosSesion.id,{\r\n                dni: DNI,\r\n                espera_verificacion: true\r\n            },{\r\n                headers: {\r\n                    'Authorization': auth\r\n            },})\r\n        .then(response => {\r\n            dispatch({type:\"setDatos\", value: response.data})\r\n            localStorage.setItem('datosLocal', JSON.stringify({\r\n                jwt: state.jwt,\r\n                datosSesion: response.data\r\n            }));\r\n            \r\n            setcargando(false)\r\n            setabrir(true)\r\n            setTimeout(() => {  history.push(state.ruta+\"/\"); }, 3000);\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Error, no se han podido enviar los datos.\", error.response)\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.fondo}>\r\n            <Paper elevation={3} >\r\n                <form onSubmit={enviarDatos}>\r\n                    <Grid className={classes.gridRegistro} spacing={1} container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h5\" component=\"h1\" align=\"center\" className={classes.inputAncho}>\r\n                                Verificar mi identidad\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} align=\"center\">\r\n                            <TextField\r\n                            className={classes.inputAncho}\r\n                            type=\"number\"\r\n                            name=\"dni\"\r\n                            value={DNI}\r\n                            style={{width:\"50%\"}}\r\n                            onChange={(e)=>{setDNI(e.target.value)}}\r\n                            id=\"filled-basic\"\r\n                            label=\"Número de documento\"\r\n                            variant=\"filled\"\r\n                            required/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"subtitle1\" component=\"h1\" align=\"justify\" className={classes.inputAncho}>\r\n                                Para que puedas verificar tu identidad, necesitamos que subas una foto del frente y otra del dorso de tu DNI. Procura que ambas imágenes se vean legibles y correspondan con los datos que proporcionaste en tu perfil.\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <SubirImagen cantidad={2} funcionSetImagen={funcionSetImagen} setcargando={setcargando} ids={imagenes}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} className={classes.inputAncho}>\r\n                            {cargando && <Cargando/>}\r\n                        </Grid>\r\n                        \r\n                        {\r\n                            (state.datosSesion.identidad_verificada || state.datosSesion.espera_verificacion) &&\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"subtitle1\" component=\"h1\" align=\"justify\" color=\"error\" className={classes.inputAncho}>\r\n                                    {state.datosSesion.espera_verificacion?\"Ya tienes una solicitud de verificación pendiente.\":\"¡Tu perfil ya está verificado!\"}\r\n                                </Typography>\r\n                            </Grid>\r\n                        }\r\n\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                className={classes.inputAncho}\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={cargando || state.datosSesion.identidad_verificada || state.datosSesion.espera_verificacion}\r\n                            >\r\n                                Enviar solicitud\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                <AlertaMensaje mensaje={\"¡Solicitud enviada con éxito! Pronto nos pondremos en contacto contigo.\"} abrir={abrir} setabrir={setabrir}/>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import React,{useState, useEffect, useContext} from 'react';\r\nimport axios from 'axios'\r\n\r\n//Material UI\r\nimport {LinearProgress, Avatar, Link, Divider, Button, Grid, Backdrop, Modal, Fade, Typography, TextField, FormControl, Hidden } from '@material-ui/core/';\r\n\r\n//Componentes\r\nimport Estrellas from '../Estrellas.js';\r\nimport AlertaMensaje from '../AlertaMensaje.js';\r\nimport Estilos from '../Estilos.js'\r\nimport SeleccionarServicio from '../SeleccionarServicio.js';\r\n//Variables de estado global del sistema\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\nexport default function RealizarOpinion({eliminarNotificacion, datos}) {\r\n  const classes = Estilos();\r\n  const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n  //Variables del componente\r\n  const [open, setOpen] = React.useState(false);\r\n  const [abrir, setabrir] = React.useState(false);\r\n  const [valorEstrella, setValorEstrella] = useState(0);\r\n  const [titulo, settitulo] = useState(\"\");\r\n  const [descripcion, setdescripcion] = useState(\"\");\r\n  const [servicios, setservicios] = useState([]);\r\n  const [serviciosSeleccionados, setserviciosSeleccionados] = useState([]);\r\n  const [cargando, setcargando] = useState(false);\r\n  const [mensaje, setmensaje] = useState(false);\r\n\r\n  //Funciones que permite abrir o cerrar la ventana modal\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  //\r\n  //Cada vez que el usuario selecciona una valoración (estrellas), se ejecuta el siguiente método que obtiene el valor seleccionado\r\n  const cambiarValor = (e) =>{\r\n    setValorEstrella(Number(e.target.value));\r\n  }\r\n\r\n  //La siguiente función sirve para obtener los servicios al cual el usuario va a realizar la reseña\r\n  //si el cliente contactó por medio de una solicitud, sacamos el id de la categoria por medio de la solicitud,\r\n  // si lo hizo por medio del perfil del proveedor, entonces el id de la categoría va a estar en datos_notificación\r\n  useEffect(() => {\r\n    setValorEstrella(0)\r\n    //El objetivo de todo esto es que el usuario pueda seleccionar servicios adicionales, en el caso de que el proveedor los haya hecho\r\n    let _id = datos.solicitud!==null?datos.solicitud.Categoria_id:Number(datos.datos_notificacion.split(\"_\")[0])\r\n    let auth = 'Bearer '+state.jwt;\r\n\r\n    console.log(\"id: \", _id)\r\n    \r\n    //Si el contacto es por solicitud, podemos saber cual va a ser el servicio inicial\r\n    let seleccInic = datos.solicitud!==null?[datos.solicitud.Servicio_id]:[]\r\n    setserviciosSeleccionados(seleccInic)\r\n    \r\n    //Buscamos todos los servicios según la categoría\r\n    axios.get(state.servidor+\"/api/servicios?categoria=\"+_id,{\r\n      headers: {'Authorization': auth},\r\n    })\r\n    .then(response => {\r\n      let servicios_ = response.data.map(serv=>{\r\n        serv[\"seleccionado\"] = false\r\n        return serv\r\n      })\r\n      setservicios(servicios_)\r\n    })\r\n    .catch(error => {\r\n      console.log(\"Un error ha ocurrido al buscar los servicios.\")\r\n      console.log(error.response)\r\n    }) \r\n  },[datos])\r\n\r\n  //El usuario genera la opinión del servicio dado por el proveedor\r\n  function enviarOpinion(e){\r\n    e.preventDefault()\r\n    let auth = 'Bearer '+state.jwt;    \r\n    //Si no hay servicios seleccionados, entonces el usuario no puede realizar la opinión\r\n    if(serviciosSeleccionados.length!==0){\r\n      setcargando(true)\r\n\r\n      //Se establece toda la información de la reseña\r\n      axios.post(\r\n        state.servidor+\"/api/resenas/\",{\r\n        titulo: titulo,\r\n        descripcion: descripcion,\r\n        recomendacion: Number(valorEstrella),\r\n        votos_positivos: 0,\r\n        votos_negativos: 0,\r\n        proveedor: datos.emisor.id,\r\n        servicios: serviciosSeleccionados.length!==0?serviciosSeleccionados:null,\r\n        },\r\n        {headers: {'Authorization': auth},})\r\n      .then(response => {\r\n        //Se elimina la notificación para que el usuario no pueda volver a realizar la reseña\r\n        eliminarNotificacion(datos.id)\r\n        setcargando(false)\r\n        setabrir(true)\r\n        setOpen(false)\r\n    })\r\n      .catch(error => {\r\n        console.log(\"Error, no se ha podido crear la reseña.\", error.response)\r\n        console.log(\"Error, no se ha podido crear la reseña.\")\r\n    })\r\n    }else{\r\n      setmensaje(true)\r\n    }\r\n  }\r\n\r\n  //Cada vez que se selecciona un servicio o se lo saca, debemos actualizar la lista de servicios seleccionados \r\n  function seleccionarServicio(servicio_){\r\n    if (mensaje)\r\n      setmensaje(false)\r\n    let yaEsta = serviciosSeleccionados.some(serv=>(serv === servicio_.id))\r\n    if(!yaEsta){\r\n      setserviciosSeleccionados([...serviciosSeleccionados, servicio_.id])\r\n    }else{\r\n      setserviciosSeleccionados(serviciosSeleccionados.filter(srv_ => srv_!==servicio_.id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleOpen}\r\n        >\r\n        Realizar reseña\r\n      </Button>\r\n\r\n      <AlertaMensaje mensaje=\"¡Reseña enviada!\" setabrir={setabrir} abrir={abrir}/>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.mostrarFlex}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n        \r\n      >\r\n        <Fade in={open}>\r\n          <div >\r\n            <Grid className={classes.papelFondo} style={{maxWidth: \"500px\"}} container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n              <form onSubmit={enviarOpinion}>\r\n                <FormControl >\r\n                  <Grid item xs={12}>\r\n                    <div align=\"center\">\r\n                        <Avatar\r\n                        alt=\"Nombre proveedor\"\r\n                        src={datos.emisor.imagenes_proveedor.length!==0?state.servidor+datos.emisor.imagenes_proveedor[0].url:\"\"}\r\n                        className={classes.imagenPublicacion}/>\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" component=\"h2\" align=\"center\" className={classes.form}>\r\n                      {`${datos.emisor.nombre} ${datos.emisor.apellido}`}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                    <Typography variant=\"h5\" component=\"h3\" align=\"center\" className={classes.form}>\r\n                      {datos.solicitud!==null?\"Publicación: \":\"Categoría: \"} \r\n                      {datos.solicitud!==null?datos.solicitud.titulo:datos.datos_notificacion.split(\"_\")[1]}\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                      onChange={(e)=>{settitulo(e.target.value)}}\r\n                      className={classes.inputAncho}\r\n                      id=\"filled-basic\"\r\n                      label=\"Título de la reseña\"\r\n                      variant=\"filled\"\r\n                      required/>\r\n                    <Divider/>\r\n                    <br/>\r\n                    <TextField\r\n                      onChange={(e)=>{setdescripcion(e.target.value)}}\r\n                      className={classes.inputAncho}\r\n                      id=\"filled-basic\"\r\n                      label=\"Descripción (opcional)\"\r\n                      variant=\"filled\"\r\n                      multiline/>\r\n                    <br/>\r\n\r\n                    {\r\n                      servicios.length!==0 &&\r\n                      <Grid container spacing={2} justify=\"space-around\">\r\n                        <Grid item xs={12}>\r\n                          <Typography variant=\"subtitle1\" component=\"h4\" align=\"center\" className={classes.form}>\r\n                            {datos.solicitud!==null?\"Si el proveedor te ha ofrecido otros servicios, puedes seleccionarlos aquí: \":\"Selecciona los servicios llevados a cabo: \"} \r\n                          </Typography>\r\n                        </Grid>\r\n                        {\r\n                          servicios.map((servicio,k) => (\r\n                            datos.solicitud!==null?(datos.solicitud.Servicio_id!==servicio.id):true &&\r\n                            <Grid item xs={6} sm={4} md={3} lg={2} key={k}>\r\n                              <SeleccionarServicio\r\n                                servicio={servicio} \r\n                                agregarSeleccionado={(valor)=>{\r\n                                  seleccionarServicio(servicio)\r\n                                  servicio.seleccionado = valor\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                          ))\r\n                        }\r\n                      </Grid>\r\n                    }\r\n\r\n                    <Typography variant=\"h5\" component=\"h4\" align=\"center\" className={classes.form}>\r\n                        ¡Valora el servicio brindado!\r\n                    </Typography>\r\n                    <Estrellas valor={valorEstrella} cambiarValor={cambiarValor} clickeable={true}/>\r\n\r\n                    <Hidden xlDown={!mensaje || cargando}>\r\n                      <Typography color=\"error\">\r\n                        Debes seleccionar al menos un servicio.\r\n                      </Typography>\r\n                    </Hidden>\r\n                    \r\n                    {cargando && <LinearProgress/>}\r\n\r\n                    <Button\r\n                      type=\"submit\"\r\n                      disabled={Number(valorEstrella)===0 || cargando}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Enviar reseña\r\n                    </Button>\r\n                </FormControl>\r\n                </form>\r\n            </Grid>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport axios from 'axios'\r\n//Material-UI\r\nimport {IconButton, LinearProgress, Container, Paper, Grid, Typography} from '@material-ui/core/';\r\nimport {DeleteForever as Eliminar, FiberNew as Nuevo, Assignment as Reporte, EmojiPeople as Identidad, Star as Resena, FormatItalic} from '@material-ui/icons/';\r\nimport Alerta from '@material-ui/lab/Alert';\r\nimport { red } from '@material-ui/core/colors';\r\n//Librerías\r\nimport 'react-lightbox-component/build/css/index.css';\r\nimport { format, register } from 'timeago.js';\r\n//Estilos\r\nimport Estilos from '../Estilos.js'\r\n//Componentes\r\nimport AlertaSi_No from '../AlertaSi_No.js';\r\nimport RealizarOpinion from './RealizarOpinion.js'\r\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\r\n\r\n//Este componente permite generar una solicitud de validación de identidad, el proveedor podrá cargar su N° de DNI\r\n//y las fotos del mismo, enviará la solicitud y luego un administrador validará sus datos y rechazará o aceptará su solicitud\r\nexport default function VerificarIdentidad() {\r\n    const classes = Estilos();\r\n    const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n    //Variables del componente\r\n    const [notificaciones, setnotificaciones] = useState([])\r\n    const [cargando, setcargando] = useState(false);\r\n    const [preguntarEliminar, setpreguntarEliminar] = useState(false);\r\n    const [iconos, seticonos] = useState([<Reporte style={{ fontSize: \"75px\" }}/>, <Identidad style={{ fontSize: \"75px\" }}/>, <Resena style={{ fontSize: \"75px\" }}/>]);\r\n    \r\n    //La siguiente función es de una librería que permite ver fechas en términos mas amigables (ej. hace 1 hora, hace 5 dias, etc.)\r\n    const localeFunc = (number, index, totalSec) => {\r\n        // number: the timeago / timein number;\r\n        // index: the index of array below;\r\n        // totalSec: total seconds between date to be formatted and today's date;\r\n        return [\r\n          ['justo ahora', 'justo ahora'],\r\n          ['hace %s segundos', 'en %s segundos'],\r\n          ['hace 1 minuto', 'en 1 minuto'],\r\n          ['hace %s minutos', 'en %s minutos'],\r\n          ['hace 1 hora', 'en 1 hora'],\r\n          ['hace %s horas', 'en %s horas'],\r\n          ['hace 1 día', 'en 1 día'],\r\n          ['hace %s días', 'en %s días'],\r\n          ['hace 1 semana', 'en 1 semana'],\r\n          ['hace %s semanas', 'en %s semanas'],\r\n          ['hace 1 mes', 'en 1 mes'],\r\n          ['hace %s meses', 'en %s meses'],\r\n          ['hace 1 año', 'en 1 año'],\r\n          ['hace %s años', 'en %s años']\r\n        ][index];\r\n    };\r\n    register('spanish', localeFunc);\r\n    //\r\n\r\n    //La siguiente función se ejecuta en el primer renderizado y se encarga de obtener todas las notificaciones \r\n    //del usuario que se encuentra logueado\r\n    useEffect(()=>{\r\n        setcargando(true)\r\n        let auth = 'Bearer '+state.jwt\r\n        if (state.jwt!==\"\" || state.publico===true){            \r\n            axios.get(state.servidor+\"/api/notificaciones?receptor=\"+state.datosSesion.id,{\r\n                headers: {'Authorization': auth},\r\n            })\r\n            .then(response => {\r\n                //Seteamos en la variable notificaciones, las obtenidas por la consulta a la API\r\n                setnotificaciones(response.data.reverse())\r\n\r\n                //Cada vez que se accede a las notificaciones se setean como leidas a aquellas que no lo están\r\n                response.data.map(notif=>{\r\n                    if(notif.leido!==true){\r\n                        definirLeido(notif.id)\r\n                    }\r\n                })\r\n                \r\n                setcargando(false)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Un error ha ocurrido al buscar las notificaciones.\")\r\n                console.log(error.response)\r\n            }) \r\n        }\r\n    },[state.jwt, state.publico])\r\n    \r\n    //Método que permite eliminar una determinada publicación \r\n    function eliminarNotificacion(id_){\r\n        setnotificaciones(notificaciones.filter(notificacion=>notificacion.id!==id_))\r\n        let auth = 'Bearer '+state.jwt\r\n        axios.delete(state.servidor+\"/api/notificaciones/\"+id_,{\r\n            headers: {'Authorization': auth},\r\n        })\r\n        .then(response => {\r\n            \r\n        })\r\n        .catch(error => {\r\n            console.log(\"Un error ha ocurrido al eliminar la notificación.\")\r\n            console.log(error.response)\r\n        }) \r\n    }\r\n\r\n    //Función que actualiza el estado de una notificación a leido\r\n    function definirLeido(id_){\r\n        let auth = 'Bearer '+state.jwt\r\n        axios.put(state.servidor+\"/api/notificaciones/\"+id_,{\r\n            leido: true\r\n        },{\r\n            headers: {'Authorization': auth},\r\n        })\r\n        .then(response => {\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Un error ha ocurrido al cambiar la variable true.\")\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.fondo}>\r\n            <Paper style={{padding:\"15px\", width:\"100%\"}} className=\"Fondo\" variant=\"outlined\" square>\r\n                <Grid container direction=\"row\" alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\" component=\"h4\" align=\"center\">\r\n                            Notificaciones\r\n                        </Typography>\r\n                        <br/>\r\n                    </Grid>\r\n                    {\r\n                        cargando && <Grid item xs={12}><LinearProgress/></Grid>\r\n                    }\r\n                    {\r\n                        //Si no se esta cargando (buscando las notificaciones) y si no se tienen notificaciones, se muestra un mensaje indicando de que el usuario no tiene\r\n                        !cargando && notificaciones.length===0 && (<Grid item xs={12}><Alerta variant=\"outlined\" severity=\"info\">\r\n                            No tienes notificaciones nuevas.\r\n                        </Alerta></Grid>)\r\n                    }  \r\n                    {\r\n                        //El siguiente mapeo muestra todas las notificaciones que el usuario tiene, como pueden haber\r\n                        //distintos tipos de notificaciones, se consideran diferentes casos para mostrarlas\r\n                        notificaciones.map((noti, i)=>(\r\n                            <Paper key={i} className={classes.filaPublicacion} style={{margin:\"auto\" ,width:\"95%\"}} variant=\"outlined\" square>\r\n                                <Grid container item xs={12} alignItems=\"center\">\r\n                                    <Grid item xs={12} sm={2} md={1} lg={1} align=\"center\">\r\n                                        {\r\n                                            iconos[noti.tipo]\r\n                                        }\r\n                                    </Grid>\r\n                                    <Grid item xs={10} sm={8} md={10} lg={10}>\r\n                                        <Typography variant=\"h5\" component=\"h5\" align=\"left\">\r\n                                            {\r\n                                                /*\r\n                                                    Se mostrarán diferentes títulos según el tipo de notificación\r\n                                                    tipo:0 -> La notificación hace referencia a un reporte de publicación o de perfil\r\n                                                    tipo:1 -> La notificación hace referencia a un reporte de solicitud de verificación de identidad\r\n                                                    tipo:2 -> La notificación hace referencia a un reporte de solicitud de reseña\r\n                                                */\r\n                                            }\r\n                                            {noti.tipo===0 && (noti.solicitud!==null?\r\n                                                'Reporte a la publicación \"'+noti.solicitud.titulo+'\"':\r\n                                                'Reporte a su perfil')}\r\n                                            {noti.tipo===1 && 'Respuesta a tu solicitud de verificación de identidad'}\r\n                                            {noti.tipo===2 && (noti.datos_notificacion===\"\"?\r\n                                                ('Nueva solicitud de reseña a la publicación \"'+noti.solicitud.titulo+'\"'):\r\n                                                ('Nueva solicitud de reseña a la categoría \"'+noti.datos_notificacion.split(\"_\")[1]+'\"'))}\r\n                                            {\" - \"+format(new Date(noti.created_at),\"spanish\")}\r\n                                            {!noti.leido && <Nuevo style={{ color: red[500] }}/>}\r\n                                        </Typography>\r\n                                        <Typography align=\"justify\">\r\n                                            {/*Se mostrarán diferentes descripciones según el tipo de notificación*/}\r\n                                            {noti.tipo<2?(noti.datos_notificacion!==\"\"?noti.datos_notificacion:\"¡Felicitaciones! Tu perfil ahora está verificado.\"):\r\n                                            (noti.datos_notificacion===\"\"?\r\n                                            (noti.solicitud.tipo?('Tienes una nueva petición de reseña al servicio \"'+noti.solicitud.titulo):\r\n                                            ('Tienes una nueva petición de reseña al servicio ofrecido por el proveedor '+\r\n                                            `${noti.emisor.nombre} ${noti.emisor.apellido}`+' por tu solicitud \"'+noti.solicitud.titulo+'\". ¡Cuéntanos tu experiencia haciendo click en el botón!')):\r\n                                            ('Tienes una nueva petición de reseña a la categoría \"'+noti.datos_notificacion.split(\"_\")[1]))}\r\n                                            {noti.tipo===2 && noti.solicitud.tipo && '\" realizada por el proveedor '+`${noti.emisor.nombre} ${noti.emisor.apellido}`+'. ¡Cuéntanos tu experiencia haciendo click en el botón!'}\r\n                                        </Typography>\r\n                                        {\r\n                                            //Si la notificación es de tipo 2, entonces es necesario mostrar un boton en el cuerpo de la notificación\r\n                                            //para poder mostrar el componente para realizar dicha reseña\r\n                                            noti.tipo===2 && <div align=\"center\"><RealizarOpinion datos={noti} eliminarNotificacion={eliminarNotificacion}/></div>\r\n                                        }\r\n                                        \r\n                                    </Grid>\r\n                                    <Grid item xs={2} sm={2} md={1} lg={1} align=\"center\">\r\n                                        {\r\n                                            <IconButton onClick={()=>{setpreguntarEliminar(true)}}><Eliminar color=\"error\" /></IconButton>\r\n                                        }\r\n                                    </Grid>\r\n                                    {\r\n                                        //Si se quiere eliminar una notificación, se pregunta si de verdad el usuario quiere hacerlo, si se\r\n                                        //selecciona \"Aceptar\", entonces la notificación se eliminará para siempre\r\n                                        preguntarEliminar &&\r\n                                        <AlertaSi_No\r\n                                        mensaje={\"\"}\r\n                                        funcionAceptar={(bool)=>{\r\n                                            //Si bool es true, entonces el usuario a elegido \"Aceptar\"\r\n                                            if(bool){\r\n                                                eliminarNotificacion(noti.id)\r\n                                            }\r\n                                            setpreguntarEliminar(false)\r\n                                        }}\r\n                                        titulo=\"¿Está seguro que quiere eliminar la notificación?\"/>\r\n                                    }\r\n                                </Grid>\r\n                            </Paper>\r\n                        ))\r\n                    }\r\n                </Grid>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}","import React, { Component } from 'react';\n\nimport './PhotoMessage.css';\n\nimport FaCloudDownload from 'react-icons/lib/fa/cloud-download';\nimport FaError from 'react-icons/lib/fa/exclamation-triangle';\n\nconst ProgressBar = require('react-progress-bar.js');\nconst Circle = ProgressBar.Circle;\n\nexport class PhotoMessage extends Component {\n    render() {\n        var progressOptions = {\n            strokeWidth: 2.3,\n            color: '#efe',\n            trailColor: '#aaa',\n            trailWidth: 1,\n            step: (state, circle) => {\n                circle.path.setAttribute('trail', state.color);\n                circle.path.setAttribute('trailwidth-width', state.width);\n\n                var value = Math.round(circle.value() * 100);\n                if (value === 0)\n                    circle.setText('');\n                else\n                    circle.setText(value);\n            }\n        };\n\n        const error = this.props.data.status && this.props.data.status.error === true;\n\n        return (\n            <div className=\"rce-mbox-photo\">\n                <div\n                    className=\"rce-mbox-photo--img\"\n                    style={this.props.data.width && this.props.data.height && {\n                        width: this.props.data.width,\n                        height: this.props.data.height,\n                    }}>\n                    <img\n                        src={this.props.data.uri}\n                        alt={this.props.data.alt}\n                        onClick={this.props.onOpen}\n                        onLoad={this.props.onLoad}\n                        onError={this.props.onPhotoError}/>\n                    {\n                        error &&\n                        <div className=\"rce-mbox-photo--img__block\">\n                            <span\n                                className=\"rce-mbox-photo--img__block-item rce-mbox-photo--error\">\n                                <FaError/>\n                            </span>\n                        </div>\n                    }\n                    {\n                        !error &&\n                        this.props.data.status &&\n                        !this.props.data.status.download &&\n                        <div className=\"rce-mbox-photo--img__block\">\n                            {\n                                !this.props.data.status.click &&\n                                <button\n                                    onClick={this.props.onDownload}\n                                    className=\"rce-mbox-photo--img__block-item rce-mbox-photo--download\">\n                                    <FaCloudDownload/>\n                                </button>\n                            }\n                            {\n                                typeof this.props.data.status.loading === 'number' &&\n                                this.props.data.status.loading !== 0 &&\n                                <Circle\n                                    progress={this.props.data.status.loading}\n                                    options={progressOptions}\n                                    initialAnimate={true}\n                                    containerClassName={'rce-mbox-photo--img__block-item'} />\n                            }\n                        </div>\n                    }\n                </div>\n                {\n                    this.props.text &&\n                    <div className=\"rce-mbox-text\">\n                        {this.props.text}\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nPhotoMessage.defaultProps = {\n    text: '',\n    data: {},\n    onDownload: null,\n    onOpen: null,\n    onLoad: null,\n    onPhotoError: null,\n};\n\n\nexport default PhotoMessage;\n","import React, { Component } from 'react';\nimport './FileMessage.css';\n\nimport FaCloudDownload from 'react-icons/lib/fa/cloud-download';\nimport FaError from 'react-icons/lib/fa/exclamation-triangle';\nimport FaFile from 'react-icons/lib/fa/file';\n\nconst ProgressBar = require('react-progress-bar.js');\nconst Circle = ProgressBar.Circle;\n\nexport class FileMessage extends Component {\n\n    onClick(e) {\n        if (!this.props.data.status)\n            return;\n\n        if (!this.props.data.status.download && this.props.onDownload instanceof Function)\n            this.props.onDownload(e);\n        else if (this.props.data.status.download && this.props.onOpen instanceof Function)\n            this.props.onOpen(e);\n    }\n\n    render() {\n        var progressOptions = {\n            strokeWidth: 5,\n            color: '#333',\n            trailColor: '#aaa',\n            trailWidth: 5,\n            step: (state, circle) => {\n                circle.path.setAttribute('trail', state.color);\n                circle.path.setAttribute('trailwidth-width', state.width);\n\n                var value = Math.round(circle.value() * 100);\n                if (value === 0)\n                    circle.setText('');\n                else\n                    circle.setText(value);\n            }\n        };\n\n        const error = this.props.data.status && this.props.data.status.error === true;\n\n        return (\n            <div className='rce-mbox-file'>\n                <button onClick={this.onClick.bind(this)}>\n                    <div className=\"rce-mbox-file--icon\">\n                        <FaFile\n                            color='#aaa'/>\n                        <div className=\"rce-mbox-file--size\">\n                            {this.props.data.size}\n                        </div>\n                    </div>\n                    <div className=\"rce-mbox-file--text\">\n                        {this.props.text}\n                    </div>\n                    <div className=\"rce-mbox-file--buttons\">\n                        {\n                            error &&\n                            <span className=\"rce-error-button\">\n                                <FaError\n                                    color='#ff3d3d'/>\n                            </span>\n                        }\n                        {\n                            !error &&\n                            this.props.data.status &&\n                            !this.props.data.status.download &&\n                            !this.props.data.status.click &&\n                            <FaCloudDownload\n                                color='#aaa'/>\n                        }\n                        {\n                            !error &&\n                            this.props.data.status &&\n                            typeof this.props.data.status.loading === 'number' &&\n                            this.props.data.status.loading !== 0 &&\n                            <Circle\n                                progress={this.props.data.status.loading}\n                                options={progressOptions}\n                                initialAnimate={true}\n                                containerClassName={'rce-mbox-file--loading'} />\n                        }\n                    </div>\n                </button>\n            </div>\n        );\n    }\n}\n\nFileMessage.defaultProps = {\n    text: '',\n    data: {},\n    onClick: null,\n    onDownload: null,\n    onOpen: null,\n};\n\n\nexport default FileMessage;\n","import React, { Component } from 'react';\nimport './SystemMessage.css';\n\nconst classNames = require('classnames');\n\nexport class SystemMessage extends Component {\n    render() {\n        return (\n            <div className={classNames(\"rce-container-smsg\", this.props.className)}>\n                <div\n                    className='rce-smsg'>\n                    <div className=\"rce-smsg-text\">\n                        {this.props.text}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SystemMessage;\n","import React, { Component } from 'react';\nimport './LocationMessage.css';\n\nconst classNames = require('classnames');\n\nconst STATIC_URL = 'https://maps.googleapis.com/maps/api/staticmap?markers=color:MARKER_COLOR|LATITUDE,LONGITUDE&zoom=ZOOM&size=270x200&scale=2&key=KEY';\nconst MAP_URL = 'https://www.google.com/maps/search/?api=1&query=LATITUDE,LONGITUDE&zoom=ZOOM';\n\nexport class LocationMessage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.className = this.className.bind(this);\n    }\n\n    buildURL(url) {\n        var center = this.props.data || {};\n\n        return url.replace(/LATITUDE/g, center.latitude)\n                  .replace(/LONGITUDE/g, center.longitude)\n                  .replace('MARKER_COLOR', this.props.markerColor)\n                  .replace('ZOOM', this.props.zoom)\n                  .replace('KEY', this.props.apiKey);\n    }\n\n    className() {\n        var className = classNames('rce-mbox-location', this.props.className);\n\n        if (this.props.text) {\n            className = classNames(className, 'rce-mbox-location-has-text');\n        }\n\n        return className;\n    }\n\n    render() {\n        const data = this.props.data || {};\n\n        return (\n            <div className='rce-container-lmsg'>\n                <a\n                    onClick={this.props.onOpen}\n                    target={this.props.target}\n                    href={this.props.href || this.props.src || this.buildURL(data.mapURL || MAP_URL)}\n                    className={this.className()}>\n                    <img\n                        onError={this.props.onError}\n                        className='rce-mbox-location-img'\n                        src={\n                            this.props.src ||\n                            this.buildURL(data.staticURL || STATIC_URL)\n                        }/>\n                </a>\n                {\n                    this.props.text &&\n                    <div className=\"rce-mbox-text rce-mbox-location-text\">\n                        {this.props.text}\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nLocationMessage.defaultProps = {\n    target: '_blank',\n    apiKey: '',\n    zoom: 14,\n    markerColor: 'red',\n    onError: () => void(0),\n}\n\nexport default LocationMessage;\n","import React, { Component } from 'react';\nimport './SpotifyMessage.css';\n\nconst classNames = require('classnames');\n\nexport class SpotifyMessage extends Component {\n    toUrl() {\n        var formBody = [];\n        var data = {\n            uri: this.props.uri,\n            theme: this.props.theme,\n            view: this.props.view,\n        };\n        for (var property in data) {\n            var encodedKey = encodeURIComponent(property);\n            var encodedValue = encodeURIComponent(data[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        formBody = formBody.join(\"&\");\n        return formBody;\n    }\n\n    render() {\n        if (!this.props.uri)\n            return null;\n        return (\n            <div className=\"rce-mbox-spotify\">\n                <iframe\n                    src={\"https://open.spotify.com/embed?\" + this.toUrl()}\n                    width={this.props.width}\n                    height={this.props.height}\n                    frameBorder=\"0\"\n                    allowtransparency=\"true\"></iframe>\n            </div>\n        );\n    }\n}\n\nSpotifyMessage.defaultProps = {\n    uri: '',\n    theme: 'black',\n    view: 'list',\n    width: 300,\n    height: 380,\n}\n\nexport default SpotifyMessage;\n","import React, { Component } from 'react';\nimport './ReplyMessage.css';\n\nconst classNames = require('classnames');\n\nexport class ReplyMessage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {\n            photoURL,\n            title,\n            titleColor,\n            message,\n            onClick,\n        } = this.props;\n\n        return (\n            <div\n                className={classNames(\"rce-mbox-reply\", {\n                    'rce-mbox-reply-border': !!titleColor\n                })}\n                style={titleColor && { borderColor: titleColor }}\n                onClick={onClick}>\n                <div className=\"rce-mbox-reply-left\">\n                    <div\n                        style={titleColor && { color: titleColor }}\n                        className=\"rce-mbox-reply-owner\">\n                        {title || 'Unknown'}\n                    </div>\n                    <div className=\"rce-mbox-reply-message\">\n                        {message || '...'}\n                    </div>\n                </div>\n                {\n                    photoURL &&\n                    <div className=\"rce-mbox-reply-right\">\n                        <img src={photoURL} alt=\"\"/>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nReplyMessage.defaultProps = {\n    photoURL: null,\n    title: null,\n    titleColor: null,\n    message: null,\n    onClick: () => void(0),\n}\n\nexport default ReplyMessage;\n","import React, { Component } from 'react';\nimport './Avatar.css';\n\nconst classNames = require('classnames');\n\nconst loadedAvatars = [];\n\nexport class Avatar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.requestImage = this.requestImage.bind(this);\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    isLoaded(src) {\n        return loadedAvatars.indexOf(src) !== -1;\n    }\n\n    requestImage(src) {\n        var self = this;\n        this.loading = true;\n\n        var loaded = () => {\n            loadedAvatars.push(src);\n            delete self.loading;\n            if (this._isMounted !== false) {\n                self.setState({});\n            }\n        };\n\n        var img = document.createElement('img');\n        img.src = src;\n        img.onload = loaded;\n        img.onerror = loaded;\n    }\n\n    stringToColour (str) {\n        var hash = 0;\n        for (let i = 0; i < str.length; i++) {\n            hash = str.charCodeAt(i) + ((hash << 5) - hash);\n        }\n        var colour = '#';\n        for (let i = 0; i < 3; i++) {\n            var value = (hash >> (i * 8)) & 0xFF;\n            value = (value % 150) + 50;\n            colour += ('00' + value.toString(16)).substr(-2);\n        }\n        return colour;\n    }\n\n    render() {\n        let src = this.props.src;\n        let isLazyImage = false;\n\n        if (this.props.lazyLoadingImage) {\n            isLazyImage = true;\n\n            if (!this.isLoaded(src)) {\n                src = this.props.lazyLoadingImage; // lazy image\n\n                if (!this.loading) {\n                    this.requestImage(this.props.src);\n                }\n            }\n            else {\n                isLazyImage = false;\n            }\n        }\n\n        return (\n            <div className={classNames('rce-avatar-container', this.props.type, this.props.size, this.props.className)}>\n                {\n                    this.props.letterItem ?\n                    <div\n                        className=\"rce-avatar-letter-background\"\n                        style={{ backgroundColor: this.stringToColour(this.props.letterItem.id)}}>\n                        <span className=\"rce-avatar-letter\">\n                            {this.props.letterItem.letter}\n                        </span>\n                    </div>\n                    :\n                    <img\n                        alt={this.props.alt}\n                        src={src}\n                        onError={this.props.onError}\n                        className={classNames(\n                            'rce-avatar',\n                            {'rce-avatar-lazy': isLazyImage},\n                        )} />\n                }\n                {this.props.sideElement}\n            </div>\n        );\n    }\n}\n\nAvatar.defaultProps = {\n    type: 'default',\n    size: 'default',\n    src: '',\n    alt: '',\n    sideElement: null,\n    lazyLoadingImage: undefined,\n    onError: () => void(0),\n};\n\nexport default Avatar;\n","import React, { Component } from 'react';\nimport './MeetingMessage.css';\n\nimport FaCalendar from 'react-icons/lib/fa/calendar';\nimport MdMoreHoriz from 'react-icons/lib/md/more-horiz';\nimport FaCaretDown from 'react-icons/lib/fa/caret-down';\nimport FaCaretRight from 'react-icons/lib/fa/caret-right';\nimport IoVideo from 'react-icons/lib/io/ios-videocam-outline';\nimport IoChatboxes from 'react-icons/lib/io/ios-chatboxes-outline';\n\nimport {\n    format,\n} from'timeago.js';\n\nimport Avatar from '../Avatar/Avatar';\n\nimport classNames from 'classnames';\n\nexport class MeetingMessage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            toogle: false,\n        };\n    }\n\n    toggleClick() {\n        this.setState({\n            toogle: !this.state.toogle,\n        })\n    }\n\n    render() {\n        const {\n            date,\n            dateString,\n            title,\n            subject,\n            onClick,\n            collapseTitle,\n            dataSource,\n            participants,\n            onMeetingTitleClick,\n            onMeetingVideoLinkClick,\n        } = this.props;\n\n        const PARTICIPANT_LIMIT = this.props.participantsLimit;\n\n        const dateText = dateString ? dateString : (date && !isNaN(date) && (format(date)));\n\n        return (\n            <div className=\"rce-mbox-mtmg\">\n                <div className=\"rce-mtmg\">\n                    <div\n                        className=\"rce-mtmg-subject\">\n                        {subject || 'Unknown Meeting'}\n                    </div>\n                    <div\n                        className=\"rce-mtmg-body\"\n                        onClick={onClick}>\n                        <div className=\"rce-mtmg-item\">\n                            <FaCalendar />\n                            <div className=\"rce-mtmg-content\">\n                                <span className=\"rce-mtmg-title\">\n                                    {title}\n                                </span>\n                                <span className='rce-mtmg-date'>\n                                    {dateText}\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"rce-mtmg-right-icon\">\n                            <MdMoreHoriz/>\n                        </div>\n                    </div>\n                    <div\n                        className=\"rce-mtmg-body-bottom\"\n                        onClick={() => this.toggleClick()}>\n                        {\n                            this.state.toogle === true ?\n                            <div className=\"rce-mtmg-bottom--tptitle\">\n                                <FaCaretDown/>\n                                <span>{collapseTitle}</span>\n                            </div>\n                            :\n                            <div className=\"rce-mtmg-body-bottom--bttitle\">\n                                <FaCaretRight/>\n                                <span>\n                                    {\n                                        participants.slice(0, PARTICIPANT_LIMIT).map(x => x.title || 'Unknow').join(', ')\n                                    }\n                                    {\n                                        participants.length > PARTICIPANT_LIMIT &&\n                                            `, +${(participants.length - PARTICIPANT_LIMIT)}`\n                                    }\n                                </span>\n                            </div>\n                        }\n                    </div>\n                    <div\n                        className={classNames(\n                            'rce-mtmg-toogleContent',\n                            {'rce-mtmg-toogleContent--click': this.state.toogle === true}\n                        )}>\n                        {\n                            dataSource &&\n                            dataSource.map((x, i) => {\n                                return (\n                                    <div key={i}>\n                                        {\n                                            !x.event &&\n                                            <div className=\"rce-mitem\">\n                                                <div\n                                                    className={classNames(\n                                                        'rce-mitem avatar',\n                                                        {'rce-mitem no-avatar': !x.avatar}\n                                                    )}>\n                                                    {\n                                                        x.avatar ?\n                                                            <Avatar src={x.avatar}/>\n                                                            : <IoChatboxes />\n                                                    }\n                                                </div>\n                                                <div className=\"rce-mitem-body\">\n                                                    <div className=\"rce-mitem-body--top\">\n                                                        <div\n                                                            className=\"rce-mitem-body--top-title\"\n                                                            onClick={(e) => onMeetingTitleClick(x, i, e)}>\n                                                            {x.title}\n                                                        </div>\n                                                        <div className=\"rce-mitem-body--top-time\">\n                                                            {\n                                                                x.dateString ? x.dateString : (x.date &&\n                                                                !isNaN(x.date) &&\n                                                                (format(x.date)))\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"rce-mitem-body--bottom\">\n                                                        <div\n                                                            className=\"rce-mitem-body--bottom-title\" >\n                                                            {x.message}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        }\n\n                                        {\n                                            x.event &&\n                                            <div className=\"rce-mitem-event\">\n                                                <div className=\"rce-mitem-bottom-body\">\n                                                    <div className=\"rce-mitem-body avatar\">\n                                                        <IoVideo />\n                                                    </div>\n                                                    <div className=\"rce-mitem-bottom-body-top\">\n                                                        {x.event.title}\n                                                        <div className=\"rce-mitem-body--top-time\">\n                                                            {\n                                                                x.dateString ? x.dateString : (x.date &&\n                                                                !isNaN(x.date) &&\n                                                                (format(x.date)))\n                                                            }\n                                                        </div>\n                                                        <div className=\"rce-mitem-avatar-content\">\n                                                            {\n                                                                x.event.avatars &&\n                                                                x.event.avatars.map((x, i) => x instanceof Avatar ? x : (\n                                                                    <div key={i} className=\"rce-mitem-avatar\">\n                                                                        <Avatar\n                                                                            src={x.src}/>\n                                                                    </div>\n                                                                ))\n                                                            }\n                                                        </div>\n                                                        {\n                                                            x.record &&\n                                                            <div className=\"rce-mtmg-call-record\">\n                                                                <div className=\"rce-mtmg-call-body\">\n                                                                    <div\n                                                                        onClick={(e) => onMeetingVideoLinkClick(x, i, e)}\n                                                                        className=\"rce-mtmg-call-avatars\">\n                                                                        <Avatar\n                                                                            className={'rce-mtmg-call-avatars'}\n                                                                            src={x.record.avatar}/>\n                                                                        <div className={'rce-mtmg-record-time'}>\n                                                                            {x.record.time}\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"rce-mtmg-call-body-title\">\n                                                                        <span>\n                                                                            {x.record.title}\n                                                                        </span>\n                                                                        <div className=\"rce-mtmg-call-body-bottom\">\n                                                                            {x.record.savedBy}\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        }\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        }\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMeetingMessage.defaultProps = {\n    date: new Date(),\n    dateString: '',\n    title: '',\n    subject: '',\n    collapseTitle: '',\n    participantsLimit: 3,\n    avatarFlexible: false,\n    dataSource: [],\n    participants: [],\n    onClick: () => void(0),\n    onMeetingTitleClick: () => void(0),\n    onMeetingVideoLinkClick: () => void(0),\n    onAvatarError: () => void(0),\n};\n\nexport default MeetingMessage;\n","import React, { Component } from 'react';\nimport './MessageBox.css';\n\nimport PhotoMessage from '../PhotoMessage/PhotoMessage';\nimport FileMessage from '../FileMessage/FileMessage';\nimport SystemMessage from '../SystemMessage/SystemMessage';\nimport LocationMessage from '../LocationMessage/LocationMessage';\nimport SpotifyMessage from '../SpotifyMessage/SpotifyMessage';\nimport ReplyMessage from '../ReplyMessage/ReplyMessage';\nimport MeetingMessage from '../MeetingMessage/MeetingMessage';\n\nimport Avatar from '../Avatar/Avatar';\n\nimport FaForward from 'react-icons/lib/fa/mail-forward';\n\nimport IoDoneAll from 'react-icons/lib/io/android-done-all';\nimport MdIosTime from 'react-icons/lib/md/access-time';\nimport MdCheck from 'react-icons/lib/md/check';\nimport MdMessage from 'react-icons/lib/md/message';\n\nimport {\n    format,\n} from 'timeago.js';\n\nimport classNames from 'classnames';\n\nexport class MessageBox extends Component {\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.focus !== this.props.focus && nextProps.focus === true) {\n            if (this.refs['message']) {\n                this.refs['message'].scrollIntoView({\n                    block: \"center\",\n                    behavior: 'smooth'\n                })\n\n                this.props.onMessageFocused(nextProps);\n            }\n        }\n    }\n\n    render() {\n        var positionCls = classNames('rce-mbox', { 'rce-mbox-right': this.props.position === 'right' });\n        var thatAbsoluteTime = !/(text|file|meeting)/g.test(this.props.type) && !(this.props.type === 'location' && this.props.text);\n\n        const dateText = this.props.date && !isNaN(this.props.date) && (\n            this.props.dateString ||\n            format(this.props.date)\n        );\n\n        return (\n            <div\n                ref='message'\n                className={classNames('rce-container-mbox', this.props.className)}\n                onClick={this.props.onClick}>\n                {\n                    this.props.renderAddCmp instanceof Function &&\n                    this.props.renderAddCmp()\n                }\n                {\n                    this.props.type === 'system' ?\n                        <SystemMessage\n                            text={this.props.text} />\n                        :\n                        <div\n                            className={classNames(\n                                positionCls,\n                                {'rce-mbox--clear-padding': thatAbsoluteTime},\n                                {'rce-mbox--clear-notch': !this.props.notch},\n                                { 'message-focus': this.props.focus},\n                            )}>\n                            <div\n                                className='rce-mbox-body'\n                                onContextMenu={this.props.onContextMenu}>\n                                {\n                                    this.props.forwarded === true &&\n                                    <div\n                                        className={classNames(\n                                            'rce-mbox-forward',\n                                            { 'rce-mbox-forward-right': this.props.position === 'left' },\n                                            { 'rce-mbox-forward-left': this.props.position === 'right' }\n                                        )}\n                                        onClick={this.props.onForwardClick}>\n                                            <FaForward />\n                                    </div>\n                                }\n\n                                {\n                                    this.props.replyButton === true &&\n                                    <div\n                                        className={this.props.forwarded !== true ? classNames(\n                                            'rce-mbox-forward',\n                                            { 'rce-mbox-forward-right': this.props.position === 'left' },\n                                            { 'rce-mbox-forward-left': this.props.position === 'right' }\n                                        ) : classNames(\n                                            'rce-mbox-forward',\n                                            { 'rce-mbox-reply-btn-right': this.props.position === 'left' },\n                                            { 'rce-mbox-reply-btn-left': this.props.position === 'right' }\n                                        )}\n                                        onClick={this.props.onReplyClick}>\n                                            <MdMessage />\n                                    </div>\n                                }\n\n                                {\n                                    (this.props.title || this.props.avatar) &&\n                                    <div\n                                        style={this.props.titleColor && { color: this.props.titleColor }}\n                                        onClick={this.props.onTitleClick}\n                                        className={classNames('rce-mbox-title', {\n                                            'rce-mbox-title--clear': this.props.type === 'text',\n                                        })}>\n                                        {\n                                            this.props.avatar &&\n                                            <Avatar\n                                                letterItem={this.props.letterItem}\n                                                src={this.props.avatar}/>\n                                        }\n                                        {\n                                            this.props.title &&\n                                            <span>{this.props.title}</span>\n                                        }\n                                    </div>\n                                }\n\n                                {\n                                    this.props.reply &&\n                                    <ReplyMessage\n                                        photoURL={this.props.reply.photoURL}\n                                        title={this.props.reply.title}\n                                        titleColor={this.props.reply.titleColor}\n                                        message={this.props.reply.message}\n                                        onClick={this.props.onReplyMessageClick}/>\n                                }\n\n                                {\n                                    this.props.type === 'text' &&\n                                    <div className=\"rce-mbox-text\">\n                                        {this.props.text}\n                                    </div>\n                                }\n\n                                {\n                                    this.props.type === 'location' &&\n                                    <LocationMessage\n                                        onOpen={this.props.onOpen}\n                                        data={this.props.data}\n                                        target={this.props.target}\n                                        href={this.props.href}\n                                        apiKey={this.props.apiKey}\n                                        src={this.props.src}\n                                        zoom={this.props.zoom}\n                                        markerColor={this.props.markerColor}\n                                        text={this.props.text} />\n                                }\n\n                                {\n                                    this.props.type === 'photo' &&\n                                    <PhotoMessage\n                                        onOpen={this.props.onOpen}\n                                        onDownload={this.props.onDownload}\n                                        onLoad={this.props.onLoad}\n                                        onPhotoError={this.props.onPhotoError}\n                                        data={this.props.data}\n                                        width={this.props.width}\n                                        height={this.props.height}\n                                        text={this.props.text} />\n                                }\n\n                                {\n                                    this.props.type === 'file' &&\n                                    <FileMessage\n                                        onOpen={this.props.onOpen}\n                                        onDownload={this.props.onDownload}\n                                        data={this.props.data}\n                                        text={this.props.text} />\n                                }\n\n                                {\n                                    this.props.type === 'spotify' &&\n                                    <SpotifyMessage\n                                        width={this.props.width}\n                                        height={this.props.height}\n                                        theme={this.props.theme}\n                                        view={this.props.view}\n                                        data={this.props.data}\n                                        uri={this.props.uri || this.props.text} />\n                                }\n\n                                {\n                                    this.props.type === 'meeting' &&\n                                    this.props.meeting &&\n                                    <MeetingMessage\n                                        subject={this.props.meeting.subject}\n                                        title={this.props.meeting.title}\n                                        date={this.props.meeting.date}\n                                        dateString={this.props.meeting.dateString}\n                                        collapseTitle={this.props.meeting.collapseTitle}\n                                        participants={this.props.meeting.participants}\n                                        dataSource={this.props.meeting.dataSource}\n                                        onMeetingMessageClick={this.props.onMeetingMessageClick}\n                                        onMeetingVideoLinkClick={this.props.onMeetingVideoLinkClick}\n                                        onMeetingTitleClick={this.props.onMeetingTitleClick} />\n                                }\n\n                                <div\n                                    className={classNames(\n                                        'rce-mbox-time',\n                                        { 'rce-mbox-time-block': thatAbsoluteTime },\n                                        { 'non-copiable': !this.props.copiableDate },\n                                    )}\n                                    data-text={this.props.copiableDate ? undefined : dateText}>\n                                    {\n                                        this.props.copiableDate &&\n                                        this.props.date &&\n                                        !isNaN(this.props.date) &&\n                                        (\n                                            this.props.dateString ||\n                                            format(this.props.date)\n                                        )\n                                    }\n                                    {\n                                        this.props.status &&\n                                        <span className='rce-mbox-status'>\n                                            {\n                                                this.props.status === 'waiting' &&\n                                                <MdIosTime />\n                                            }\n\n                                            {\n                                                this.props.status === 'sent' &&\n                                                <MdCheck />\n                                            }\n\n                                            {\n                                                this.props.status === 'received' &&\n                                                <IoDoneAll />\n                                            }\n\n                                            {\n                                                this.props.status === 'read' &&\n                                                <IoDoneAll color='#4FC3F7'/>\n                                            }\n                                        </span>\n                                    }\n                                </div>\n                            </div>\n\n                            {\n                                this.props.notch &&\n                                (this.props.position === 'right' ?\n                                    <svg className={classNames(\n                                        \"rce-mbox-right-notch\",\n                                        { 'message-focus': this.props.focus},\n                                    )} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                                        <path d=\"M0 0v20L20 0\" />\n                                    </svg>\n                                    :\n                                    <div>\n                                        <svg className={classNames(\n                                                \"rce-mbox-left-notch\",\n                                                { 'message-focus': this.props.focus},\n                                            )} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                                            <defs>\n                                                <filter id=\"filter1\" x=\"0\" y=\"0\">\n                                                    <feOffset result=\"offOut\" in=\"SourceAlpha\" dx=\"-2\" dy=\"-5\" />\n                                                    <feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"3\" />\n                                                    <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n                                                </filter>\n                                            </defs>\n                                            <path d=\"M20 0v20L0 0\" filter=\"url(#filter1)\" />\n                                        </svg>\n                                    </div>\n                                )\n                            }\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\nMessageBox.defaultProps = {\n    position: 'left',\n    type: 'text',\n    text: '',\n    title: null,\n    titleColor: null,\n    onTitleClick: null,\n    onForwardClick: null,\n    onReplyClick: null,\n    onReplyMessageClick: null,\n    date: new Date(),\n    data: {},\n    onClick: null,\n    onOpen: null,\n    onDownload: null,\n    onLoad: null,\n    onPhotoError: null,\n    forwarded: false,\n    reply: false,\n    status: null,\n    dateString: null,\n    notch: true,\n    avatar: null,\n    renderAddCmp: null,\n    copiableDate: false,\n    onContextMenu: null,\n    focus: false,\n    onMessageFocused: null,\n};\n\n\nexport default MessageBox;\n","import React, { Component } from 'react';\nimport './ChatItem.css';\n\nimport Avatar from '../Avatar/Avatar';\n\nimport {\n    format,\n} from'timeago.js';\n\nimport classNames from 'classnames';\n\nexport class ChatItem extends Component {\n\n    render() {\n        const statusColorType = this.props.statusColorType;\n\n        return (\n            <div\n                className={classNames('rce-container-citem', this.props.className)}\n                onClick={this.props.onClick}\n                onContextMenu={this.props.onContextMenu}>\n                <div className=\"rce-citem\">\n                    <div className={classNames(\n                            \"rce-citem-avatar\",\n                            {\n                                'rce-citem-status-encircle': statusColorType === 'encircle',\n                            }\n                        )}>\n                        <Avatar\n                            src={this.props.avatar}\n                            alt={this.props.alt}\n                            className={statusColorType === 'encircle' ? 'rce-citem-avatar-encircle-status' : ''}\n                            size=\"large\"\n                            letterItem={this.props.letterItem}\n                            sideElement={\n                                this.props.statusColor &&\n                                <span\n                                    className='rce-citem-status'\n                                    style={statusColorType === 'encircle' ? {\n                                        boxShadow: `inset 0 0 0 2px ${this.props.statusColor}, inset 0 0 0 5px #FFFFFF`\n                                    } : {\n                                        backgroundColor: this.props.statusColor,\n                                    }}>\n                                    {this.props.statusText}\n                                </span>\n                            }\n                            onError={this.props.onAvatarError}\n                            lazyLoadingImage={this.props.lazyLoadingImage}\n                            type={classNames('circle', {'flexible': this.props.avatarFlexible})}/>\n                    </div>\n\n                    <div className=\"rce-citem-body\">\n                        <div className=\"rce-citem-body--top\">\n                            <div className=\"rce-citem-body--top-title\">\n                                {this.props.title}\n                            </div>\n                            <div className=\"rce-citem-body--top-time\">\n                                {\n                                    this.props.date &&\n                                    !isNaN(this.props.date) &&\n                                    (\n                                        this.props.dateString ||\n                                        format(this.props.date)\n                                    )\n                                }\n                            </div>\n                        </div>\n\n                        <div className=\"rce-citem-body--bottom\">\n                            <div className=\"rce-citem-body--bottom-title\">\n                                {this.props.subtitle}\n                            </div>\n                            <div className=\"rce-citem-body--bottom-status\">\n                                {\n                                    this.props.unread > 0 &&\n                                    <span>{this.props.unread}</span>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatItem.defaultProps = {\n    id: '',\n    onClick: null,\n    avatar: '',\n    avatarFlexible: false,\n    alt: '',\n    title: '',\n    subtitle: '',\n    date: new Date(),\n    unread: 0,\n    statusColor: null,\n    statusColorType: 'badge',\n    statusText: null,\n    dateString: null,\n    lazyLoadingImage: undefined,\n    onAvatarError: () => void(0),\n}\n\nexport default ChatItem;\n","import React, { Component } from 'react';\nimport './ChatList.css';\n\nimport ChatItem from '../ChatItem/ChatItem';\n\nconst classNames = require('classnames');\n\nexport class ChatList extends Component {\n\n    onClick(item, i, e) {\n        if (this.props.onClick instanceof Function)\n            this.props.onClick(item, i, e);\n    }\n\n    onContextMenu(item, i, e) {\n        e.preventDefault();\n        if (this.props.onContextMenu instanceof Function)\n            this.props.onContextMenu(item, i, e);\n    }\n\n    onAvatarError(item, i, e) {\n        if (this.props.onAvatarError instanceof Function)\n            this.props.onAvatarError(item, i, e);\n    }\n\n    render() {\n        return (\n            <div\n                ref={this.props.cmpRef}\n                className={classNames('rce-container-clist', this.props.className)}>\n                {\n                    this.props.dataSource.map((x, i) => (\n                        <ChatItem\n                            id={x.id || i}\n                            key={i}\n                            lazyLoadingImage={this.props.lazyLoadingImage}\n                            {...x}\n                            onAvatarError={(e) => this.onAvatarError(x, i, e)}\n                            onContextMenu={(e) => this.onContextMenu(x, i, e)}\n                            onClick={(e) => this.onClick(x, i, e)}/>\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nChatList.defaultProps = {\n    dataSource: [],\n    onClick: null,\n    lazyLoadingImage: undefined,\n};\n\nexport default ChatList;\n","import React, { Component, } from 'react';\nimport './MessageList.css';\n\nimport MessageBox from '../MessageBox/MessageBox';\n\nimport FaChevronDown from 'react-icons/lib/fa/chevron-down';\n\nconst classNames = require('classnames');\n\nexport class MessageList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            scrollBottom: 0,\n            downButton: false,\n        };\n\n        this.loadRef = this.loadRef.bind(this);\n        this.onScroll = this.onScroll.bind(this);\n    }\n\n    checkScroll() {\n        var e = this.mlistRef;\n        if (!e)\n            return;\n\n        if (this.props.toBottomHeight === '100%' || this.state.scrollBottom < this.props.toBottomHeight) {\n            // scroll to bottom\n            e.scrollTop = e.scrollHeight;\n        } else {\n            if (this.props.lockable === true) {\n                e.scrollTop = e.scrollHeight - e.offsetHeight - this.state.scrollBottom;\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (!this.mlistRef)\n            return;\n        if (nextProps.dataSource.length !== this.props.dataSource.length) {\n            this.setState({\n                scrollBottom: this.getBottom(this.mlistRef),\n            }, this.checkScroll.bind(this));\n        }\n    }\n\n    getBottom(e) {\n        return e.scrollHeight - e.scrollTop - e.offsetHeight;\n    }\n\n    onOpen(item, i, e) {\n        if (this.props.onOpen instanceof Function)\n            this.props.onOpen(item, i, e);\n    }\n\n    onDownload(item, i, e) {\n        if (this.props.onDownload instanceof Function)\n            this.props.onDownload(item, i, e);\n    }\n\n    onPhotoError(item, i, e) {\n      if (this.props.onPhotoError instanceof Function)\n        this.props.onPhotoError(item, i, e);\n    }\n\n    onClick(item, i, e) {\n        if (this.props.onClick instanceof Function)\n            this.props.onClick(item, i, e);\n    }\n\n    onTitleClick(item, i, e) {\n        if (this.props.onTitleClick instanceof Function)\n            this.props.onTitleClick(item, i, e);\n    }\n\n    onForwardClick(item, i, e) {\n        if (this.props.onForwardClick instanceof Function)\n            this.props.onForwardClick(item, i, e);\n    }\n\n    onReplyClick(item, i, e) {\n        if (this.props.onReplyClick instanceof Function)\n            this.props.onReplyClick(item, i, e);\n    }\n\n    onReplyMessageClick(item, i, e) {\n        if (this.props.onReplyMessageClick instanceof Function)\n            this.props.onReplyMessageClick(item, i, e);\n    }\n\n    onContextMenu(item, i, e) {\n        if (this.props.onContextMenu instanceof Function)\n            this.props.onContextMenu(item, i, e);\n    }\n\n    onMessageFocused(item, i, e) {\n        if (this.props.onMessageFocused instanceof Function)\n            this.props.onMessageFocused(item, i, e);\n    }\n\n    onMeetingMessageClick(item, i, e) {\n        if (this.props.onMeetingMessageClick instanceof Function)\n            this.props.onMeetingMessageClick(item, i, e);\n    }\n\n    loadRef(ref) {\n        this.mlistRef = ref;\n        if (this.props.cmpRef instanceof Function)\n            this.props.cmpRef(ref);\n    }\n\n    onScroll(e) {\n        var bottom = this.getBottom(e.target);\n        this.state.scrollBottom = bottom;\n        if (this.props.toBottomHeight === '100%' || bottom > this.props.toBottomHeight) {\n            if (this.state.downButton !== true) {\n                this.state.downButton = true;\n                this.setState({\n                    downButton: true,\n                    scrollBottom: bottom,\n                });\n            }\n        } else {\n            if (this.state.downButton !== false) {\n                this.state.downButton = false;\n                this.setState({\n                    downButton: false,\n                    scrollBottom: bottom,\n                });\n            }\n        }\n\n        if (this.props.onScroll instanceof Function) {\n            this.props.onScroll(e);\n        }\n    }\n\n    toBottom(e) {\n        if(!this.mlistRef)\n            return;\n        this.mlistRef.scrollTop = this.mlistRef.scrollHeight;\n        if (this.props.onDownButtonClick instanceof Function) {\n            this.props.onDownButtonClick(e);\n        }\n    }\n\n    render() {\n        return (\n            <div\n                className={classNames(['rce-container-mlist', this.props.className])}>\n                <div\n                    ref={this.loadRef}\n                    onScroll={this.onScroll}\n                    className='rce-mlist'>\n                    {\n                        this.props.dataSource.map((x, i) => (\n                            <MessageBox\n                                key={i}\n                                {...x}\n                                onOpen={this.props.onOpen && ((e) => this.onOpen(x, i, e))}\n                                onPhotoError={this.props.onPhotoError && ((e) => this.onPhotoError(x, i, e))}\n                                onDownload={this.props.onDownload && ((e) => this.onDownload(x, i, e))}\n                                onTitleClick={this.props.onTitleClick && ((e) => this.onTitleClick(x, i, e))}\n                                onForwardClick={this.props.onForwardClick && ((e) => this.onForwardClick(x, i, e))}\n                                onReplyClick={this.props.onReplyClick && ((e) => this.onReplyClick(x, i, e))}\n                                onReplyMessageClick={this.props.onReplyMessageClick && ((e) => this.onReplyMessageClick(x, i, e))}\n                                onClick={this.props.onClick && ((e) => this.onClick(x, i, e))}\n                                onContextMenu={this.props.onContextMenu && ((e) => this.onContextMenu(x, i, e))}\n                                onMessageFocused={this.props.onMessageFocused && ((e) => this.onMessageFocused(x, i, e))}\n                                onMeetingMessageClick={this.props.onMeetingMessageClick && ((e) => this.onMeetingMessageClick(x, i, e))}\n                                onMeetingTitleClick={this.props.onMeetingTitleClick}\n                                onMeetingVideoLinkClick={this.props.onMeetingVideoLinkClick}\n                            />\n                        ))\n                    }\n                </div>\n                {\n                    this.props.downButton === true &&\n                    this.state.downButton &&\n                    this.props.toBottomHeight !== '100%' &&\n                    <div\n                        className='rce-mlist-down-button'\n                        onClick={this.toBottom.bind(this)}>\n                        <FaChevronDown/>\n                        {\n                            this.props.downButtonBadge &&\n                            <span\n                                className='rce-mlist-down-button--badge'>\n                                {this.props.downButtonBadge}\n                            </span>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nMessageList.defaultProps = {\n    onClick: null,\n    onTitleClick: null,\n    onForwardClick: null,\n    onReplyClick: null,\n    onReplyMessageClick: null,\n    onMeetingMessageClick: null,\n    onDownButtonClick: null,\n    onOpen: null,\n    onPhotoError: null,\n    onDownload: null,\n    dataSource: [],\n    lockable: false,\n    toBottomHeight: 300,\n    downButton: true,\n    downButtonBadge: null,\n};\n\nexport default MessageList;\n","import React, { Component } from 'react';\nimport './Input.css';\n\nconst classNames = require('classnames');\n\nexport class Input extends Component {\n    onChange(e) {\n        if (this.props.maxlength && (e.target.value || '').length > this.props.maxlength) {\n            if (this.props.onMaxLengthExceed instanceof Function)\n                this.props.onMaxLengthExceed();\n\n            this.input.value = (e.target.value || '').substring(0, this.props.maxlength);\n            return;\n        }\n\n        if (this.props.onChange instanceof Function)\n            this.props.onChange(e);\n\n        if (this.props.multiline === true) {\n            if (this.props.autoHeight === true) {\n                if (e.target.style.height !== this.props.minHeight + 'px') {\n                    e.target.style.height = this.props.minHeight + 'px';\n                }\n\n                let height;\n                if (e.target.scrollHeight <= this.props.maxHeight)\n                    height = e.target.scrollHeight + 'px';\n                else\n                    height = this.props.maxHeight + 'px';\n\n                if (e.target.style.height !== height) {\n                    e.target.style.height = height;\n                }\n            }\n        }\n    }\n\n    clear() {\n        var event = {\n            FAKE_EVENT: true,\n            target: this.input,\n        };\n\n        if (this.input.value) {\n            this.input.value = '';\n        }\n\n        this.onChange(event);\n    }\n\n    componentDidMount() {\n        if (this.props.autofocus === true)\n            this.input.focus();\n    }\n\n    render() {\n        return (\n            <div className={classNames('rce-container-input', this.props.className)}>\n                {\n                    this.props.leftButtons &&\n                    <div className='rce-input-buttons'>\n                        {this.props.leftButtons}\n                    </div>\n                }\n                {\n                    this.props.multiline === false ?\n                    <input\n                        ref={(ref) => {\n                            if (this.props.inputRef instanceof Function)\n                                this.props.inputRef(ref);\n                            this.input = ref;\n                        }}\n                        type={this.props.type}\n                        className={classNames('rce-input')}\n                        placeholder={this.props.placeholder}\n                        defaultValue={this.props.defaultValue}\n                        style={this.props.inputStyle}\n                        onChange={this.onChange.bind(this)}\n                        onCopy={this.props.onCopy}\n                        onCut={this.props.onCut}\n                        onPaste={this.props.onPaste}\n                        onBlur={this.props.onBlur}\n                        onFocus={this.props.onFocus}\n                        onSelect={this.props.onSelect}\n                        onSubmit={this.props.onSubmit}\n                        onReset={this.props.onReset}\n                        onKeyDown={this.props.onKeyDown}\n                        onKeyPress={this.props.onKeyPress}\n                        onKeyUp={this.props.onKeyUp}/>\n                    :\n                    <textarea\n                        ref={(ref) => {\n                            if (this.props.inputRef instanceof Function)\n                                this.props.inputRef(ref);\n                            this.input = ref;\n                        }}\n                        type={this.props.type}\n                        className={classNames('rce-input', 'rce-input-textarea')}\n                        placeholder={this.props.placeholder}\n                        defaultValue={this.props.defaultValue}\n                        style={this.props.inputStyle}\n                        onChange={this.onChange.bind(this)}\n                        onCopy={this.props.onCopy}\n                        onCut={this.props.onCut}\n                        onPaste={this.props.onPaste}\n                        onBlur={this.props.onBlur}\n                        onFocus={this.props.onFocus}\n                        onSelect={this.props.onSelect}\n                        onSubmit={this.props.onSubmit}\n                        onReset={this.props.onReset}\n                        onKeyDown={this.props.onKeyDown}\n                        onKeyPress={this.props.onKeyPress}\n                        onKeyUp={this.props.onKeyUp}></textarea>\n                }\n                {\n                    this.props.rightButtons &&\n                    <div className='rce-input-buttons'>\n                        {this.props.rightButtons}\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nInput.defaultProps = {\n    type: 'text',\n    placeholder: '',\n    defaultValue: '',\n    onChange: null,\n    rightButtons: null,\n    leftButtons: null,\n    multiline: false,\n    minHeight: 25,\n    maxHeight: 200,\n    autoHeight: true,\n    inputStyle: null,\n    inputRef: null,\n    maxlength: null,\n    onMaxLengthExceed: null,\n    autofocus: false,\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport './Button.css';\n\nconst classNames = require('classnames');\n\nexport class Button extends Component {\n    render() {\n        return (\n            <button\n                ref={this.props.buttonRef}\n                title={this.props.title}\n                className={classNames('rce-button', this.props.type, this.props.className)}\n                style={{\n                    backgroundColor: this.props.backgroundColor,\n                    color: this.props.color,\n                    borderColor: this.props.backgroundColor\n                }}\n                disabled={this.props.disabled}\n                onClick={this.props.onClick}>\n                {\n                    this.props.icon ?\n                        <span className='rce-button-icon--container'>\n                            {(this.props.icon.float === 'right' || !this.props.icon.float) && <span>{this.props.text}</span>}\n\n                            <span style={{ float: this.props.icon.float, fontSize: this.props.icon.size || 12 }} className='rce-button-icon'>{this.props.icon.component}</span>\n\n                            {this.props.icon.float === 'left' && <span>{this.props.text}</span>}\n                        </span>\n                        : <span>{this.props.text}</span>\n                }\n            </button>\n        );\n    }\n}\n\nButton.defaultProps = {\n    text: '',\n    disabled: false,\n    type: null,\n    icon: null,\n    backgroundColor: '#3979aa',\n    color: 'white',\n    className: null,\n    buttonRef: null,\n    title: null,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport './Navbar.css';\n\nconst classNames = require('classnames');\n\nexport class Navbar extends Component {\n    render() {\n        return (\n            <div className={classNames('rce-navbar', this.props.type, this.props.className)}>\n                <div className=\"rce-navbar-item rce-navbar-item__left\">\n                    {this.props.left}\n                </div>\n                <div className=\"rce-navbar-item rce-navbar-item__center\">\n                    {this.props.center}\n                </div>\n                <div className=\"rce-navbar-item rce-navbar-item__right\">\n                    {this.props.right}\n                </div>\n            </div>\n        );\n    }\n}\n\nNavbar.defaultProps = {\n    left: null,\n    center: null,\n    right: null,\n    type:'light'\n};\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport './Dropdown.css';\n\nimport Button from '../Button/Button';\n\nconst classNames = require('classnames');\n\nexport class Dropdown extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: undefined,\n        };\n    }\n\n    onBlur(e) {\n        if (this.state.show === true)\n            this.setState({show: false});\n    }\n\n    render() {\n        return (\n            <div className={classNames('rce-dropdown-container', this.props.className)} onBlur={this.onBlur.bind(this)}>\n                {\n                    <Button\n                        {...this.props.buttonProps}\n                        onClick={() => this.setState({ show: !this.state.show })} />\n                }\n                <div\n                    className={classNames(\n                        'rce-dropdown',\n                        this.props.animationType,\n                        'rce-dropdown-open__' + this.props.animationPosition,\n                        { 'dropdown-hide': this.state.show === false },\n                        { 'dropdown-show': this.state.show === true })}>\n\n                        <ul>\n                            {\n                                this.props.title &&\n                                <span className='rce-dropdown-title'>{this.props.title}</span>\n                            }\n                            {\n                                this.props.items.map((x, i) => (\n                                    <li key={i} onMouseDown={(e) => this.props.onSelect(i)}>\n                                        {\n                                            x instanceof Object ?\n                                                x.icon ?\n                                                    <span className='rce-button-icon--container'>\n                                                        {(x.icon.float === 'right' || !x.icon.float) && <a>{x.text}</a>}\n\n                                                        <span style={{ float: x.icon.float, color: x.icon.color, fontSize: x.icon.size || 12 }} className={classNames('rce-button-icon', x.icon.className)}>{x.icon.component}</span>\n\n                                                        {x.icon.float === 'left' && <a>{x.text}</a>}\n                                                    </span>\n                                                    : <a>{x.text}</a>\n                                            :\n                                            <a>{x}</a>\n                                        }\n                                    </li>\n                                ))\n                            }\n                        </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nDropdown.defaultProps = {\n    animationType: 'default',\n    animationPosition: 'nortwest',\n    items: [],\n    onSelect: Function,\n    buttonProps: null\n};\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport './SideBar.css';\n\nconst classNames = require('classnames');\n\nexport class SideBar extends Component {\n    render() {\n        return (\n            <div className={classNames('rce-sbar', this.props.type, this.props.className)}>\n                <div className=\"rce-sbar-item\">\n                    {this.props.top}\n                </div>\n                <div className=\"rce-sbar-item rce-sbar-item__center\">\n                    {this.props.center}\n                </div>\n                <div className=\"rce-sbar-item\">\n                    {this.props.bottom}\n                </div>\n            </div>\n        );\n    }\n}\n\nSideBar.defaultProps = {\n    top: null,\n    center: null,\n    bottom: null,\n    type: 'dark',\n}\n\nexport default SideBar;\n","import React, { Component } from 'react';\nimport './Popup.css';\n\nimport Button from '../Button/Button';\n\nconst classNames = require('classnames');\n\nexport class Popup extends Component {\n    render() {\n        if (this.props.show === true)\n        return (\n            <div className={classNames('rce-popup-wrapper', this.props.type, this.props.className)}>\n                <div className=\"rce-popup\">\n                    {\n                        this.props.renderHeader ?\n                            <div className=\"rce-popup-header\">\n                                {this.props.renderHeader()}\n                            </div>\n                        :\n                        <div className=\"rce-popup-header\">\n                            <span>{this.props.header}</span>\n                            {\n                                this.props.header &&\n                                this.props.headerButtons.map((x, i) => (\n                                    <Button\n                                        key={i}\n                                        {...x}/>\n                                ))\n                            }\n                        </div>\n                    }\n                    <div className=\"rce-popup-content\" style={{color: this.props.color}}>\n                        {\n                            this.props.renderContent ?\n                                this.props.renderContent()\n                            :\n                            this.props.text\n                        }\n                    </div>\n                    <div className=\"rce-popup-footer\">\n                        {\n                            this.props.renderFooter ?\n                                this.props.renderFooter()\n                            :\n                            this.props.footerButtons.map((x, i) => (\n                                <Button\n                                    key={i}\n                                    {...x}/>\n                            ))\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n        return null;\n    }\n}\n\nPopup.defaultProps = {\n    show: false,\n    header: null,\n    text: null,\n    headerButtons: [],\n    footerButtons: [],\n    renderHeader: null,\n    renderContent: null,\n    renderFooter: null,\n    color: '#333',\n};\n\nexport default Popup;\n","import React, { Component } from 'react';\nimport './MeetingItem.css';\n\nimport MdVideoCall from 'react-icons/lib/md/video-call';\nimport MdLink from 'react-icons/lib/md/link';\nimport MdCall from 'react-icons/lib/md/call';\n\nimport Avatar from '../Avatar/Avatar';\n\nimport {\n    format,\n} from'timeago.js';\n\nimport classNames from 'classnames';\n\nexport class MeetingItem extends Component {\n\n    render() {\n        const statusColorType = this.props.statusColorType;\n        const AVATAR_LIMIT = this.props.avatarLimit;\n\n        const dateText = this.props.date && !isNaN(this.props.date) && (\n            this.props.dateString ||\n            format(this.props.date)\n        );\n\n        const subject = this.props.subject.substring(0, this.props.subjectLimit) + (this.props.subject.length > this.props.subjectLimit ? '...' : '');\n\n        return (\n            <div\n                className={classNames('rce-container-mtitem', this.props.className)}\n                onClick={this.props.onClick}\n                onContextMenu={this.props.onContextMenu}>\n                <div className=\"rce-mtitem\">\n                    <div className=\"rce-mtitem-top\">\n                        <div className=\"rce-mtitem-subject\">\n                            {subject}\n                        </div>\n                        <div\n                            className=\"rce-mtitem-share\"\n                            onClick={this.props.onShareClick}>\n                            <MdLink />\n                        </div>\n                    </div>\n                    <div className=\"rce-mtitem-body\">\n                        <div className=\"rce-mtitem-body--avatars\">\n                            {\n                                this.props.avatars.slice(0, AVATAR_LIMIT).map((x, i) => x instanceof Avatar ? x : (\n                                    <Avatar\n                                        key={i}\n                                        src={x.src}\n                                        alt={x.alt}\n                                        className={x.statusColorType === 'encircle' ? 'rce-mtitem-avatar-encircle-status' : ''}\n                                        size={'small'}\n                                        letterItem={x.letterItem}\n                                        sideElement={\n                                            x.statusColor &&\n                                            <span\n                                                className='rce-mtitem-status'\n                                                style={statusColorType === 'encircle' ? {\n                                                    boxShadow: `inset 0 0 0 2px ${x.statusColor}, inset 0 0 0 5px #FFFFFF`\n                                                } : {\n                                                    backgroundColor: x.statusColor,\n                                                }}>\n                                                {x.statusText}\n                                            </span>\n                                        }\n                                        onError={this.props.onAvatarError}\n                                        lazyLoadingImage={this.props.lazyLoadingImage}\n                                        type={classNames('circle', {'flexible': this.props.avatarFlexible})}/>\n                                ))\n                            }\n\n                            {\n                                this.props.avatars.length > AVATAR_LIMIT &&\n                                <div className='rce-avatar-container circle small rce-mtitem-letter'>\n                                    <span>\n                                        {'+' + (this.props.avatars.length - AVATAR_LIMIT)}\n                                    </span>\n                                </div>\n                            }\n                        </div>\n                        <div className=\"rce-mtitem-body--functions\">\n                            {\n                                this.props.closable &&\n                                <div\n                                    className=\"rce-mtitem-closable\"\n                                    onClick={this.props.onCloseClick}>\n                                    <MdCall />\n                                </div>\n                            }\n                            <div\n                                className='rce-mtitem-button'\n                                onClick={this.props.onMeetingClick}>\n                                <MdVideoCall />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"rce-mtitem-footer\">\n                        <span className='rce-mtitem-date'>\n                            {dateText}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMeetingItem.defaultProps = {\n    id: '',\n    subject: '',\n    subjectLimit: 60,\n    onClick: null,\n    avatarFlexible: false,\n    alt: '',\n    title: '',\n    subtitle: '',\n    date: new Date(),\n    dateString: '',\n    lazyLoadingImage: undefined,\n    avatarLimit: 5,\n    avatars: [],\n    onAvatarError: () => void(0),\n    onMeetingClick: () => void(0),\n    onShareClick: () => void(0),\n}\n\nexport default MeetingItem;\n","import React, { Component } from 'react';\nimport './MeetingList.css';\n\nimport MeetingItem from '../MeetingItem/MeetingItem';\n\nconst classNames = require('classnames');\n\nexport class MeetingList extends Component {\n\n    onClick(item, i, e) {\n        if (this.props.onClick instanceof Function)\n            this.props.onClick(item, i, e);\n    }\n\n    onContextMenu(item, i, e) {\n        e.preventDefault();\n        if (this.props.onContextMenu instanceof Function)\n            this.props.onContextMenu(item, i, e);\n    }\n\n    onAvatarError(item, i, e) {\n        if (this.props.onAvatarError instanceof Function)\n            this.props.onAvatarError(item, i, e);\n    }\n\n    onMeetingClick(item, i, e) {\n        if (this.props.onMeetingClick instanceof Function)\n            this.props.onMeetingClick(item, i, e);\n    }\n\n    onShareClick(item, i, e) {\n        if (this.props.onShareClick instanceof Function)\n            this.props.onShareClick(item, i, e);\n    }\n\n    onCloseClick(item, i, e) {\n        if (this.props.onCloseClick instanceof Function)\n            this.props.onCloseClick(item, i, e);\n    }\n\n    render() {\n        return (\n            <div\n                ref={this.props.cmpRef}\n                className={classNames('rce-container-mtlist', this.props.className)}>\n                {\n                    this.props.dataSource.map((x, i) => (\n                        <MeetingItem\n                            id={x.id || i}\n                            key={i}\n                            lazyLoadingImage={this.props.lazyLoadingImage}\n                            {...x}\n                            onAvatarError={(e) => this.onAvatarError(x, i, e)}\n                            onContextMenu={(e) => this.onContextMenu(x, i, e)}\n                            onClick={(e) => this.onClick(x, i, e)}\n                            onMeetingClick={(e) => this.onMeetingClick(x, i, e)}\n                            onShareClick={(e) => this.onShareClick(x, i, e)}\n                            onCloseClick={(e) => this.onCloseClick(x, i, e)}/>\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nMeetingList.defaultProps = {\n    dataSource: [],\n    onClick: null,\n    lazyLoadingImage: undefined,\n};\n\nexport default MeetingList;\n","import React, { useState, Component, useEffect, useContext } from 'react';\nimport axios from 'axios'\n\n//Componentes del chat (es una librería que se encontró)\nimport './EstiloChat.css'\nimport {\n    ChatItem, \n    ChatList,\n    MessageList,\n    Input,\n    Button,\n    SideBar,\n} from './ComponentesChat'; \n//Material UI\nimport {IconButton, Button as Boton, LinearProgress as Cargando} from '@material-ui/core/';\nimport Alerta from '@material-ui/lab/Alert';\nimport {KeyboardReturn as Atras, StarRate, TramRounded} from '@material-ui/icons/';\n\n//Componentes\nimport AlertaSi_No from '../AlertaSi_No.js';\nimport AlertaMensaje from '../AlertaMensaje.js';\nimport you from './Miniatura.png'\nimport Estilos from '../Estilos.js'\n\n//Obtenemos el estado global de la aplicación\nimport { ObtenerEstadoAplicacion } from '../../Estados/AplicacionEstado'\n\n//Este componente nos permite implementar la interfaz de un chat en el sistema.\n//Aquí se mostrarán los chats que un usuario (proveedor o cliente) posee. Estos chats se generan cada vez que un\n//cliente contacta a un proveedor por medio de una publicación o cada vez que un proveedor contacta por medio de\n//una solicitud a un cliente\n//En cada chat se podrán enviar solamente mensajes. Si un usuario es proveedor de servicio, podrá enviar al cliente\n//(por medio de su chat) una solicitud para que este haga una reseña sobre sus servicios \nexport function Chat(){\n    const classes = Estilos();\n    const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\n    //Declaramos las viarables que se utilizarán en el componente\n    const [cargando, setcargando] = useState(false)\n    const [chats, setchats] = useState([])\n    const [chatsOrdenados, setchatsOrdenados] = useState([])\n    const [mensajes, setmensajes] = useState([]);\n    const [chatSeleccionado, setchatSeleccionado] = useState(null);\n    const [confirmacion, setconfirmacion] = useState(false);\n    const [abrir, setabrir] = useState(false);\n    const [deshabilitado, setdeshabilitado] = useState(false);\n    const [contenido, setcontenido] = useState(\"\");\n    const [atras, setatras] = useState(false);\n    \n    //Cuando se renderiza por primera vez el componente Chat.js, se ejecuta la siguiente función\n    useEffect(()=>{\n        let auth = 'Bearer '+state.jwt;\n        setcargando(true)\n        if(state.jwt!==\"\"){\n            //Se obtienen todos lso chats del sistema y se filtran según el usuario que está logueado en el sistema,\n            //de forma tal que  podemos listar los chats de este\n            axios.get(state.servidor+\"/api/chats/\",{\n                headers: {'Authorization': auth},\n              })\n            .then(response => {\n                //Obtenemos todos los chats del sistema y filtramos segun el id de receptor o emisor\n                let chats_ = response.data.filter(chat => (chat.receptor.id === state.datosSesion.id || chat.emisor.id === state.datosSesion.id))\n                \n                setchats(chats_.map((chat)=>{\n                    //Obtenemos en una sola variable el nombre y apellido concatenados\n                    let emisor = `${chat.emisor.nombre} ${chat.emisor.apellido}`\n                    let receptor = `${chat.receptor.nombre} ${chat.receptor.apellido}`\n                    //Si el emisor o receptor no tienen imagenes de perfil, entonces mostramos una predeterminada (el logo de Servia)\n                    let img_emisor = chat.emisor.imagen_perfil===null?state.imagen_predeterminada:state.servidor+chat.emisor.imagen_perfil.url\n                    let img_receptor = chat.receptor.imagen_perfil===null?state.imagen_predeterminada:state.servidor+chat.receptor.imagen_perfil.url\n                    \n                    //Establecemos el objeto de mensaje (de la interfaz), con los mensajes del respectivo chat\n                    let msjs = chat.mensajes.map((mensaje)=>({\n                        position: mensaje.enviado_por?'right':'left',\n                        forwarded: false,\n                        replyButton: false,\n                        reply: null,\n                        meeting: null,\n                        type: \"text\",\n                        theme: 'white',\n                        view: 'list',\n                        title: mensaje.enviado_por?emisor:receptor,\n                        titleColor: \"#EB7887\",\n                        text: mensaje.contenido,\n                        onLoad: () => {\n                            console.log('Photo loaded');\n                        },\n                        status: null,\n                        date: new Date(mensaje.created_at),\n                        onReplyMessageClick: () => {\n                            console.log('onReplyMessageClick');\n                        },\n                        avatar: mensaje.enviado_por?img_emisor:img_receptor,\n                    }\n                    ))\n                    let img_categoria = null\n                    let img_solicitud = null\n                    //Como la generación de un chat puede estar referido al contacto por medio de una solicitud,\n                    //o por medio de un perfil, necesitamos saber cual es la situación, entonces, sabiendo que si\n                    //solicitud es null, entonces el chat se ha generado por medio de un perfil y viceversa.\n                    if (chat.solicitud===null){\n                        img_categoria = chat.categoria.imagen===null?state.imagen_predeterminada:state.servidor+chat.categoria.imagen.url\n                    }else{\n                        img_solicitud = chat.solicitud.imagenes.length===0?state.imagen_predeterminada:state.servidor+chat.solicitud.imagenes[0].url\n                    }\n                    \n                    return {\n                        chat:{\n                            id: chat.id,\n                            avatar: chat.solicitud===null?img_categoria:img_solicitud,\n                            avatarFlexible: true,\n                            statusColor: 'lightgreen',\n                            statusColorType: 'encircle',\n                            alt: \"Imagen de perfil\",\n                            title: chat.solicitud===null?chat.categoria.nombre:chat.solicitud.titulo,\n                            date: new Date(chat.mensajes[chat.mensajes.length-1].created_at),\n                            subtitle: chat.mensajes[chat.mensajes.length-1].contenido,\n                            unread: state.datosSesion.id===chat.emisor.id?chat.noleido_emisor:chat.noleido_receptor,\n                            mensajes: msjs,\n                            emisor: chat.emisor,\n                            receptor: chat.receptor,\n                            noleido_emisor: chat.noleido_emisor,\n                            noleido_receptor: chat.noleido_receptor,\n                            categoria: chat.categoria,\n                            solicitud: chat.solicitud,\n                            peticion: chat.peticion\n                        }\n                    }\n                }))\n                setcargando(false)\n            })\n            .catch(error => {\n                console.log(\"Un error ha ocurrido al cargar los chats.\")\n                console.log(error.response)\n            }) \n        }\n    },[state.jwt])\n\n    //Cuando obtenemos todos los chats del usuario logueado, para no dejar un espacio vacío en el lugar donde\n    //se encuentran los mensajes de un chat, seleccionamos el primer chat para mostrar su contenido.\n    //Esto es mejor cambiarlo, mostrando otra cosa en lugar de un chat.\n    useEffect(()=>{\n        if(chats.length!==0){\n            setchatSeleccionado(chats[0].chat)\n            setmensajes(chats[0].chat.mensajes)\n        }\n    },[chats])\n\n    //Cuando se envia una petición de reseña, entonces se pone desabilitado en true\n    useEffect(() => {\n        if (chatSeleccionado!==null && chatSeleccionado.peticion)\n            setdeshabilitado(true)\n    }, [chatSeleccionado])\n\n    //Cuando se selecciona un chat, hay que actualizar los mensajes con los del chat seleccionado, el siguiente método hace eso.\n    function actualizarMensajes(chat){\n        if(!cargando){\n            setcargando(true)\n            setmensajes(chat.mensajes)//Se setean los mensajes del chat seleccioando\n            setchatSeleccionado(chat)//Se setea el chat seleccionado en una nueva variable para poder utilizar su información en otros lugares\n            setatras(false)\n            let auth = 'Bearer '+state.jwt;\n\n            //Si abrimos el chat debemos actualizar el valor de los mensajes no leidos a 0\n            let obj_leido = {}\n            if(state.datosSesion.id===chat.emisor.id){\n                obj_leido[\"noleido_emisor\"] = 0\n            }else{\n                obj_leido[\"noleido_receptor\"] = 0\n            }\n            axios.put(state.servidor+\"/api/chats/\"+chat.id,obj_leido,{\n                headers: {'Authorization': auth},\n            }).then(response => {\n            })\n            //-----------------------------------------------------------------------------------//\n\n            //Buscamos todos los mensajes del chat seleccionado\n            axios.get(state.servidor+\"/api/chats/\"+chat.id,{\n                headers: {'Authorization': auth},\n            })\n            .then(response => {\n                //Obtenemos en una sola variable el nombre y apellido concatenados\n                let emisor = `${response.data.emisor.nombre} ${response.data.emisor.apellido}`\n                let receptor = `${response.data.receptor.nombre} ${response.data.receptor.apellido}`\n                //Si el emisor o receptor no tienen imagenes de perfil, entonces mostramos una predeterminada (el logo de Servia)\n                let img_emisor = response.data.emisor.imagen_perfil===null?state.imagen_predeterminada:state.servidor+response.data.emisor.imagen_perfil.url\n                let img_receptor = response.data.receptor.imagen_perfil===null?state.imagen_predeterminada:state.servidor+response.data.receptor.imagen_perfil.url\n                \n                //Establecemos el objeto de mensaje (de la interfaz), con los mensajes del respectivo chat\n                let msjs = response.data.mensajes.map((mensaje, i)=>({\n                    position: mensaje.enviado_por?'right':'left',\n                    forwarded: false,\n                    replyButton: false,\n                    reply: null,\n                    meeting: null,\n                    type: \"text\",\n                    theme: 'white',\n                    view: 'list',\n                    title: mensaje.enviado_por?emisor:receptor,\n                    titleColor: \"#EB7887\",\n                    text: mensaje.contenido,\n                    onLoad: () => {\n                        console.log('Photo loaded');\n                    },\n                    status: null,\n                    date: new Date(mensaje.created_at),\n                    onReplyMessageClick: () => {\n                        console.log('onReplyMessageClick');\n                    },\n                    avatar: mensaje.enviado_por?img_emisor:img_receptor,\n                }\n                ))\n                setmensajes(msjs)//Actualizamos los mensajes y demás variables\n                setdeshabilitado(response.data.peticion)\n                setcargando(false)\n            })\n            .catch(error => {\n                console.log(\"Un error ha ocurrido al cargar los mensajes.\")\n                console.log(error.response)\n            }) \n        }\n    }\n\n    //Función que se ejecuta cuando se envia un mensaje a un chat\n    function agregarMensaje() {\n        let auth = 'Bearer '+state.jwt;\n        if(chatSeleccionado!==null){\n            let emisor = `${chatSeleccionado.emisor.nombre} ${chatSeleccionado.emisor.apellido}`\n            let receptor = `${chatSeleccionado.receptor.nombre} ${chatSeleccionado.receptor.apellido}`\n            let img_emisor = chatSeleccionado.emisor.imagen_perfil===null?state.imagen_predeterminada:state.servidor+chatSeleccionado.emisor.imagen_perfil.url\n            let img_receptor = chatSeleccionado.receptor.imagen_perfil===null?state.imagen_predeterminada:state.servidor+chatSeleccionado.receptor.imagen_perfil.url\n\n            //Se actualiza el arreglo de mensajes\n            setmensajes([...mensajes, {\n                position: state.datosSesion.id===chatSeleccionado.emisor.id?'right':'left',\n                forwarded: false,\n                replyButton: false,\n                reply: null,\n                meeting: null,\n                type: \"text\",\n                theme: 'white',\n                view: 'list',\n                title: state.datosSesion.id===chatSeleccionado.emisor.id?emisor:receptor,\n                titleColor: \"#EB7887\",\n                text: contenido,\n                onLoad: () => {\n                    console.log('Photo loaded');\n                },\n                status: null,\n                date: new Date(),\n                onReplyMessageClick: () => {\n                    console.log('onReplyMessageClick');\n                },\n                avatar: state.datosSesion.id===chatSeleccionado.emisor.id?img_emisor:img_receptor,\n            }])\n            //Se envía un nuevo mensaje al emisor o receptor\n            axios.post(state.servidor+\"/api/mensajes/\",{\n                chat: chatSeleccionado.id,\n                enviado_por: state.datosSesion.id===chatSeleccionado.emisor.id,\n                contenido: contenido,\n            },{\n                headers: {'Authorization': auth},\n            })\n            .then(response => {\n            })\n            .catch(error => {\n                console.log(\"Un error ha ocurrido al cargar los mensajes.\")\n                console.log(error.response)\n            }) \n\n            //------------------------------------------------------------------------\n            let obj_noleido = {}\n            //Si se envia un mensaje, entonces aumentamos la cantidad de mensajes no leidos, ya sea del receptor como emisor\n            if(state.datosSesion.id===chatSeleccionado.emisor.id){\n                //Si el emisor es el usuario logueado, entonces aumentamos la cantidad de mensajes no leidos al receptor\n                obj_noleido[\"noleido_receptor\"] = chatSeleccionado.noleido_receptor+1\n                let vari = chatSeleccionado\n                vari.noleido_receptor++\n                setchatSeleccionado(vari)\n            }else{\n                //Si el receptor es el usuario logueado, entonces aumentamos la cantidad de mensajes no leidos al emisor\n                obj_noleido[\"noleido_emisor\"]= chatSeleccionado.noleido_emisor+1\n                let vari = chatSeleccionado\n                vari.noleido_receptor++\n                setchatSeleccionado(vari)\n            }\n            axios.put(state.servidor+\"/api/chats/\"+chatSeleccionado.id,obj_noleido,{\n                headers: {'Authorization': auth},\n            }).then(response => {\n            })\n        }\n    }\n\n    //Cuando la variable chats cambia, entonces reordenamos los chats según el tiempo\n    useEffect(() => {\n        if (chats.length!==0){\n            console.log(chats.sort((a, b) => a.chat.mensajes[a.chat.mensajes.length-1].date.getTime() > b.chat.mensajes[b.chat.mensajes.length-1].date.getTime()))\n        }\n    }, [chats])\n\n    //Se envia una notificación a un usuario indicando de que un proveedor le está solicitando una reseña de un servicio\n    function enviarNotificacion(boole){\n        setconfirmacion(false)\n        if (boole){\n            let auth = 'Bearer '+state.jwt;\n            //Seteamos los ids de emisores y receptores de la notificación\n            let emisor = chatSeleccionado.receptor.id\n            let receptor = chatSeleccionado.emisor.id\n            \n            if (chatSeleccionado.solicitud!==null){\n                //Si el tipo de la solicitud es false, significa que es una solicitud y que el emisor de la notificación es el emisor del chat\n                if (!chatSeleccionado.solicitud.tipo){\n                    emisor = chatSeleccionado.emisor.id\n                    receptor = chatSeleccionado.receptor.id\n                }\n            }\n            axios.post(\n                //Se establecen los datos de la notificación\n                state.servidor+\"/api/notificaciones/\",{\n                    tipo: 2,\n                    emisor: emisor,\n                    receptor: receptor,\n                    solicitud: chatSeleccionado.solicitud===null?null:chatSeleccionado.solicitud.id,\n                    datos_notificacion: chatSeleccionado.categoria===null?\"\":String(chatSeleccionado.categoria.id+\"_\"+chatSeleccionado.categoria.nombre),\n                    leido: false\n                },\n                {headers: {'Authorization': auth},})\n            .then(response => {\n                let auth = 'Bearer '+state.jwt;\n\n                //Actualizamos el estado de la petición del chat, para que el botón de enviar solicitud esté bloqueado\n                axios.put(state.servidor+\"/api/chats/\"+chatSeleccionado.id,{\n                    peticion: true\n                },{\n                    headers: {'Authorization': auth},\n                }).then(response => {\n                    setdeshabilitado(true)\n                })\n                setabrir(true)\n            })\n            .catch(error => {\n                console.log(\"Error, no se ha podido crear la notificacion.\", error.response)\n                console.log(\"Error, no se ha podido crear la notificacion.\")\n            })\n        }\n    }\n\n    return (\n        <div className='container' >\n            <div className='chat-list' className={atras?classes.EstiloMovil:classes.EstiloPC}>\n                <SideBar\n                    top={\n                        <div>\n                            \n                        </div>\n                    }\n                    center={\n                        <ChatList className='chat-list' onClick={(e)=>{actualizarMensajes(e)}} dataSource={chats.map(chat=>(chat.chat))}/>\n                    }\n                    bottom={\n                        <div>\n                            \n                        </div>\n                    }/>\n            </div>\n            <IconButton\n                className={classes.EstiloMovil}\n                style={{\n                    position: atras?\"relative\":\"absolute\",\n                    left: \"0px\",\n                    top: \"70px\",\n                    zIndex: 100,\n                }}\n                onClick={()=>{setatras(!atras)}}\n            >\n                <Atras/>\n            </IconButton>\n            <div className={atras?classes.EstiloPC:classes.EstiloVacio} className='right-panel'>\n                {\n                    cargando && <Cargando/>\n                }\n                {\n                    !cargando && chats.length===0 && (<Alerta className={classes.inputAncho} style={{marginTop:\"15px\"}} variant=\"outlined\" severity=\"info\">\n                        No tienes ningún chat aún.\n                    </Alerta>)                    \n                }\n                {\n                    chatSeleccionado!==null &&\n                        <ChatItem\n                            avatar={chatSeleccionado.avatar}\n                            alt={'Reactjs'}\n                            title={chatSeleccionado.title}\n                            subtitle={chatSeleccionado.emisor.id===state.datosSesion.id?\n                                `${chatSeleccionado.receptor.nombre} ${chatSeleccionado.receptor.apellido}`:\n                                `${chatSeleccionado.emisor.nombre} ${chatSeleccionado.emisor.apellido}`}\n                            date={null}\n                            unread={0}\n                        />\n                }\n                {\n                    //Se hacen un conjunto de condiciones para mostrar o no el botón de solicitud de reseña\n                    //Si el chat no esta relacionado a una solicitud el botón no se muestra, tampoco se muestra el botón al propio\n                    //proveedor de servicios, tampoco si la publicación es de tipo solicitud,\n                    !cargando && chatSeleccionado!==null && !atras &&\n                    (chatSeleccionado.solicitud===null?(chatSeleccionado.receptor.id===state.datosSesion.id):\n                    (chatSeleccionado.solicitud.tipo?chatSeleccionado.receptor.id===state.datosSesion.id:chatSeleccionado.emisor.id===state.datosSesion.id)) &&\n                        <div>\n                            <Boton disabled={deshabilitado} onClick={()=>setconfirmacion(true)} color=\"primary\" className={classes.BotonSolicitar} variant=\"contained\">\n                                Petición de reseña\n                            </Boton>\n                            <Boton disabled={deshabilitado} onClick={()=>setconfirmacion(true)} color=\"primary\" className={classes.BotonSolicitarMovil} variant=\"contained\">\n                                <StarRate/>\n                            </Boton>\n                        </div>\n                }\n                {\n                    confirmacion &&\n                    <AlertaSi_No\n                    mensaje=\"Esta acción solo se debe realizar cuando ya se haya cumplido con el servicio pactado. ¿Está seguro que quiere enviar la petición?\"\n                    funcionAceptar={enviarNotificacion}\n                    titulo=\"Enviar petición de reseña al cliente\"/> \n                }\n                <AlertaMensaje mensaje=\"¡Petición de reseña enviada!\" setabrir={setabrir} abrir={abrir}/>\n                <MessageList\n                    className='message-list'\n                    lockable={true}\n                    downButtonBadge={10}\n                    dataSource={mensajes}\n                />\n                {\n                    chatSeleccionado!==null &&\n                    <Input\n                    placeholder=\"Escribe tu mensaje.\"\n                    defaultValue=\"\"\n                    onChange={(e)=>{setcontenido(e.target.value)}}\n                    //ref='input'\n                    multiline={true}\n                    onKeyPress={(e) => {\n                        if (e.shiftKey && e.charCode === 13) {\n                            return true;\n                        }\n                        if (e.charCode === 13) {\n                            agregarMensaje();\n                            e.preventDefault();\n                            return false;\n                        }\n                    }}\n                    rightButtons={\n                        <Button\n                            color='white'\n                            backgroundColor='black'\n                            text='Enviar'\n                            onClick={()=>{agregarMensaje()}} />\n                    } />\n                }\n            </div>\n        </div>\n    );\n    \n}\n\nexport default Chat;\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport './App.css';\r\n//Enrutamiento\r\nimport {BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n//Material-UI\r\nimport {CssBaseline} from '@material-ui/core/';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n//Componentes de vistas\r\nimport Nav from './componentes/Nav.js';\r\nimport Footer from './componentes/Footer.js';\r\nimport Categoria from './componentes/Categoria/Categoria.js';\r\nimport Inicio from './componentes/Inicio/Inicio.js';\r\nimport Publicacion from './componentes/Publicacion/Publicacion.js';\r\nimport ModificarPerfilProveedor from './componentes/Proveedor/ModificarPerfilProveedor.js';\r\nimport MiPerfil from './componentes/Proveedor/MiPerfil.js';\r\nimport CrearPublicacion from './componentes/Publicacion/CrearPublicacion.js';\r\nimport VerificarIdentidad from './componentes/GestionAdministrador/VerificarIdentidad.js';\r\nimport PestanaReportes from './componentes/GestionAdministrador/PestanaReportes.js';\r\nimport RegistrarSesion from './componentes/Sesion/Registrar.js';\r\nimport MisPublicaciones from './componentes/Publicacion/MisPublicaciones.js';\r\nimport PreguntasFrecuentes from './componentes/Footer/PreguntasFrecuentes.js';\r\nimport SobreNosotros from './componentes/Footer/SobreNosotros.js';\r\nimport VerificarMiIdentidad from './componentes/Proveedor/VerificarMiIdentidad.js';\r\nimport Notificaciones from './componentes/Notificaciones/Notificaciones.js';\r\nimport Chat from './componentes/Chat/Chat.js';\r\n\r\nimport { ObtenerEstadoAplicacion } from './Estados/AplicacionEstado'\r\nimport TemaServia from './TemaServia'\r\n\r\nconst theme = createMuiTheme(TemaServia);\r\n\r\nfunction App() { \r\n  const { state } = useContext(ObtenerEstadoAplicacion);\r\n  const [aux, setaux] = useState(false)\r\n  useEffect(()=>{\r\n    setaux(true)\r\n  },[])\r\n\r\n  //Este componente define las rutas de acceso a ciertos componentes de las vistas\r\n  return (\r\n    <div className=\"App\" style={{height: \"auto\"}}>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <Nav/>\r\n          <React.Fragment>\r\n              <CssBaseline/>\r\n                <div style={{minHeight:\"calc(100vh - 130px)\"}} className=\"Fondo\">\r\n                  <Switch>\r\n                    <Route exact path={state.ruta+\"/\"}><Inicio tipo={true}/></Route>\r\n                    <Route path={state.ruta+\"/crear-publicacion\"}>{aux && state.datosSesion.tipo<2? <Redirect to=\"/\" />:<CrearPublicacion modificar={false} tipoPublicacion={true}/>}</Route>\r\n                    <Route path={state.ruta+\"/solicitar-servicio\"}>{aux && state.datosSesion.tipo===0? <Redirect to=\"/\" />:<CrearPublicacion modificar={false} tipoPublicacion={false}/>}</Route>\r\n                    <Route path={state.ruta+\"/modificar-publicacion/:id\"}>{aux && state.datosSesion.tipo<0? <Redirect to=\"/\" />:<CrearPublicacion modificar={true} tipoPublicacion={true}/>}</Route>\r\n                    <Route path={state.ruta+\"/modificar-solicitud-servicio/:id\"}>{aux && state.datosSesion.tipo===0? <Redirect to=\"/\" />:<CrearPublicacion modificar={true} tipoPublicacion={false}/>}</Route>\r\n                    <Route path={state.ruta+\"/publicaciones/:id\"}><Categoria/></Route>           \r\n                    <Route path={state.ruta+\"/registrar\"}>{aux && state.datosSesion.tipo!==0? <Redirect to=\"/\" />:<RegistrarSesion registrar={true}/>}</Route>\r\n                    <Route path={state.ruta+\"/modificar-usuario\"}>{aux && state.datosSesion.tipo===0?<Redirect to=\"/\"/>:<RegistrarSesion registrar={false}/>}</Route>             \r\n                    <Route path={state.ruta+\"/publicacion/:id\"}><Publicacion/></Route>\r\n                    <Route path={state.ruta+\"/mis-publicaciones\"}>{aux && state.datosSesion.tipo<2? <Redirect to=\"/\" />:<MisPublicaciones tipoPublicacion={true}/>}</Route>\r\n                    <Route path={state.ruta+\"/mis-servicios-solicitados\"}>{aux && state.datosSesion.tipo===0? <Redirect to=\"/\" />:<MisPublicaciones tipoPublicacion={false}/>}</Route>\r\n                    <Route path={state.ruta+\"/modificar-proveedor\"}>{aux && state.datosSesion.tipo<2? <Redirect to=\"/\" />:<ModificarPerfilProveedor/>}</Route>\r\n                    <Route path={state.ruta+\"/verificar-mi-identidad\"}>{aux && state.datosSesion.tipo<2?<Redirect to=\"/\" />:<VerificarMiIdentidad/>}</Route>                   \r\n                    <Route path={state.ruta+\"/verificar-identidad\"}>{aux && state.datosSesion.tipo!==3? <Redirect to=\"/\" />:<VerificarIdentidad/>}</Route>\r\n                    <Route path={state.ruta+\"/gestionar-reportes\"}>{aux && state.datosSesion.tipo!==3? <Redirect to=\"/\" />:<PestanaReportes/>}</Route>\r\n                    <Route path={state.ruta+\"/perfil-proveedor/:id\"}><MiPerfil/></Route>\r\n                    <Route path={state.ruta+\"/notificaciones\"}>{aux && state.datosSesion.tipo===0? <Redirect to=\"/\" />:<Notificaciones/>}</Route>\r\n                    <Route path={state.ruta+\"/mis-chats\"}>{aux && state.datosSesion.tipo===0? <Redirect to=\"/\" />:<Chat state={state}/>}</Route>\r\n                    <Route path={state.ruta+\"/preguntas-frecuentes\"}><PreguntasFrecuentes/></Route>\r\n                    <Route path={state.ruta+\"/sobre-nosotros\"}><SobreNosotros/></Route>\r\n\r\n                    {/*<Route path=\"/administrar-categorias\">\r\n                      <ProveerEstadoCategoria>\r\n                        <AdministrarCategorias/>\r\n                      </ProveerEstadoCategoria>\r\n                    </Route>*/}\r\n                </Switch>\r\n              </div>\r\n          </React.Fragment>\r\n          <Footer/>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React,{useContext} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { ObtenerEstadoAplicacion, ProveerEstadoAplicacion } from './Estados/AplicacionEstado'\r\n\r\nfunction Inicial() { \r\n  const { state, dispatch } = useContext(ObtenerEstadoAplicacion);\r\n  return (\r\n    <ProveerEstadoAplicacion>\r\n      <App/>\r\n    </ProveerEstadoAplicacion>\r\n  )\r\n}\r\nReactDOM.render(\r\n  /*<React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>*/\r\n  <Inicial/>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}